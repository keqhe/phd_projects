%!PS-Adobe-2.0 EPSF-2.0
%%Title: output.eps
%%Creator: gnuplot 4.6 patchlevel 3
%%CreationDate: Sat May 31 15:41:16 2014
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded true def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 10.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -100 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (output.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 3)
  /Author (root)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat May 31 15:41:16 2014)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Roman) findfont 300 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
0.50 0.50 0.50 C 1470 960 M
5189 0 V
stroke
LTb
LCb setrgbcolor
1470 960 M
63 0 V
stroke
1290 960 M
[ [(Roman) 300.0 0.0 true true 0 ( 0)]
] -100.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
0.50 0.50 0.50 C 1470 1704 M
5189 0 V
stroke
LTb
LCb setrgbcolor
1470 1704 M
63 0 V
stroke
1290 1704 M
[ [(Roman) 300.0 0.0 true true 0 ( 0.2)]
] -100.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
0.50 0.50 0.50 C 1470 2448 M
5189 0 V
stroke
LTb
LCb setrgbcolor
1470 2448 M
63 0 V
stroke
1290 2448 M
[ [(Roman) 300.0 0.0 true true 0 ( 0.4)]
] -100.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
0.50 0.50 0.50 C 1470 3191 M
5189 0 V
stroke
LTb
LCb setrgbcolor
1470 3191 M
63 0 V
stroke
1290 3191 M
[ [(Roman) 300.0 0.0 true true 0 ( 0.6)]
] -100.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
0.50 0.50 0.50 C 1470 3935 M
5189 0 V
stroke
LTb
LCb setrgbcolor
1470 3935 M
63 0 V
stroke
1290 3935 M
[ [(Roman) 300.0 0.0 true true 0 ( 0.8)]
] -100.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
0.50 0.50 0.50 C 1470 4679 M
5189 0 V
stroke
LTb
LCb setrgbcolor
1470 4679 M
63 0 V
stroke
1290 4679 M
[ [(Roman) 300.0 0.0 true true 0 ( 1)]
] -100.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
0.50 0.50 0.50 C 1470 960 M
0 3719 V
stroke
LTb
LCb setrgbcolor
1470 960 M
0 63 V
stroke
1470 660 M
[ [(Roman) 300.0 0.0 true true 0 ( 0)]
] -100.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
0.50 0.50 0.50 C 2767 960 M
0 3719 V
stroke
LTb
LCb setrgbcolor
2767 960 M
0 63 V
stroke
2767 660 M
[ [(Roman) 300.0 0.0 true true 0 ( 50)]
] -100.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
0.50 0.50 0.50 C 4065 960 M
0 3719 V
stroke
LTb
LCb setrgbcolor
4065 960 M
0 63 V
stroke
4065 660 M
[ [(Roman) 300.0 0.0 true true 0 ( 100)]
] -100.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
0.50 0.50 0.50 C 5362 960 M
0 63 V
0 600 R
0 3056 V
stroke
LTb
LCb setrgbcolor
5362 960 M
0 63 V
stroke
5362 660 M
[ [(Roman) 300.0 0.0 true true 0 ( 150)]
] -100.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
0.50 0.50 0.50 C 6659 960 M
0 3719 V
stroke
LTb
LCb setrgbcolor
6659 960 M
0 63 V
stroke
6659 660 M
[ [(Roman) 300.0 0.0 true true 0 ( 200)]
] -100.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCb setrgbcolor
1470 4679 N
0 -3719 V
5189 0 V
0 3719 V
-5189 0 V
Z stroke
LCb setrgbcolor
240 2819 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Roman) 300.0 0.0 true true 0 (CDF)]
] -100.0 MCshow
grestore
LTb
LCb setrgbcolor
4064 210 M
[ [(Roman) 300.0 0.0 true true 0 (latency \(micro sec\))]
] -100.0 MCshow
LTb
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
% Begin plot #1
2.000 UP
4.000 UL
LT0
0.63 0.00 0.00 C LCb setrgbcolor
5336 1473 M
[ [(Roman) 300.0 0.0 true true 0 (0G/s)]
] -100.0 MRshow
LT0
0.63 0.00 0.00 C 5516 1473 M
783 0 V
2248 964 M
104 3 V
260 4 V
311 4 V
130 4 V
26 3 V
51 4 V
26 15 V
26 7 V
26 8 V
26 4 V
52 3 V
52 4 V
130 4 V
129 3 V
26 12 V
26 3 V
52 4 V
26 11 V
26 11 V
26 4 V
26 4 V
78 3 V
52 4 V
78 4 V
77 4 V
26 14 V
26 4 V
52 4 V
26 4 V
26 7 V
26 8 V
52 18 V
26 19 V
26 3 V
26 365 V
26 89 V
26 89 V
26 216 V
26 324 V
26 398 V
25 141 V
26 126 V
26 101 V
26 59 V
26 60 V
26 15 V
26 33 V
26 22 V
26 19 V
26 22 V
26 30 V
26 48 V
26 101 V
26 89 V
26 82 V
26 164 V
26 171 V
26 111 V
25 45 V
26 33 V
26 8 V
26 18 V
26 11 V
26 34 V
26 19 V
26 137 V
26 11 V
26 23 V
26 52 V
26 104 V
26 85 V
26 4 V
26 4 V
26 4 V
26 22 V
155 4 V
130 3 V
182 4 V
2248 964 Pls
2352 967 Pls
2612 971 Pls
2923 975 Pls
3053 979 Pls
3079 982 Pls
3130 986 Pls
3156 1001 Pls
3182 1008 Pls
3208 1016 Pls
3234 1020 Pls
3286 1023 Pls
3338 1027 Pls
3468 1031 Pls
3597 1034 Pls
3623 1046 Pls
3649 1049 Pls
3701 1053 Pls
3727 1064 Pls
3753 1075 Pls
3779 1079 Pls
3805 1083 Pls
3883 1086 Pls
3935 1090 Pls
4013 1094 Pls
4090 1098 Pls
4116 1112 Pls
4142 1116 Pls
4194 1120 Pls
4220 1124 Pls
4246 1131 Pls
4272 1139 Pls
4324 1157 Pls
4350 1176 Pls
4376 1179 Pls
4402 1544 Pls
4428 1633 Pls
4454 1722 Pls
4480 1938 Pls
4506 2262 Pls
4532 2660 Pls
4557 2801 Pls
4583 2927 Pls
4609 3028 Pls
4635 3087 Pls
4661 3147 Pls
4687 3162 Pls
4713 3195 Pls
4739 3217 Pls
4765 3236 Pls
4791 3258 Pls
4817 3288 Pls
4843 3336 Pls
4869 3437 Pls
4895 3526 Pls
4921 3608 Pls
4947 3772 Pls
4973 3943 Pls
4999 4054 Pls
5024 4099 Pls
5050 4132 Pls
5076 4140 Pls
5102 4158 Pls
5128 4169 Pls
5154 4203 Pls
5180 4222 Pls
5206 4359 Pls
5232 4370 Pls
5258 4393 Pls
5284 4445 Pls
5310 4549 Pls
5336 4634 Pls
5362 4638 Pls
5388 4642 Pls
5414 4646 Pls
5440 4668 Pls
5595 4672 Pls
5725 4675 Pls
5907 4679 Pls
5907 1473 Pls
% End plot #1
% Begin plot #2
2.000 UP
4.000 UL
LT1
0.00 0.63 0.00 C LCb setrgbcolor
5336 1173 M
[ [(Roman) 300.0 0.0 true true 0 (10G/s)]
] -100.0 MRshow
LT1
0.00 0.63 0.00 C 5516 1173 M
783 0 V
1781 964 M
1427 3 V
26 8 V
52 4 V
26 11 V
26 59 V
26 15 V
26 15 V
52 11 V
26 15 V
26 19 V
26 7 V
26 4 V
181 11 V
26 7 V
26 12 V
26 7 V
26 26 V
26 56 V
26 30 V
26 14 V
26 19 V
26 7 V
26 34 V
26 11 V
26 8 V
26 3 V
51 23 V
26 3 V
26 15 V
26 8 V
26 3 V
182 4 V
26 4 V
78 7 V
26 49 V
25 37 V
26 22 V
26 41 V
26 82 V
26 398 V
26 148 V
26 138 V
26 123 V
26 189 V
26 536 V
26 126 V
26 79 V
26 52 V
26 41 V
26 119 V
26 33 V
26 22 V
26 23 V
25 3 V
26 34 V
26 30 V
26 22 V
26 41 V
26 48 V
26 48 V
26 194 V
26 156 V
26 138 V
26 104 V
26 48 V
26 37 V
26 23 V
26 7 V
26 19 V
26 7 V
26 4 V
51 7 V
130 4 V
1781 964 Circle
3208 967 Circle
3234 975 Circle
3286 979 Circle
3312 990 Circle
3338 1049 Circle
3364 1064 Circle
3390 1079 Circle
3442 1090 Circle
3468 1105 Circle
3494 1124 Circle
3520 1131 Circle
3546 1135 Circle
3727 1146 Circle
3753 1153 Circle
3779 1165 Circle
3805 1172 Circle
3831 1198 Circle
3857 1254 Circle
3883 1284 Circle
3909 1298 Circle
3935 1317 Circle
3961 1324 Circle
3987 1358 Circle
4013 1369 Circle
4039 1377 Circle
4065 1380 Circle
4116 1403 Circle
4142 1406 Circle
4168 1421 Circle
4194 1429 Circle
4220 1432 Circle
4402 1436 Circle
4428 1440 Circle
4506 1447 Circle
4532 1496 Circle
4557 1533 Circle
4583 1555 Circle
4609 1596 Circle
4635 1678 Circle
4661 2076 Circle
4687 2224 Circle
4713 2362 Circle
4739 2485 Circle
4765 2674 Circle
4791 3210 Circle
4817 3336 Circle
4843 3415 Circle
4869 3467 Circle
4895 3508 Circle
4921 3627 Circle
4947 3660 Circle
4973 3682 Circle
4999 3705 Circle
5024 3708 Circle
5050 3742 Circle
5076 3772 Circle
5102 3794 Circle
5128 3835 Circle
5154 3883 Circle
5180 3931 Circle
5206 4125 Circle
5232 4281 Circle
5258 4419 Circle
5284 4523 Circle
5310 4571 Circle
5336 4608 Circle
5362 4631 Circle
5388 4638 Circle
5414 4657 Circle
5440 4664 Circle
5466 4668 Circle
5517 4675 Circle
5647 4679 Circle
5907 1173 Circle
% End plot #2
1.000 UL
LTb
LCb setrgbcolor
1470 4679 N
0 -3719 V
5189 0 V
0 3719 V
-5189 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Roman
