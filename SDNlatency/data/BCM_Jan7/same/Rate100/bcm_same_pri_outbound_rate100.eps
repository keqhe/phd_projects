%!PS-Adobe-2.0 EPSF-2.0
%%Title: bcm_same_pri_outbound_rate100.eps
%%Creator: gnuplot 4.4 patchlevel 3
%%CreationDate: Wed Jan  8 11:12:36 2014
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -100 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (bcm_same_pri_outbound_rate100.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 3)
  /Author (root)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Jan  8 11:12:36 2014)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Roman) findfont 300 scalefont setfont
1.000 UL
LTb
1470 1198 M
63 0 V
5126 0 R
-63 0 V
stroke
1290 1198 M
[ [(Roman) 300.0 0.0 true true 0 ( 0)]
] -100.0 MRshow
1.000 UL
LTb
1470 1847 M
63 0 V
5126 0 R
-63 0 V
stroke
1290 1847 M
[ [(Roman) 300.0 0.0 true true 0 ( 20)]
] -100.0 MRshow
1.000 UL
LTb
1470 2495 M
63 0 V
5126 0 R
-63 0 V
stroke
1290 2495 M
[ [(Roman) 300.0 0.0 true true 0 ( 40)]
] -100.0 MRshow
1.000 UL
LTb
1470 3144 M
63 0 V
5126 0 R
-63 0 V
stroke
1290 3144 M
[ [(Roman) 300.0 0.0 true true 0 ( 60)]
] -100.0 MRshow
1.000 UL
LTb
1470 3792 M
63 0 V
5126 0 R
-63 0 V
stroke
1290 3792 M
[ [(Roman) 300.0 0.0 true true 0 ( 80)]
] -100.0 MRshow
1.000 UL
LTb
1470 4441 M
63 0 V
5126 0 R
-63 0 V
stroke
1290 4441 M
[ [(Roman) 300.0 0.0 true true 0 ( 100)]
] -100.0 MRshow
1.000 UL
LTb
1470 1198 M
0 63 V
0 3180 R
0 -63 V
stroke
1470 898 M
[ [(Roman) 300.0 0.0 true true 0 ( 0)]
] -100.0 MCshow
1.000 UL
LTb
2146 1198 M
0 63 V
0 3180 R
0 -63 V
stroke
2146 898 M
[ [(Roman) 300.0 0.0 true true 0 ( 100)]
] -100.0 MCshow
1.000 UL
LTb
2821 1198 M
0 63 V
0 3180 R
0 -63 V
stroke
2821 898 M
[ [(Roman) 300.0 0.0 true true 0 ( 200)]
] -100.0 MCshow
1.000 UL
LTb
3497 1198 M
0 63 V
0 3180 R
0 -63 V
stroke
3497 898 M
[ [(Roman) 300.0 0.0 true true 0 ( 300)]
] -100.0 MCshow
1.000 UL
LTb
4173 1198 M
0 63 V
0 3180 R
0 -63 V
stroke
4173 898 M
[ [(Roman) 300.0 0.0 true true 0 ( 400)]
] -100.0 MCshow
1.000 UL
LTb
4848 1198 M
0 63 V
0 3180 R
0 -63 V
stroke
4848 898 M
[ [(Roman) 300.0 0.0 true true 0 ( 500)]
] -100.0 MCshow
1.000 UL
LTb
5524 1198 M
0 63 V
0 3180 R
0 -63 V
stroke
5524 898 M
[ [(Roman) 300.0 0.0 true true 0 ( 600)]
] -100.0 MCshow
1.000 UL
LTb
6200 1198 M
0 63 V
0 3180 R
0 -63 V
stroke
6200 898 M
[ [(Roman) 300.0 0.0 true true 0 ( 700)]
] -100.0 MCshow
1.000 UL
LTb
1.000 UL
LTb
1470 4441 N
0 -3243 V
5189 0 V
0 3243 V
-5189 0 V
Z stroke
LCb setrgbcolor
240 2819 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Roman) 300.0 0.0 true true 0 (latency \(ms\))]
] -100.0 MCshow
grestore
LTb
LCb setrgbcolor
4064 448 M
[ [(Roman) 300.0 0.0 true true 0 (openflow rule #)]
] -100.0 MCshow
LTb
1.000 UP
1.000 UL
LTb
% Begin plot #1
0.500 UP
1.000 UL
LT0
LCb setrgbcolor
5336 4228 M
[ [(Roman) 300.0 0.0 true true 0 (insertion rate = 100/s)]
] -100.0 MRshow
LT0
1477 1359 Pls
1484 1378 Pls
1490 1409 Pls
1497 1338 Pls
1504 1368 Pls
1511 1398 Pls
1517 1360 Pls
1524 1364 Pls
1531 1381 Pls
1538 1402 Pls
1544 1374 Pls
1551 1364 Pls
1558 1380 Pls
1565 1360 Pls
1571 1391 Pls
1578 1371 Pls
1585 1363 Pls
1592 1366 Pls
1598 1375 Pls
1605 1385 Pls
1612 1379 Pls
1619 1385 Pls
1625 1389 Pls
1632 1369 Pls
1639 1386 Pls
1646 1378 Pls
1652 1366 Pls
1659 1380 Pls
1666 1388 Pls
1673 1366 Pls
1679 1397 Pls
1686 1405 Pls
1693 1390 Pls
1700 1374 Pls
1706 1398 Pls
1713 1397 Pls
1720 1409 Pls
1727 1417 Pls
1734 1589 Pls
1740 1597 Pls
1747 1571 Pls
1754 1551 Pls
1761 1518 Pls
1767 1557 Pls
1774 1524 Pls
1781 1490 Pls
1788 1473 Pls
1794 1454 Pls
1801 1446 Pls
1808 1402 Pls
1815 1402 Pls
1821 1400 Pls
1828 1402 Pls
1835 1395 Pls
1842 1387 Pls
1848 1368 Pls
1855 1386 Pls
1862 1387 Pls
1869 1396 Pls
1875 1389 Pls
1882 1380 Pls
1889 1391 Pls
1896 1399 Pls
1902 1397 Pls
1909 1396 Pls
1916 1383 Pls
1923 1425 Pls
1929 1389 Pls
1936 1394 Pls
1943 1463 Pls
1950 1418 Pls
1956 1442 Pls
1963 1447 Pls
1970 1473 Pls
1977 1474 Pls
1983 1475 Pls
1990 1449 Pls
1997 1437 Pls
2004 1426 Pls
2011 1409 Pls
2017 1409 Pls
2024 1390 Pls
2031 1378 Pls
2038 1389 Pls
2044 1392 Pls
2051 1536 Pls
2058 1493 Pls
2065 1467 Pls
2071 1418 Pls
2078 1410 Pls
2085 1415 Pls
2092 1429 Pls
2098 1434 Pls
2105 1493 Pls
2112 1427 Pls
2119 1467 Pls
2125 1452 Pls
2132 1485 Pls
2139 1440 Pls
2146 1504 Pls
2152 1551 Pls
2159 1526 Pls
2166 1536 Pls
2173 1575 Pls
2179 1587 Pls
2186 1536 Pls
2193 1597 Pls
2200 1507 Pls
2206 1674 Pls
2213 1542 Pls
2220 1533 Pls
2227 1420 Pls
2233 1444 Pls
2240 1438 Pls
2247 1397 Pls
2254 1442 Pls
2261 1436 Pls
2267 1460 Pls
2274 1384 Pls
2281 1440 Pls
2288 1442 Pls
2294 1419 Pls
2301 1409 Pls
2308 1415 Pls
2315 1518 Pls
2321 1506 Pls
2328 1517 Pls
2335 1473 Pls
2342 1473 Pls
2348 1463 Pls
2355 1489 Pls
2362 1466 Pls
2369 1468 Pls
2375 1430 Pls
2382 1522 Pls
2389 1442 Pls
2396 1627 Pls
2402 1537 Pls
2409 1589 Pls
2416 1594 Pls
2423 1472 Pls
2429 1521 Pls
2436 1539 Pls
2443 1485 Pls
2450 1475 Pls
2456 1416 Pls
2463 1426 Pls
2470 1429 Pls
2477 1416 Pls
2483 1417 Pls
2490 1403 Pls
2497 1412 Pls
2504 1422 Pls
2511 1419 Pls
2517 1418 Pls
2524 1411 Pls
2531 1430 Pls
2538 1458 Pls
2544 1536 Pls
2551 1410 Pls
2558 1607 Pls
2565 1550 Pls
2571 1503 Pls
2578 1528 Pls
2585 1499 Pls
2592 1533 Pls
2598 1511 Pls
2605 1550 Pls
2612 1722 Pls
2619 1583 Pls
2625 1553 Pls
2632 1643 Pls
2639 1518 Pls
2646 1487 Pls
2652 1503 Pls
2659 1450 Pls
2666 1445 Pls
2673 1489 Pls
2679 1463 Pls
2686 1453 Pls
2693 1442 Pls
2700 1437 Pls
2706 1490 Pls
2713 1436 Pls
2720 1449 Pls
2727 1499 Pls
2733 1438 Pls
2740 1487 Pls
2747 1583 Pls
2754 1581 Pls
2760 1502 Pls
2767 1668 Pls
2774 1550 Pls
2781 1464 Pls
2788 1632 Pls
2794 1531 Pls
2801 1566 Pls
2808 1523 Pls
2815 1648 Pls
2821 1567 Pls
2828 1584 Pls
2835 1731 Pls
2842 1647 Pls
2848 1585 Pls
2855 1598 Pls
2862 1537 Pls
2869 1562 Pls
2875 1522 Pls
2882 1484 Pls
2889 1459 Pls
2896 1459 Pls
2902 1462 Pls
2909 1463 Pls
2916 1450 Pls
2923 1442 Pls
2929 1448 Pls
2936 1439 Pls
2943 1464 Pls
2950 1477 Pls
2956 1579 Pls
2963 1559 Pls
2970 1482 Pls
2977 1671 Pls
2983 1613 Pls
2990 1537 Pls
2997 1549 Pls
3004 1488 Pls
3010 1610 Pls
3017 1552 Pls
3024 1500 Pls
3031 1729 Pls
3038 1678 Pls
3044 1686 Pls
3051 1571 Pls
3058 1568 Pls
3065 1543 Pls
3071 1494 Pls
3078 1461 Pls
3085 1536 Pls
3092 1504 Pls
3098 1469 Pls
3105 1491 Pls
3112 1464 Pls
3119 1444 Pls
3125 1455 Pls
3132 1481 Pls
3139 1479 Pls
3146 1478 Pls
3152 1464 Pls
3159 1549 Pls
3166 1624 Pls
3173 1539 Pls
3179 1689 Pls
3186 1562 Pls
3193 1615 Pls
3200 1597 Pls
3206 1504 Pls
3213 1595 Pls
3220 1755 Pls
3227 1789 Pls
3233 1716 Pls
3240 1670 Pls
3247 1637 Pls
3254 1636 Pls
3260 1795 Pls
3267 1701 Pls
3274 1611 Pls
3281 1484 Pls
3288 1543 Pls
3294 1531 Pls
3301 1471 Pls
3308 1447 Pls
3315 1500 Pls
3321 1490 Pls
3328 1469 Pls
3335 1498 Pls
3342 1497 Pls
3348 1501 Pls
3355 1481 Pls
3362 1515 Pls
3369 1474 Pls
3375 1506 Pls
3382 1725 Pls
3389 1640 Pls
3396 1595 Pls
3402 1557 Pls
3409 1671 Pls
3416 1596 Pls
3423 1510 Pls
3429 1485 Pls
3436 1599 Pls
3443 1608 Pls
3450 1703 Pls
3456 1658 Pls
3463 1580 Pls
3470 1661 Pls
3477 1584 Pls
3483 1577 Pls
3490 1661 Pls
3497 1749 Pls
3504 1664 Pls
3510 1566 Pls
3517 1524 Pls
3524 1491 Pls
3531 1531 Pls
3537 1491 Pls
3544 1520 Pls
3551 1520 Pls
3558 1508 Pls
3565 1534 Pls
3571 1499 Pls
3578 1570 Pls
3585 1689 Pls
3592 1586 Pls
3598 1615 Pls
3605 1675 Pls
3612 1677 Pls
3619 1544 Pls
3625 1553 Pls
3632 1525 Pls
3639 1535 Pls
3646 1566 Pls
3652 1607 Pls
3659 1708 Pls
3666 1586 Pls
3673 1699 Pls
3679 1764 Pls
3686 1698 Pls
3693 1659 Pls
3706 1548 Pls
3713 1674 Pls
3720 1632 Pls
3727 1542 Pls
3733 1486 Pls
3740 1578 Pls
3747 1514 Pls
3754 1462 Pls
3760 1510 Pls
3767 1505 Pls
3774 1608 Pls
3781 1568 Pls
3787 1486 Pls
3794 1581 Pls
3801 1642 Pls
3808 1608 Pls
3815 1551 Pls
3821 1715 Pls
3828 1695 Pls
3835 1629 Pls
3842 1570 Pls
3848 1515 Pls
3855 1557 Pls
3862 1502 Pls
3869 1840 Pls
3875 1760 Pls
3882 1679 Pls
3889 1745 Pls
3896 1567 Pls
3902 1585 Pls
3909 1628 Pls
3916 1635 Pls
3923 1617 Pls
3929 1610 Pls
3936 1458 Pls
3943 1476 Pls
3950 1569 Pls
3956 1523 Pls
3963 1532 Pls
3970 1486 Pls
3977 1538 Pls
3983 1531 Pls
3990 1499 Pls
3997 1581 Pls
4004 1602 Pls
4010 1555 Pls
4017 1792 Pls
4024 1854 Pls
4031 1910 Pls
4037 1886 Pls
4044 1828 Pls
4051 1677 Pls
4058 1780 Pls
4065 1865 Pls
4071 1882 Pls
4078 1824 Pls
4085 1860 Pls
4092 1778 Pls
4098 1770 Pls
4105 1920 Pls
4112 1753 Pls
4119 1685 Pls
4125 1552 Pls
4132 1640 Pls
4139 1536 Pls
4146 1639 Pls
4152 1576 Pls
4159 1506 Pls
4166 1557 Pls
4173 1475 Pls
4179 1658 Pls
4186 1588 Pls
4193 1541 Pls
4200 1581 Pls
4206 1463 Pls
4213 1709 Pls
4220 1677 Pls
4227 1679 Pls
4233 1582 Pls
4240 1584 Pls
4247 1834 Pls
4254 1701 Pls
4260 1727 Pls
4267 1600 Pls
4274 1683 Pls
4281 1658 Pls
4287 1788 Pls
4294 1633 Pls
4301 1570 Pls
4314 1585 Pls
4321 1713 Pls
4328 1653 Pls
4335 1596 Pls
4342 1497 Pls
4348 1514 Pls
4355 1545 Pls
4362 1514 Pls
4369 1527 Pls
4375 1528 Pls
4382 1530 Pls
4389 1519 Pls
4396 1519 Pls
4402 1534 Pls
4409 1521 Pls
4416 1548 Pls
4423 1589 Pls
4429 1574 Pls
4436 1548 Pls
4443 1748 Pls
4450 1668 Pls
4456 1776 Pls
4463 1749 Pls
4470 1681 Pls
4477 1588 Pls
4483 1530 Pls
4490 1732 Pls
4497 1744 Pls
4504 1620 Pls
4510 1779 Pls
4517 1792 Pls
4524 1713 Pls
4531 1581 Pls
4537 1693 Pls
4544 1690 Pls
4551 1638 Pls
4558 1610 Pls
4564 1624 Pls
4571 1599 Pls
4578 1548 Pls
4585 1603 Pls
4592 1494 Pls
4598 1691 Pls
4605 1527 Pls
4612 1658 Pls
4619 1541 Pls
4625 1686 Pls
4632 1636 Pls
4639 1672 Pls
4646 1791 Pls
4652 1798 Pls
4659 1818 Pls
4666 1879 Pls
4673 1775 Pls
4679 1751 Pls
4686 1689 Pls
4693 1887 Pls
4700 1779 Pls
4706 1772 Pls
4713 1670 Pls
4720 1857 Pls
4727 1919 Pls
4733 1846 Pls
4740 1692 Pls
4747 1635 Pls
4754 1648 Pls
4760 1690 Pls
4767 1493 Pls
4774 1565 Pls
4781 1549 Pls
4787 1594 Pls
4794 1582 Pls
4801 1456 Pls
4808 1625 Pls
4814 1526 Pls
4821 1677 Pls
4828 1538 Pls
4835 1556 Pls
4841 1589 Pls
4848 1696 Pls
4855 1515 Pls
4862 1618 Pls
4869 1879 Pls
4875 1755 Pls
4882 1760 Pls
4889 1632 Pls
4896 1677 Pls
4902 1610 Pls
4909 1827 Pls
4916 1727 Pls
4923 1628 Pls
4929 2032 Pls
4936 1872 Pls
4943 1888 Pls
4950 1692 Pls
4956 1687 Pls
4963 1645 Pls
4970 1721 Pls
4977 1683 Pls
4983 1614 Pls
4990 1656 Pls
4997 1627 Pls
5004 1628 Pls
5010 1656 Pls
5017 1643 Pls
5024 1726 Pls
5031 1601 Pls
5037 1587 Pls
5044 1743 Pls
5051 1756 Pls
5058 1743 Pls
5064 1703 Pls
5071 1678 Pls
5078 1888 Pls
5085 1770 Pls
5091 1749 Pls
5098 1684 Pls
5105 1713 Pls
5112 2003 Pls
5119 1826 Pls
5125 1919 Pls
5132 1984 Pls
5139 2110 Pls
5152 1875 Pls
5159 1648 Pls
5166 1762 Pls
5173 1624 Pls
5179 1654 Pls
5186 1594 Pls
5193 1638 Pls
5200 1579 Pls
5206 1635 Pls
5213 1564 Pls
5220 1665 Pls
5227 1491 Pls
5233 1682 Pls
5240 1562 Pls
5247 1654 Pls
5254 1594 Pls
5260 1652 Pls
5267 1533 Pls
5274 1847 Pls
5281 1715 Pls
5287 1807 Pls
5294 1843 Pls
5301 1685 Pls
5308 1709 Pls
5314 1685 Pls
5321 1676 Pls
5328 1649 Pls
5335 1698 Pls
5341 1829 Pls
5348 1913 Pls
5355 1834 Pls
5362 1691 Pls
5369 1670 Pls
5375 1513 Pls
5382 1721 Pls
5389 1595 Pls
5396 1636 Pls
5402 1524 Pls
5409 1640 Pls
5416 1607 Pls
5423 1723 Pls
5429 1504 Pls
5436 1829 Pls
5443 1629 Pls
5450 1667 Pls
5456 1722 Pls
5463 1670 Pls
5470 1818 Pls
5477 1598 Pls
5483 1941 Pls
5490 1751 Pls
5497 1811 Pls
5504 1887 Pls
5510 1746 Pls
5517 2179 Pls
5524 2025 Pls
5531 1913 Pls
5537 1877 Pls
5544 1767 Pls
5551 1859 Pls
5558 2005 Pls
5564 1914 Pls
5571 1822 Pls
5578 1778 Pls
5585 1828 Pls
5591 1786 Pls
5598 1664 Pls
5605 1760 Pls
5612 1702 Pls
5618 1690 Pls
5625 1786 Pls
5632 1724 Pls
5639 1705 Pls
5646 1677 Pls
5652 1633 Pls
5659 1525 Pls
5666 1727 Pls
5673 1715 Pls
5679 1653 Pls
5686 1795 Pls
5693 1675 Pls
5700 1712 Pls
5706 1746 Pls
5713 1673 Pls
5720 1883 Pls
5727 1906 Pls
5733 1976 Pls
5740 1906 Pls
5747 1818 Pls
5754 1703 Pls
5760 1977 Pls
5767 1811 Pls
5774 1679 Pls
5781 1908 Pls
5787 1725 Pls
5794 1619 Pls
5801 1690 Pls
5808 1538 Pls
5814 1630 Pls
5821 1638 Pls
5828 1502 Pls
5835 1657 Pls
5841 1669 Pls
5848 1653 Pls
5855 1554 Pls
5862 1570 Pls
5868 1702 Pls
5875 1671 Pls
5882 1608 Pls
5889 1629 Pls
5896 1694 Pls
5902 1598 Pls
5909 1797 Pls
5916 1827 Pls
5923 1995 Pls
5929 2112 Pls
5936 2000 Pls
5943 1907 Pls
5950 1796 Pls
5956 1963 Pls
5963 2001 Pls
5970 1872 Pls
5977 1992 Pls
5983 2011 Pls
5990 1818 Pls
5997 1945 Pls
6004 1796 Pls
6010 1728 Pls
6017 1655 Pls
6024 1752 Pls
6031 1752 Pls
6037 1625 Pls
6044 1630 Pls
6051 1603 Pls
6058 1672 Pls
6064 1666 Pls
6071 1596 Pls
6078 1656 Pls
6085 1601 Pls
6091 1691 Pls
6098 1877 Pls
6105 1817 Pls
6112 1840 Pls
6118 1831 Pls
6125 1689 Pls
6132 1867 Pls
6139 1910 Pls
6146 1938 Pls
6152 1898 Pls
6159 1895 Pls
6166 1724 Pls
6173 1787 Pls
6179 1851 Pls
6186 1763 Pls
6193 1744 Pls
6200 1742 Pls
6206 1688 Pls
6213 1516 Pls
6220 1629 Pls
6227 1560 Pls
6233 1656 Pls
6240 1533 Pls
6247 1700 Pls
6254 1647 Pls
6260 1576 Pls
6267 1551 Pls
6274 1661 Pls
6281 1612 Pls
6287 1905 Pls
6294 1904 Pls
6301 1750 Pls
6308 1889 Pls
6314 1957 Pls
6321 1960 Pls
6328 1824 Pls
6335 2271 Pls
6341 2237 Pls
6348 2223 Pls
6355 2395 Pls
6362 2188 Pls
6368 2461 Pls
6375 2290 Pls
6382 2206 Pls
6389 2138 Pls
6395 2035 Pls
6402 2018 Pls
6409 2070 Pls
6416 2019 Pls
6423 1774 Pls
6429 2045 Pls
6436 1857 Pls
6443 2083 Pls
6450 2015 Pls
6456 1932 Pls
6463 1886 Pls
6470 1819 Pls
6477 1841 Pls
6483 1705 Pls
6490 2107 Pls
6497 1922 Pls
6504 1983 Pls
6510 2026 Pls
6517 1980 Pls
6524 1935 Pls
6531 1926 Pls
6537 1813 Pls
6544 2000 Pls
6551 1902 Pls
6558 2035 Pls
6564 2256 Pls
6571 2143 Pls
6578 2034 Pls
6585 2253 Pls
6591 2071 Pls
6598 1924 Pls
6605 1776 Pls
6612 1751 Pls
6618 1600 Pls
6625 1611 Pls
6632 1675 Pls
6639 1596 Pls
6645 1640 Pls
6652 1562 Pls
5907 4228 Pls
% End plot #1
1.000 UL
LTb
1470 4441 N
0 -3243 V
5189 0 V
0 3243 V
-5189 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Roman
