%!PS-Adobe-2.0 EPSF-2.0
%%Title: hp_outbound_same_burst.eps
%%Creator: gnuplot 4.4 patchlevel 3
%%CreationDate: Sat Jan  4 23:59:43 2014
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -100 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (hp_outbound_same_burst.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 3)
  /Author (root)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat Jan  4 23:59:43 2014)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Roman) findfont 300 scalefont setfont
1.000 UL
LTb
2010 1367 M
63 0 V
4586 0 R
-63 0 V
stroke
1830 1367 M
[ [(Roman) 300.0 0.0 true true 0 ( 0)]
] -100.0 MRshow
1.000 UL
LTb
2010 1754 M
63 0 V
4586 0 R
-63 0 V
stroke
1830 1754 M
[ [(Roman) 300.0 0.0 true true 0 ( 20000)]
] -100.0 MRshow
1.000 UL
LTb
2010 2142 M
63 0 V
4586 0 R
-63 0 V
stroke
1830 2142 M
[ [(Roman) 300.0 0.0 true true 0 ( 40000)]
] -100.0 MRshow
1.000 UL
LTb
2010 2529 M
63 0 V
4586 0 R
-63 0 V
stroke
1830 2529 M
[ [(Roman) 300.0 0.0 true true 0 ( 60000)]
] -100.0 MRshow
1.000 UL
LTb
2010 2916 M
63 0 V
4586 0 R
-63 0 V
stroke
1830 2916 M
[ [(Roman) 300.0 0.0 true true 0 ( 80000)]
] -100.0 MRshow
1.000 UL
LTb
2010 3304 M
63 0 V
4586 0 R
-63 0 V
stroke
1830 3304 M
[ [(Roman) 300.0 0.0 true true 0 ( 100000)]
] -100.0 MRshow
1.000 UL
LTb
2010 3691 M
63 0 V
4586 0 R
-63 0 V
stroke
1830 3691 M
[ [(Roman) 300.0 0.0 true true 0 ( 120000)]
] -100.0 MRshow
1.000 UL
LTb
2010 4078 M
63 0 V
4586 0 R
-63 0 V
stroke
1830 4078 M
[ [(Roman) 300.0 0.0 true true 0 ( 140000)]
] -100.0 MRshow
1.000 UL
LTb
2010 1367 M
0 63 V
0 2842 R
0 -63 V
stroke
2010 1067 M
[ [(Roman) 300.0 0.0 true true 0 ( 0)]
] -100.0 MCshow
1.000 UL
LTb
2630 1367 M
0 63 V
0 2842 R
0 -63 V
stroke
2630 1067 M
[ [(Roman) 300.0 0.0 true true 0 ( 100)]
] -100.0 MCshow
1.000 UL
LTb
3250 1367 M
0 63 V
0 2842 R
0 -63 V
stroke
3250 1067 M
[ [(Roman) 300.0 0.0 true true 0 ( 200)]
] -100.0 MCshow
1.000 UL
LTb
3870 1367 M
0 63 V
0 2842 R
0 -63 V
stroke
3870 1067 M
[ [(Roman) 300.0 0.0 true true 0 ( 300)]
] -100.0 MCshow
1.000 UL
LTb
4489 1367 M
0 63 V
0 2842 R
0 -63 V
stroke
4489 1067 M
[ [(Roman) 300.0 0.0 true true 0 ( 400)]
] -100.0 MCshow
1.000 UL
LTb
5109 1367 M
0 63 V
0 2842 R
0 -63 V
stroke
5109 1067 M
[ [(Roman) 300.0 0.0 true true 0 ( 500)]
] -100.0 MCshow
1.000 UL
LTb
5729 1367 M
0 63 V
0 2842 R
0 -63 V
stroke
5729 1067 M
[ [(Roman) 300.0 0.0 true true 0 ( 600)]
] -100.0 MCshow
1.000 UL
LTb
6349 1367 M
0 63 V
0 2842 R
0 -63 V
stroke
6349 1067 M
[ [(Roman) 300.0 0.0 true true 0 ( 700)]
] -100.0 MCshow
1.000 UL
LTb
1.000 UL
LTb
2010 4272 N
0 -2905 V
4649 0 V
0 2905 V
-4649 0 V
Z stroke
LCb setrgbcolor
240 2819 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Roman) 300.0 0.0 true true 0 (latency \(ms\))]
] -100.0 MCshow
grestore
LTb
LCb setrgbcolor
4334 617 M
[ [(Roman) 300.0 0.0 true true 0 (openflow rule #)]
] -100.0 MCshow
LTb
1.000 UP
1.000 UL
LTb
% Begin plot #1
0.500 UP
1.000 UL
LT0
LCb setrgbcolor
5336 4059 M
[ [(Roman) 300.0 0.0 true true 0 (insertion rate = burst)]
] -100.0 MRshow
LT0
2016 1371 Pls
2022 1371 Pls
2029 1371 Pls
2035 1371 Pls
2041 1371 Pls
2047 1371 Pls
2053 1371 Pls
2060 1371 Pls
2066 1371 Pls
2072 1371 Pls
2078 1371 Pls
2084 1372 Pls
2091 1372 Pls
2097 1372 Pls
2103 1372 Pls
2109 1372 Pls
2115 1372 Pls
2122 1372 Pls
2128 1372 Pls
2134 1372 Pls
2140 1373 Pls
2146 1373 Pls
2153 1373 Pls
2159 1373 Pls
2165 1373 Pls
2171 1373 Pls
2177 1373 Pls
2184 1373 Pls
2190 1373 Pls
2196 1373 Pls
2202 1373 Pls
2208 1373 Pls
2215 1373 Pls
2221 1373 Pls
2227 1374 Pls
2233 1374 Pls
2239 1374 Pls
2246 1374 Pls
2252 1374 Pls
2258 1374 Pls
2264 1374 Pls
2270 1374 Pls
2277 1374 Pls
2283 1374 Pls
2289 1375 Pls
2295 1375 Pls
2301 1375 Pls
2308 1375 Pls
2314 1375 Pls
2320 1375 Pls
2326 1375 Pls
2332 1375 Pls
2339 1376 Pls
2345 1376 Pls
2351 1376 Pls
2357 1444 Pls
2363 1445 Pls
2370 1445 Pls
2376 1444 Pls
2382 1445 Pls
2388 1444 Pls
2394 1446 Pls
2401 1444 Pls
2407 1444 Pls
2413 1443 Pls
2419 1443 Pls
2425 1444 Pls
2432 1444 Pls
2438 1444 Pls
2444 1379 Pls
2450 1444 Pls
2456 1445 Pls
2463 1444 Pls
2469 1444 Pls
2475 1444 Pls
2481 1445 Pls
2487 1444 Pls
2493 1443 Pls
2500 1444 Pls
2506 1443 Pls
2512 1444 Pls
2518 1444 Pls
2524 1444 Pls
2531 1444 Pls
2537 1445 Pls
2543 1444 Pls
2549 1444 Pls
2555 1444 Pls
2562 1443 Pls
2568 1444 Pls
2574 1444 Pls
2580 1444 Pls
2586 1444 Pls
2593 1444 Pls
2599 1444 Pls
2605 1386 Pls
2611 1444 Pls
2617 1444 Pls
2624 1445 Pls
2630 1445 Pls
2636 1444 Pls
2642 1443 Pls
2648 1444 Pls
2655 1444 Pls
2661 1443 Pls
2667 1390 Pls
2673 1444 Pls
2679 1444 Pls
2686 1445 Pls
2692 1392 Pls
2698 1444 Pls
2704 1444 Pls
2710 1443 Pls
2717 1444 Pls
2723 1444 Pls
2729 1394 Pls
2735 1444 Pls
2741 1395 Pls
2748 1445 Pls
2754 1444 Pls
2760 1445 Pls
2766 1444 Pls
2772 1443 Pls
2779 1445 Pls
2785 1444 Pls
2791 1399 Pls
2797 1444 Pls
2803 1443 Pls
2810 1444 Pls
2816 1444 Pls
2822 1445 Pls
2828 1401 Pls
2834 1444 Pls
2841 1445 Pls
2847 1404 Pls
2853 1444 Pls
2859 1444 Pls
2865 1444 Pls
2872 1444 Pls
2878 1443 Pls
2884 1446 Pls
2890 1443 Pls
2896 1445 Pls
2903 1444 Pls
2909 1445 Pls
2915 1410 Pls
2921 1446 Pls
2927 1411 Pls
2934 1444 Pls
2940 1444 Pls
2946 1443 Pls
2952 1444 Pls
2958 1444 Pls
2965 1415 Pls
2971 1444 Pls
2977 1416 Pls
2983 1444 Pls
2989 1418 Pls
2996 1445 Pls
3002 1444 Pls
3008 1444 Pls
3014 1421 Pls
3020 1443 Pls
3027 1444 Pls
3033 1444 Pls
3039 1423 Pls
3045 1444 Pls
3051 1444 Pls
3058 1444 Pls
3064 1426 Pls
3070 1444 Pls
3076 1427 Pls
3082 1429 Pls
3089 1429 Pls
3095 1443 Pls
3101 1444 Pls
3107 1444 Pls
3113 1432 Pls
3120 1443 Pls
3126 1444 Pls
3132 1445 Pls
3138 1435 Pls
3144 1436 Pls
3151 1444 Pls
3157 1443 Pls
3163 1445 Pls
3169 1446 Pls
3175 1443 Pls
3182 1443 Pls
3188 1444 Pls
3194 1444 Pls
3200 1444 Pls
3206 1445 Pls
3213 1445 Pls
3219 1446 Pls
3225 1447 Pls
3231 1449 Pls
3237 1449 Pls
3244 1450 Pls
3250 1450 Pls
3256 1452 Pls
3262 1452 Pls
3268 1453 Pls
3275 1454 Pls
3281 1458 Pls
3287 1456 Pls
3293 1458 Pls
3299 1458 Pls
3306 1460 Pls
3312 1460 Pls
3318 1462 Pls
3324 1462 Pls
3330 1530 Pls
3337 1464 Pls
3343 1530 Pls
3349 1530 Pls
3355 1532 Pls
3361 1469 Pls
3368 1530 Pls
3374 1531 Pls
3380 1530 Pls
3386 1472 Pls
3392 1530 Pls
3399 1474 Pls
3405 1530 Pls
3411 1477 Pls
3417 1530 Pls
3423 1479 Pls
3429 1532 Pls
3436 1482 Pls
3442 1531 Pls
3448 1530 Pls
3454 1530 Pls
3460 1530 Pls
3467 1530 Pls
3473 1531 Pls
3479 1530 Pls
3485 1491 Pls
3491 1532 Pls
3498 1494 Pls
3504 1533 Pls
3510 1530 Pls
3516 1532 Pls
3522 1530 Pls
3529 1536 Pls
3535 1530 Pls
3541 1531 Pls
3547 1531 Pls
3553 1506 Pls
3560 1506 Pls
3566 1530 Pls
3572 1531 Pls
3578 1531 Pls
3584 1530 Pls
3591 1531 Pls
3597 1530 Pls
3603 1530 Pls
3609 1530 Pls
3615 1530 Pls
3622 1530 Pls
3628 1532 Pls
3634 1523 Pls
3640 1531 Pls
3646 1531 Pls
3653 1530 Pls
3659 1528 Pls
3665 1532 Pls
3671 1532 Pls
3677 1535 Pls
3684 1535 Pls
3690 1538 Pls
3696 1538 Pls
3702 1544 Pls
3708 1541 Pls
3715 1544 Pls
3721 1544 Pls
3727 1549 Pls
3733 1548 Pls
3739 1550 Pls
3746 1551 Pls
3752 1554 Pls
3758 1554 Pls
3764 1557 Pls
3770 1558 Pls
3777 1560 Pls
3783 1560 Pls
3789 1564 Pls
3795 1564 Pls
3801 1568 Pls
3808 1567 Pls
3814 1571 Pls
3820 1573 Pls
3826 1574 Pls
3832 1574 Pls
3839 1578 Pls
3845 1578 Pls
3851 1581 Pls
3857 1581 Pls
3863 1585 Pls
3870 1585 Pls
3876 1588 Pls
3882 1589 Pls
3888 1592 Pls
3894 1592 Pls
3901 1596 Pls
3907 1596 Pls
3913 1600 Pls
3919 1600 Pls
3925 1604 Pls
3932 1604 Pls
3938 1608 Pls
3944 1608 Pls
3950 1613 Pls
3956 1612 Pls
3963 1616 Pls
3969 1616 Pls
3975 1620 Pls
3981 1621 Pls
3987 1625 Pls
3994 1624 Pls
4000 1630 Pls
4006 1628 Pls
4012 1632 Pls
4018 1633 Pls
4025 1637 Pls
4031 1637 Pls
4037 1643 Pls
4043 1641 Pls
4049 1645 Pls
4056 1647 Pls
4062 1651 Pls
4068 1650 Pls
4074 1654 Pls
4080 1654 Pls
4087 1658 Pls
4093 1658 Pls
4099 1665 Pls
4105 1663 Pls
4111 1668 Pls
4118 1668 Pls
4124 1677 Pls
4130 1672 Pls
4136 1677 Pls
4142 1677 Pls
4149 1682 Pls
4155 1682 Pls
4161 1687 Pls
4167 1687 Pls
4173 1692 Pls
4180 1692 Pls
4186 1697 Pls
4192 1697 Pls
4198 1702 Pls
4204 1702 Pls
4211 1707 Pls
4217 1706 Pls
4223 1713 Pls
4229 1712 Pls
4235 1717 Pls
4242 1717 Pls
4248 1722 Pls
4254 1722 Pls
4260 1728 Pls
4266 1727 Pls
4273 1734 Pls
4279 1733 Pls
4285 1737 Pls
4291 1738 Pls
4297 1743 Pls
4304 1743 Pls
4310 1749 Pls
4316 1748 Pls
4322 1755 Pls
4328 1754 Pls
4335 1759 Pls
4341 1759 Pls
4347 1766 Pls
4353 1765 Pls
4359 1771 Pls
4365 1770 Pls
4372 1776 Pls
4378 1776 Pls
4384 1784 Pls
4390 1782 Pls
4396 1788 Pls
4403 1788 Pls
4409 1793 Pls
4415 1793 Pls
4421 1801 Pls
4427 1800 Pls
4434 1805 Pls
4440 1805 Pls
4446 1811 Pls
4452 1811 Pls
4458 1817 Pls
4465 1819 Pls
4471 1823 Pls
4477 1823 Pls
4483 1830 Pls
4489 1829 Pls
4496 1835 Pls
4502 1836 Pls
4508 1842 Pls
4514 1841 Pls
4520 1849 Pls
4527 1848 Pls
4533 1855 Pls
4539 1856 Pls
4545 1861 Pls
4551 1861 Pls
4558 1867 Pls
4564 1868 Pls
4570 1874 Pls
4576 1874 Pls
4582 1881 Pls
4589 1881 Pls
4595 1887 Pls
4601 1887 Pls
4607 1896 Pls
4613 1895 Pls
4620 1902 Pls
4626 1901 Pls
4632 1909 Pls
4638 1908 Pls
4644 1915 Pls
4651 1915 Pls
4657 1921 Pls
4663 1922 Pls
4669 1932 Pls
4675 1929 Pls
4682 1937 Pls
4688 1936 Pls
4694 1943 Pls
4700 1943 Pls
4706 1950 Pls
4713 1950 Pls
4719 1957 Pls
4725 1957 Pls
4731 1965 Pls
4737 1967 Pls
4744 1973 Pls
4750 1972 Pls
4756 1980 Pls
4762 1979 Pls
4768 1987 Pls
4775 1987 Pls
4781 1994 Pls
4787 1994 Pls
4793 2003 Pls
4799 2002 Pls
4806 2011 Pls
4812 2009 Pls
4818 2017 Pls
4824 2017 Pls
4830 2026 Pls
4837 2026 Pls
4843 2033 Pls
4849 2033 Pls
4855 2041 Pls
4861 2041 Pls
4868 2049 Pls
4874 2049 Pls
4880 2057 Pls
4886 2056 Pls
4892 2064 Pls
4899 2066 Pls
4905 2073 Pls
4911 2073 Pls
4917 2083 Pls
4923 2081 Pls
4930 2090 Pls
4936 2090 Pls
4942 2099 Pls
4948 2099 Pls
4954 2106 Pls
4961 2107 Pls
4967 2115 Pls
4973 2115 Pls
4979 2123 Pls
4985 2124 Pls
4992 2132 Pls
4998 2132 Pls
5004 2141 Pls
5010 2141 Pls
5016 2149 Pls
5023 2149 Pls
5029 2158 Pls
5035 2159 Pls
5041 2167 Pls
5047 2168 Pls
5054 2177 Pls
5060 2177 Pls
5066 2185 Pls
5072 2185 Pls
5078 2195 Pls
5085 2194 Pls
5091 2204 Pls
5097 2204 Pls
5103 2212 Pls
5109 2212 Pls
5116 2221 Pls
5122 2221 Pls
5128 2230 Pls
5134 2231 Pls
5140 2242 Pls
5147 2241 Pls
5153 2253 Pls
5159 2251 Pls
5165 2261 Pls
5171 2260 Pls
5178 2269 Pls
5184 2269 Pls
5190 2280 Pls
5196 2280 Pls
5202 2290 Pls
5209 2289 Pls
5215 2299 Pls
5221 2300 Pls
5227 2309 Pls
5233 2308 Pls
5240 2321 Pls
5246 2319 Pls
5252 2328 Pls
5258 2331 Pls
5264 2339 Pls
5270 2340 Pls
5277 2349 Pls
5283 2352 Pls
5289 2360 Pls
5295 2359 Pls
5301 2369 Pls
5308 2369 Pls
5314 2379 Pls
5320 2379 Pls
5326 2390 Pls
5332 2390 Pls
5339 2400 Pls
5345 2402 Pls
5351 2413 Pls
5357 2413 Pls
5363 2426 Pls
5370 2423 Pls
5376 2434 Pls
5382 2434 Pls
5388 2444 Pls
5394 2443 Pls
5401 2454 Pls
5407 2455 Pls
5413 2466 Pls
5419 2466 Pls
5425 2476 Pls
5432 2476 Pls
5438 2491 Pls
5444 2489 Pls
5450 2499 Pls
5456 2499 Pls
5463 2510 Pls
5469 2510 Pls
5475 2522 Pls
5481 2521 Pls
5487 2532 Pls
5494 2534 Pls
5500 2545 Pls
5506 2544 Pls
5512 2556 Pls
5518 2557 Pls
5525 2568 Pls
5531 2571 Pls
5537 2581 Pls
5543 2579 Pls
5549 2593 Pls
5556 2591 Pls
5562 2602 Pls
5568 2602 Pls
5574 2614 Pls
5580 2615 Pls
5587 2628 Pls
5593 2627 Pls
5599 2641 Pls
5605 2639 Pls
5611 2651 Pls
5618 2655 Pls
5624 2663 Pls
5630 2664 Pls
5636 2676 Pls
5642 2676 Pls
5649 2688 Pls
5655 2689 Pls
5661 2700 Pls
5667 2701 Pls
5673 2713 Pls
5680 2716 Pls
5686 2726 Pls
5692 2727 Pls
5698 2738 Pls
5704 2739 Pls
5711 2751 Pls
5717 2752 Pls
5723 2765 Pls
5729 2764 Pls
5735 2777 Pls
5742 2777 Pls
5748 2790 Pls
5754 2791 Pls
5760 2804 Pls
5766 2803 Pls
5773 2817 Pls
5779 2816 Pls
5785 2830 Pls
5791 2831 Pls
5797 2843 Pls
5804 2844 Pls
5810 2856 Pls
5816 2858 Pls
5822 2870 Pls
5828 2871 Pls
5835 2884 Pls
5841 2884 Pls
5847 2899 Pls
5853 2901 Pls
5859 2912 Pls
5866 2911 Pls
5872 2926 Pls
5878 2926 Pls
5884 2939 Pls
5890 2939 Pls
5897 2953 Pls
5903 2953 Pls
5909 2968 Pls
5915 2969 Pls
5921 2983 Pls
5928 2981 Pls
5934 2996 Pls
5940 2996 Pls
5946 3010 Pls
5952 3010 Pls
5959 3025 Pls
5965 3025 Pls
5971 3039 Pls
5977 3039 Pls
5983 3055 Pls
5990 3054 Pls
5996 3068 Pls
6002 3069 Pls
6008 3083 Pls
6014 3084 Pls
6021 3098 Pls
6027 3099 Pls
6033 3115 Pls
6039 3114 Pls
6045 3131 Pls
6052 3129 Pls
6058 3145 Pls
6064 3144 Pls
6070 3159 Pls
6076 3159 Pls
6083 3175 Pls
6089 3175 Pls
6095 3190 Pls
6101 3190 Pls
6107 3206 Pls
6114 3205 Pls
6120 3220 Pls
6126 3220 Pls
6132 3236 Pls
6138 3238 Pls
6145 3254 Pls
6151 3253 Pls
6157 3269 Pls
6163 3269 Pls
6169 3284 Pls
6176 3284 Pls
6182 3301 Pls
6188 3301 Pls
6194 3316 Pls
6200 3318 Pls
6206 3335 Pls
6213 3335 Pls
6219 3351 Pls
6225 3349 Pls
6231 3365 Pls
6237 3365 Pls
6244 3381 Pls
6250 3382 Pls
6256 3398 Pls
6262 3398 Pls
6268 3415 Pls
6275 3415 Pls
6281 3433 Pls
6287 3433 Pls
6293 3449 Pls
6299 3449 Pls
6306 3465 Pls
6312 3466 Pls
6318 3482 Pls
6324 3483 Pls
6330 3500 Pls
6337 3500 Pls
6343 3517 Pls
6349 3518 Pls
6355 3534 Pls
6361 3535 Pls
6368 3551 Pls
6374 3554 Pls
6380 3571 Pls
6386 3570 Pls
6392 3586 Pls
6399 3586 Pls
6405 3604 Pls
6411 3604 Pls
6417 3623 Pls
6423 3624 Pls
6430 3640 Pls
6436 3640 Pls
6442 3658 Pls
6448 3658 Pls
6454 3677 Pls
6461 3676 Pls
6467 3694 Pls
6473 3694 Pls
6479 3713 Pls
6485 3713 Pls
6492 3730 Pls
6498 3731 Pls
6504 3749 Pls
6510 3751 Pls
6516 3769 Pls
6523 3767 Pls
6529 3787 Pls
6535 3786 Pls
5907 4059 Pls
% End plot #1
1.000 UL
LTb
2010 4272 N
0 -2905 V
4649 0 V
0 2905 V
-4649 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Roman
