%!PS-Adobe-2.0 EPSF-2.0
%%Title: hp_outbound_dec_r2.eps
%%Creator: gnuplot 4.4 patchlevel 3
%%CreationDate: Sun Jan  5 00:10:14 2014
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -100 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (hp_outbound_dec_r2.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 3)
  /Author (root)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sun Jan  5 00:10:14 2014)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Roman) findfont 300 scalefont setfont
1.000 UL
LTb
1650 1254 M
63 0 V
4946 0 R
-63 0 V
stroke
1470 1254 M
[ [(Roman) 300.0 0.0 true true 0 ( 0)]
] -100.0 MRshow
1.000 UL
LTb
1650 1671 M
63 0 V
4946 0 R
-63 0 V
stroke
1470 1671 M
[ [(Roman) 300.0 0.0 true true 0 ( 200)]
] -100.0 MRshow
1.000 UL
LTb
1650 2089 M
63 0 V
4946 0 R
-63 0 V
stroke
1470 2089 M
[ [(Roman) 300.0 0.0 true true 0 ( 400)]
] -100.0 MRshow
1.000 UL
LTb
1650 2506 M
63 0 V
4946 0 R
-63 0 V
stroke
1470 2506 M
[ [(Roman) 300.0 0.0 true true 0 ( 600)]
] -100.0 MRshow
1.000 UL
LTb
1650 2924 M
63 0 V
4946 0 R
-63 0 V
stroke
1470 2924 M
[ [(Roman) 300.0 0.0 true true 0 ( 800)]
] -100.0 MRshow
1.000 UL
LTb
1650 3341 M
63 0 V
4946 0 R
-63 0 V
stroke
1470 3341 M
[ [(Roman) 300.0 0.0 true true 0 ( 1000)]
] -100.0 MRshow
1.000 UL
LTb
1650 3759 M
63 0 V
4946 0 R
-63 0 V
stroke
1470 3759 M
[ [(Roman) 300.0 0.0 true true 0 ( 1200)]
] -100.0 MRshow
1.000 UL
LTb
1650 4176 M
63 0 V
4946 0 R
-63 0 V
stroke
1470 4176 M
[ [(Roman) 300.0 0.0 true true 0 ( 1400)]
] -100.0 MRshow
1.000 UL
LTb
1650 1254 M
0 63 V
0 3068 R
0 -63 V
stroke
1650 954 M
[ [(Roman) 300.0 0.0 true true 0 ( 0)]
] -100.0 MCshow
1.000 UL
LTb
2318 1254 M
0 63 V
0 3068 R
0 -63 V
stroke
2318 954 M
[ [(Roman) 300.0 0.0 true true 0 ( 100)]
] -100.0 MCshow
1.000 UL
LTb
2986 1254 M
0 63 V
0 3068 R
0 -63 V
stroke
2986 954 M
[ [(Roman) 300.0 0.0 true true 0 ( 200)]
] -100.0 MCshow
1.000 UL
LTb
3654 1254 M
0 63 V
0 3068 R
0 -63 V
stroke
3654 954 M
[ [(Roman) 300.0 0.0 true true 0 ( 300)]
] -100.0 MCshow
1.000 UL
LTb
4321 1254 M
0 63 V
0 3068 R
0 -63 V
stroke
4321 954 M
[ [(Roman) 300.0 0.0 true true 0 ( 400)]
] -100.0 MCshow
1.000 UL
LTb
4989 1254 M
0 63 V
0 3068 R
0 -63 V
stroke
4989 954 M
[ [(Roman) 300.0 0.0 true true 0 ( 500)]
] -100.0 MCshow
1.000 UL
LTb
5657 1254 M
0 63 V
0 3068 R
0 -63 V
stroke
5657 954 M
[ [(Roman) 300.0 0.0 true true 0 ( 600)]
] -100.0 MCshow
1.000 UL
LTb
6325 1254 M
0 63 V
0 3068 R
0 -63 V
stroke
6325 954 M
[ [(Roman) 300.0 0.0 true true 0 ( 700)]
] -100.0 MCshow
1.000 UL
LTb
1.000 UL
LTb
1650 4385 N
0 -3131 V
5009 0 V
0 3131 V
-5009 0 V
Z stroke
LCb setrgbcolor
240 2819 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Roman) 300.0 0.0 true true 0 (latency \(ms\))]
] -100.0 MCshow
grestore
LTb
LCb setrgbcolor
4154 504 M
[ [(Roman) 300.0 0.0 true true 0 (openflow rule #)]
] -100.0 MCshow
LTb
1.000 UP
1.000 UL
LTb
% Begin plot #1
0.500 UP
1.000 UL
LT0
LCb setrgbcolor
5336 4172 M
[ [(Roman) 300.0 0.0 true true 0 (insertion rate = 2/s)]
] -100.0 MRshow
LT0
1657 1694 Pls
1663 1261 Pls
1670 1262 Pls
1677 1263 Pls
1683 1263 Pls
1690 1262 Pls
1697 1262 Pls
1703 1263 Pls
1710 1262 Pls
1717 1262 Pls
1723 1262 Pls
1730 1262 Pls
1737 1263 Pls
1744 1761 Pls
1750 1272 Pls
1757 1294 Pls
1764 1314 Pls
1770 1316 Pls
1777 1336 Pls
1784 1285 Pls
1790 1385 Pls
1797 1306 Pls
1804 1270 Pls
1810 1466 Pls
1817 1301 Pls
1824 1286 Pls
1830 1423 Pls
1837 1288 Pls
1844 1324 Pls
1850 1379 Pls
1857 1274 Pls
1864 1309 Pls
1870 1339 Pls
1877 1269 Pls
1884 1267 Pls
1890 1278 Pls
1897 1276 Pls
1904 1269 Pls
1910 1280 Pls
1917 1306 Pls
1924 1276 Pls
1931 1277 Pls
1937 1309 Pls
1944 1269 Pls
1951 1288 Pls
1957 1275 Pls
1964 1302 Pls
1971 1309 Pls
1977 1273 Pls
1984 1265 Pls
1991 1303 Pls
1997 1263 Pls
2004 1325 Pls
2011 1315 Pls
2017 1384 Pls
2024 1351 Pls
2031 1278 Pls
2037 1271 Pls
2044 1405 Pls
2051 1390 Pls
2057 1275 Pls
2064 1464 Pls
2071 1301 Pls
2077 1307 Pls
2084 1319 Pls
2091 1268 Pls
2097 1290 Pls
2104 1306 Pls
2111 1299 Pls
2118 1295 Pls
2124 1269 Pls
2131 1342 Pls
2138 1343 Pls
2144 1282 Pls
2151 1355 Pls
2158 1336 Pls
2164 1302 Pls
2171 1276 Pls
2178 1330 Pls
2184 1308 Pls
2191 1321 Pls
2198 1287 Pls
2204 1271 Pls
2211 1279 Pls
2218 1314 Pls
2224 1349 Pls
2231 1299 Pls
2238 1276 Pls
2244 1280 Pls
2251 1301 Pls
2258 1315 Pls
2264 1287 Pls
2271 1322 Pls
2278 1364 Pls
2284 1297 Pls
2291 1296 Pls
2298 1278 Pls
2305 1290 Pls
2311 1280 Pls
2318 1278 Pls
2325 1500 Pls
2331 1281 Pls
2338 1275 Pls
2345 1277 Pls
2351 1327 Pls
2358 1301 Pls
2365 1349 Pls
2371 1323 Pls
2378 1351 Pls
2385 1382 Pls
2391 1346 Pls
2398 1388 Pls
2405 1281 Pls
2411 1307 Pls
2418 1339 Pls
2425 1294 Pls
2431 1341 Pls
2438 1316 Pls
2445 1387 Pls
2451 1314 Pls
2458 1453 Pls
2465 1296 Pls
2471 1319 Pls
2478 1337 Pls
2485 1336 Pls
2492 1285 Pls
2498 1300 Pls
2505 1314 Pls
2512 1291 Pls
2518 1295 Pls
2525 1305 Pls
2532 1312 Pls
2538 1308 Pls
2545 1321 Pls
2552 1435 Pls
2558 1329 Pls
2565 1339 Pls
2572 1316 Pls
2578 1347 Pls
2585 1437 Pls
2592 1509 Pls
2598 1357 Pls
2605 1336 Pls
2612 1347 Pls
2618 1408 Pls
2625 1327 Pls
2632 1349 Pls
2638 1417 Pls
2645 1299 Pls
2652 1319 Pls
2658 1300 Pls
2665 1312 Pls
2672 1329 Pls
2679 1304 Pls
2685 1321 Pls
2692 1332 Pls
2699 1372 Pls
2705 1334 Pls
2712 1326 Pls
2719 1383 Pls
2725 1334 Pls
2732 1304 Pls
2739 1360 Pls
2745 1388 Pls
2752 1374 Pls
2759 1325 Pls
2765 1321 Pls
2772 1348 Pls
2779 1338 Pls
2785 1335 Pls
2792 1327 Pls
2799 1332 Pls
2805 1345 Pls
2812 1317 Pls
2819 1326 Pls
2825 1325 Pls
2832 1322 Pls
2839 1397 Pls
2845 1386 Pls
2852 1325 Pls
2859 1347 Pls
2866 1325 Pls
2872 1369 Pls
2879 1319 Pls
2886 1321 Pls
2892 1381 Pls
2899 1387 Pls
2906 1431 Pls
2912 1369 Pls
2919 1346 Pls
2926 1362 Pls
2932 1347 Pls
2939 1328 Pls
2946 1342 Pls
2952 1390 Pls
2959 1396 Pls
2966 1345 Pls
2972 1326 Pls
2979 1331 Pls
2986 1426 Pls
2992 1377 Pls
2999 1423 Pls
3006 1334 Pls
3012 1358 Pls
3019 1358 Pls
3026 1386 Pls
3032 1333 Pls
3039 1360 Pls
3046 1365 Pls
3053 1366 Pls
3059 1364 Pls
3066 1368 Pls
3073 1363 Pls
3079 1353 Pls
3086 1374 Pls
3099 1397 Pls
3106 1444 Pls
3113 1357 Pls
3119 2086 Pls
3126 1386 Pls
3133 1361 Pls
3139 1545 Pls
3146 1388 Pls
3153 1433 Pls
3159 2301 Pls
3166 1461 Pls
3173 1642 Pls
3179 1553 Pls
3186 2627 Pls
3193 1511 Pls
3199 1352 Pls
3206 1429 Pls
3213 1377 Pls
3219 1362 Pls
3226 1406 Pls
3233 1450 Pls
3240 1375 Pls
3246 1388 Pls
3253 1362 Pls
3260 1364 Pls
3266 1374 Pls
3273 1369 Pls
3280 1416 Pls
3286 1557 Pls
3293 1376 Pls
3300 1370 Pls
3306 1389 Pls
3313 1367 Pls
3320 1382 Pls
3326 1394 Pls
3333 1403 Pls
3340 1588 Pls
3346 1416 Pls
3353 1410 Pls
3360 1387 Pls
3366 1421 Pls
3373 1390 Pls
3380 1387 Pls
3386 1486 Pls
3393 1421 Pls
3400 1381 Pls
3406 1437 Pls
3413 1390 Pls
3420 1404 Pls
3427 1431 Pls
3433 1430 Pls
3440 1402 Pls
3447 1422 Pls
3453 1438 Pls
3460 1411 Pls
3467 1551 Pls
3473 1404 Pls
3480 1386 Pls
3487 1416 Pls
3493 1391 Pls
3500 1396 Pls
3507 1394 Pls
3513 1462 Pls
3520 1431 Pls
3527 1417 Pls
3533 1423 Pls
3540 1537 Pls
3547 1442 Pls
3553 1463 Pls
3560 1419 Pls
3567 1486 Pls
3573 1431 Pls
3580 1422 Pls
3587 1403 Pls
3593 1473 Pls
3600 1452 Pls
3607 1414 Pls
3614 1572 Pls
3620 1444 Pls
3627 1419 Pls
3634 1411 Pls
3640 1411 Pls
3647 1422 Pls
3654 1443 Pls
3660 1412 Pls
3667 1416 Pls
3674 1415 Pls
3680 1424 Pls
3687 1417 Pls
3694 1419 Pls
3700 1423 Pls
3707 1440 Pls
3714 1423 Pls
3720 1428 Pls
3727 1433 Pls
3734 1467 Pls
3740 1490 Pls
3747 1454 Pls
3754 1499 Pls
3760 1476 Pls
3767 1456 Pls
3774 1434 Pls
3780 1511 Pls
3787 1480 Pls
3794 1445 Pls
3801 1452 Pls
3807 1445 Pls
3814 1519 Pls
3821 1479 Pls
3827 1461 Pls
3834 1518 Pls
3841 1440 Pls
3847 1457 Pls
3854 1455 Pls
3861 1451 Pls
3867 1490 Pls
3874 1500 Pls
3881 1599 Pls
3887 1558 Pls
3894 1462 Pls
3901 1541 Pls
3907 1465 Pls
3914 1487 Pls
3921 1495 Pls
3927 1469 Pls
3934 1482 Pls
3941 1459 Pls
3947 1488 Pls
3954 1509 Pls
3961 1493 Pls
3967 1489 Pls
3974 1481 Pls
3981 1481 Pls
3988 1511 Pls
3994 1484 Pls
4001 1470 Pls
4008 1519 Pls
4014 1473 Pls
4021 1516 Pls
4028 1489 Pls
4034 1506 Pls
4041 1481 Pls
4048 1613 Pls
4054 1525 Pls
4061 1573 Pls
4068 1494 Pls
4074 1518 Pls
4081 1513 Pls
4088 1635 Pls
4094 1530 Pls
4101 1539 Pls
4108 1564 Pls
4114 1593 Pls
4121 1638 Pls
4128 1542 Pls
4134 1531 Pls
4141 1773 Pls
4148 1625 Pls
4155 1527 Pls
4161 1837 Pls
4168 1716 Pls
4175 1740 Pls
4181 1684 Pls
4188 1570 Pls
4195 1657 Pls
4201 1557 Pls
4208 1564 Pls
4215 1731 Pls
4221 1782 Pls
4228 1641 Pls
4235 1576 Pls
4241 1769 Pls
4248 1620 Pls
4255 1600 Pls
4261 1669 Pls
4268 1703 Pls
4275 1651 Pls
4281 1676 Pls
4288 1617 Pls
4295 1560 Pls
4301 1584 Pls
4308 1562 Pls
4315 1655 Pls
4321 1637 Pls
4328 1769 Pls
4335 1631 Pls
4342 1821 Pls
4348 1702 Pls
4355 1684 Pls
4362 1575 Pls
4368 1604 Pls
4375 1573 Pls
4382 1683 Pls
4388 1579 Pls
4395 1596 Pls
4402 1673 Pls
4408 1807 Pls
4415 1620 Pls
4422 1602 Pls
4428 1813 Pls
4435 1822 Pls
4442 1829 Pls
4448 1619 Pls
4455 1705 Pls
4462 1712 Pls
4468 1712 Pls
4475 1930 Pls
4482 1622 Pls
4488 1861 Pls
4495 1704 Pls
4502 1676 Pls
4508 1598 Pls
4515 1694 Pls
4522 1867 Pls
4529 1756 Pls
4535 1921 Pls
4542 1610 Pls
4549 1903 Pls
4555 1639 Pls
4562 1765 Pls
4569 1731 Pls
4575 1767 Pls
4582 1580 Pls
4589 2134 Pls
4595 1814 Pls
4602 1634 Pls
4609 1665 Pls
4615 1735 Pls
4622 1592 Pls
4629 1851 Pls
4635 1845 Pls
4642 1625 Pls
4649 1664 Pls
4655 1731 Pls
4662 1618 Pls
4669 1630 Pls
4675 1797 Pls
4682 1682 Pls
4689 1826 Pls
4695 1743 Pls
4702 1687 Pls
4709 1666 Pls
4716 1619 Pls
4722 1655 Pls
4729 1672 Pls
4736 1718 Pls
4742 1639 Pls
4749 1841 Pls
4756 1698 Pls
4762 1746 Pls
4769 1741 Pls
4776 1631 Pls
4782 1626 Pls
4789 1942 Pls
4796 1930 Pls
4802 1815 Pls
4809 1774 Pls
4816 1697 Pls
4822 1647 Pls
4829 1649 Pls
4836 2038 Pls
4842 1794 Pls
4849 1711 Pls
4856 1653 Pls
4862 1726 Pls
4869 1660 Pls
4876 1682 Pls
4882 1867 Pls
4889 1714 Pls
4896 1671 Pls
4903 1880 Pls
4909 1704 Pls
4916 1852 Pls
4923 1849 Pls
4929 1714 Pls
4936 1784 Pls
4943 1696 Pls
4949 1671 Pls
4956 1683 Pls
4963 1846 Pls
4969 1710 Pls
4976 1750 Pls
4983 1817 Pls
4989 1678 Pls
4996 1862 Pls
5003 1892 Pls
5009 1889 Pls
5016 1946 Pls
5023 1715 Pls
5029 1688 Pls
5036 1694 Pls
5043 1754 Pls
5049 1730 Pls
5056 1762 Pls
5063 1827 Pls
5069 1853 Pls
5076 1730 Pls
5083 1821 Pls
5090 1755 Pls
5096 1744 Pls
5103 1910 Pls
5110 1888 Pls
5116 1739 Pls
5123 1780 Pls
5130 1723 Pls
5136 1877 Pls
5143 1854 Pls
5150 1808 Pls
5156 1880 Pls
5163 1737 Pls
5170 1838 Pls
5176 1926 Pls
5183 1776 Pls
5190 1783 Pls
5196 1743 Pls
5203 1745 Pls
5210 1852 Pls
5216 1943 Pls
5223 1747 Pls
5230 1774 Pls
5236 1922 Pls
5243 2029 Pls
5250 1752 Pls
5256 1954 Pls
5263 1786 Pls
5270 1777 Pls
5277 1976 Pls
5283 1751 Pls
5290 2008 Pls
5297 1778 Pls
5303 1822 Pls
5310 1955 Pls
5317 1815 Pls
5323 1855 Pls
5330 1956 Pls
5337 1769 Pls
5343 1770 Pls
5350 1862 Pls
5357 1823 Pls
5363 1857 Pls
5370 2236 Pls
5377 1806 Pls
5383 1824 Pls
5390 1869 Pls
5397 2016 Pls
5403 1796 Pls
5410 1793 Pls
5417 2007 Pls
5423 1804 Pls
5430 1994 Pls
5437 1837 Pls
5443 1824 Pls
5450 1794 Pls
5457 1869 Pls
5464 1950 Pls
5470 1812 Pls
5477 2150 Pls
5484 1884 Pls
5490 1850 Pls
5497 2137 Pls
5504 1864 Pls
5510 2008 Pls
5517 1819 Pls
5524 1993 Pls
5530 1875 Pls
5537 1843 Pls
5544 1820 Pls
5550 2366 Pls
5557 1836 Pls
5564 2070 Pls
5570 1898 Pls
5577 1841 Pls
5584 1974 Pls
5590 1852 Pls
5597 1863 Pls
5604 1967 Pls
5610 2027 Pls
5617 1926 Pls
5624 1882 Pls
5630 1921 Pls
5637 1897 Pls
5644 1895 Pls
5651 1928 Pls
5657 1871 Pls
5664 1975 Pls
5671 1934 Pls
5677 2039 Pls
5684 1985 Pls
5691 1994 Pls
5697 1897 Pls
5704 1892 Pls
5711 1924 Pls
5717 2104 Pls
5724 1942 Pls
5731 1900 Pls
5737 1981 Pls
5744 1957 Pls
5751 1919 Pls
5757 1959 Pls
5764 2031 Pls
5771 1920 Pls
5777 2022 Pls
5784 2005 Pls
5791 2011 Pls
5797 1922 Pls
5804 2135 Pls
5811 2080 Pls
5817 2244 Pls
5824 1951 Pls
5831 2001 Pls
5838 1949 Pls
5844 1990 Pls
5851 1931 Pls
5858 2080 Pls
5864 2288 Pls
5871 1945 Pls
5878 2140 Pls
5884 2162 Pls
5891 2055 Pls
5898 2113 Pls
5904 2120 Pls
5911 2116 Pls
5918 1998 Pls
5924 2106 Pls
5931 1963 Pls
5938 2099 Pls
5944 1977 Pls
5951 2113 Pls
5958 2020 Pls
5964 2200 Pls
5971 1980 Pls
5978 2773 Pls
5984 2170 Pls
5991 1997 Pls
5998 1980 Pls
6004 2150 Pls
6011 2111 Pls
6018 2018 Pls
6025 2030 Pls
6031 2062 Pls
6038 2470 Pls
6045 2013 Pls
6051 2046 Pls
6058 2158 Pls
6065 2170 Pls
6071 2437 Pls
6078 2107 Pls
6085 2023 Pls
6091 2026 Pls
6098 2209 Pls
6105 2138 Pls
6111 2091 Pls
6118 2126 Pls
6125 2087 Pls
6131 2281 Pls
6138 2070 Pls
6145 2306 Pls
6151 2050 Pls
6158 2082 Pls
6165 2285 Pls
6171 2138 Pls
6178 2080 Pls
6185 2057 Pls
6191 2102 Pls
6198 2147 Pls
6205 2171 Pls
6212 2141 Pls
6218 2490 Pls
6225 2098 Pls
6232 2065 Pls
6238 2122 Pls
6245 2236 Pls
6252 2329 Pls
6258 2150 Pls
6265 2164 Pls
6272 2084 Pls
6278 2154 Pls
6285 2128 Pls
6292 2124 Pls
6298 2087 Pls
6305 2093 Pls
6312 2377 Pls
6318 2093 Pls
6325 2254 Pls
6332 2160 Pls
6338 2119 Pls
6345 2584 Pls
6352 2312 Pls
6358 2520 Pls
6365 3243 Pls
6372 2134 Pls
6378 2257 Pls
6385 2236 Pls
6392 2196 Pls
6399 2152 Pls
6405 2255 Pls
6412 2249 Pls
6419 2145 Pls
6425 2197 Pls
6432 2132 Pls
6439 2127 Pls
6445 2262 Pls
6452 2170 Pls
6459 2727 Pls
6465 2277 Pls
6472 2152 Pls
6479 2162 Pls
6485 2186 Pls
6492 2206 Pls
6499 2536 Pls
6505 2275 Pls
6512 2237 Pls
6519 2258 Pls
6525 2188 Pls
5907 4172 Pls
% End plot #1
1.000 UL
LTb
1650 4385 N
0 -3131 V
5009 0 V
0 3131 V
-5009 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Roman
