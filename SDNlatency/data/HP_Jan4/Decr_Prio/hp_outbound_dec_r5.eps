%!PS-Adobe-2.0 EPSF-2.0
%%Title: hp_outbound_dec_r5.eps
%%Creator: gnuplot 4.4 patchlevel 3
%%CreationDate: Sun Jan  5 00:09:35 2014
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -100 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (hp_outbound_dec_r5.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 3)
  /Author (root)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sun Jan  5 00:09:35 2014)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Roman) findfont 300 scalefont setfont
1.000 UL
LTb
1830 1310 M
63 0 V
4766 0 R
-63 0 V
stroke
1650 1310 M
[ [(Roman) 300.0 0.0 true true 0 ( 0)]
] -100.0 MRshow
1.000 UL
LTb
1830 1914 M
63 0 V
4766 0 R
-63 0 V
stroke
1650 1914 M
[ [(Roman) 300.0 0.0 true true 0 ( 10000)]
] -100.0 MRshow
1.000 UL
LTb
1830 2518 M
63 0 V
4766 0 R
-63 0 V
stroke
1650 2518 M
[ [(Roman) 300.0 0.0 true true 0 ( 20000)]
] -100.0 MRshow
1.000 UL
LTb
1830 3121 M
63 0 V
4766 0 R
-63 0 V
stroke
1650 3121 M
[ [(Roman) 300.0 0.0 true true 0 ( 30000)]
] -100.0 MRshow
1.000 UL
LTb
1830 3725 M
63 0 V
4766 0 R
-63 0 V
stroke
1650 3725 M
[ [(Roman) 300.0 0.0 true true 0 ( 40000)]
] -100.0 MRshow
1.000 UL
LTb
1830 4329 M
63 0 V
4766 0 R
-63 0 V
stroke
1650 4329 M
[ [(Roman) 300.0 0.0 true true 0 ( 50000)]
] -100.0 MRshow
1.000 UL
LTb
1830 1310 M
0 63 V
0 2956 R
0 -63 V
stroke
1830 1010 M
[ [(Roman) 300.0 0.0 true true 0 ( 0)]
] -100.0 MCshow
1.000 UL
LTb
2474 1310 M
0 63 V
0 2956 R
0 -63 V
stroke
2474 1010 M
[ [(Roman) 300.0 0.0 true true 0 ( 100)]
] -100.0 MCshow
1.000 UL
LTb
3118 1310 M
0 63 V
0 2956 R
0 -63 V
stroke
3118 1010 M
[ [(Roman) 300.0 0.0 true true 0 ( 200)]
] -100.0 MCshow
1.000 UL
LTb
3762 1310 M
0 63 V
0 2956 R
0 -63 V
stroke
3762 1010 M
[ [(Roman) 300.0 0.0 true true 0 ( 300)]
] -100.0 MCshow
1.000 UL
LTb
4405 1310 M
0 63 V
0 2956 R
0 -63 V
stroke
4405 1010 M
[ [(Roman) 300.0 0.0 true true 0 ( 400)]
] -100.0 MCshow
1.000 UL
LTb
5049 1310 M
0 63 V
0 2956 R
0 -63 V
stroke
5049 1010 M
[ [(Roman) 300.0 0.0 true true 0 ( 500)]
] -100.0 MCshow
1.000 UL
LTb
5693 1310 M
0 63 V
0 2956 R
0 -63 V
stroke
5693 1010 M
[ [(Roman) 300.0 0.0 true true 0 ( 600)]
] -100.0 MCshow
1.000 UL
LTb
6337 1310 M
0 63 V
0 2956 R
0 -63 V
stroke
6337 1010 M
[ [(Roman) 300.0 0.0 true true 0 ( 700)]
] -100.0 MCshow
1.000 UL
LTb
1.000 UL
LTb
1830 4329 N
0 -3019 V
4829 0 V
0 3019 V
-4829 0 V
Z stroke
LCb setrgbcolor
240 2819 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Roman) 300.0 0.0 true true 0 (latency \(ms\))]
] -100.0 MCshow
grestore
LTb
LCb setrgbcolor
4244 560 M
[ [(Roman) 300.0 0.0 true true 0 (openflow rule #)]
] -100.0 MCshow
LTb
1.000 UP
1.000 UL
LTb
% Begin plot #1
0.500 UP
1.000 UL
LT0
LCb setrgbcolor
5336 4116 M
[ [(Roman) 300.0 0.0 true true 0 (insertion rate = 5/s)]
] -100.0 MRshow
LT0
1836 1322 Pls
1843 1310 Pls
1849 1310 Pls
1856 1310 Pls
1862 1310 Pls
1869 1311 Pls
1875 1310 Pls
1882 1310 Pls
1888 1310 Pls
1894 1311 Pls
1901 1311 Pls
1907 1310 Pls
1914 1310 Pls
1920 1310 Pls
1927 1310 Pls
1933 1310 Pls
1939 1468 Pls
1946 1456 Pls
1952 1444 Pls
1959 1431 Pls
1965 1421 Pls
1972 1408 Pls
1978 1404 Pls
1985 1384 Pls
1991 1371 Pls
1997 1362 Pls
2004 1347 Pls
2010 1337 Pls
2017 1323 Pls
2023 1311 Pls
2030 1312 Pls
2036 1310 Pls
2042 1311 Pls
2049 1311 Pls
2055 1310 Pls
2062 1312 Pls
2068 1314 Pls
2075 1311 Pls
2081 1311 Pls
2088 1313 Pls
2094 1312 Pls
2100 1315 Pls
2107 1313 Pls
2113 1310 Pls
2120 1310 Pls
2126 1310 Pls
2133 1314 Pls
2139 1310 Pls
2145 1311 Pls
2152 1310 Pls
2158 1313 Pls
2165 1311 Pls
2171 1311 Pls
2178 1311 Pls
2184 1311 Pls
2191 1311 Pls
2197 1312 Pls
2203 1310 Pls
2210 1311 Pls
2216 1312 Pls
2223 1310 Pls
2229 1312 Pls
2236 1311 Pls
2242 1310 Pls
2249 1312 Pls
2255 1310 Pls
2261 1312 Pls
2268 1312 Pls
2274 1312 Pls
2281 1311 Pls
2287 1311 Pls
2294 1312 Pls
2300 1311 Pls
2306 1311 Pls
2313 1311 Pls
2319 1310 Pls
2326 1312 Pls
2332 1312 Pls
2339 1312 Pls
2345 1311 Pls
2352 1311 Pls
2358 1313 Pls
2364 1312 Pls
2371 1311 Pls
2377 1315 Pls
2384 1313 Pls
2390 1311 Pls
2397 1311 Pls
2403 1314 Pls
2409 1312 Pls
2416 1313 Pls
2422 1312 Pls
2429 1312 Pls
2435 1311 Pls
2442 1311 Pls
2448 1311 Pls
2455 1313 Pls
2461 1311 Pls
2467 1311 Pls
2474 1311 Pls
2480 1330 Pls
2487 1317 Pls
2493 1311 Pls
2500 1313 Pls
2506 1312 Pls
2512 1312 Pls
2519 1314 Pls
2525 1311 Pls
2532 1321 Pls
2538 1313 Pls
2545 1312 Pls
2551 1314 Pls
2558 1316 Pls
2564 3605 Pls
2570 1319 Pls
2577 1311 Pls
2583 1319 Pls
2590 1312 Pls
2596 3545 Pls
2603 3533 Pls
2609 1311 Pls
2616 1313 Pls
2622 1313 Pls
2628 1313 Pls
2635 1318 Pls
2641 1312 Pls
2648 1312 Pls
2654 3437 Pls
2661 3425 Pls
2667 1313 Pls
2673 3402 Pls
2680 3389 Pls
2686 1318 Pls
2693 1315 Pls
2699 1317 Pls
2706 1315 Pls
2712 1313 Pls
2719 1312 Pls
2725 1320 Pls
2731 1314 Pls
2738 1311 Pls
2744 1311 Pls
2751 3256 Pls
2757 1315 Pls
2764 1320 Pls
2770 1312 Pls
2776 1314 Pls
2783 1311 Pls
2789 1313 Pls
2796 1313 Pls
2802 1312 Pls
2809 1318 Pls
2815 1314 Pls
2822 1314 Pls
2828 1313 Pls
2834 3101 Pls
2841 1313 Pls
2847 1314 Pls
2854 1318 Pls
2860 1312 Pls
2867 1312 Pls
2873 1313 Pls
2880 1317 Pls
2886 3004 Pls
2892 1316 Pls
2899 1314 Pls
2905 1312 Pls
2912 1313 Pls
2918 1313 Pls
2925 1313 Pls
2931 1313 Pls
2937 1312 Pls
2944 1312 Pls
2950 1314 Pls
2957 1317 Pls
2963 1323 Pls
2970 1317 Pls
2976 2834 Pls
2983 1316 Pls
2989 2809 Pls
2995 1314 Pls
3002 1317 Pls
3008 1315 Pls
3015 2762 Pls
3021 1316 Pls
3028 1314 Pls
3034 1318 Pls
3040 1313 Pls
3047 1313 Pls
3053 1319 Pls
3060 1317 Pls
3066 2664 Pls
3073 1314 Pls
3079 1314 Pls
3086 2630 Pls
3092 1313 Pls
3098 1313 Pls
3105 1312 Pls
3111 1314 Pls
3118 1332 Pls
3124 1322 Pls
3131 1315 Pls
3137 1315 Pls
3143 1315 Pls
3150 1312 Pls
3156 2495 Pls
3163 1318 Pls
3169 2480 Pls
3176 1317 Pls
3182 1313 Pls
3189 1313 Pls
3195 2422 Pls
3201 1314 Pls
3208 2398 Pls
3214 1313 Pls
3221 2380 Pls
3227 1313 Pls
3234 1317 Pls
3240 1314 Pls
3247 1314 Pls
3253 1314 Pls
3259 2302 Pls
3266 1313 Pls
3272 2282 Pls
3279 1316 Pls
3285 2253 Pls
3292 1316 Pls
3298 2229 Pls
3304 2220 Pls
3311 1317 Pls
3317 1321 Pls
3324 2182 Pls
3330 2169 Pls
3337 1314 Pls
3343 1314 Pls
3350 1325 Pls
3356 1319 Pls
3362 2109 Pls
3369 1314 Pls
3375 1314 Pls
3382 1318 Pls
3388 1315 Pls
3395 1319 Pls
3401 1323 Pls
3407 1315 Pls
3414 2012 Pls
3420 1314 Pls
3427 1321 Pls
3433 1314 Pls
3440 1963 Pls
3446 1321 Pls
3453 1315 Pls
3459 1316 Pls
3465 1915 Pls
3472 1314 Pls
3478 1896 Pls
3485 1315 Pls
3491 1325 Pls
3498 1314 Pls
3504 1842 Pls
3510 1314 Pls
3517 1316 Pls
3523 1317 Pls
3530 1796 Pls
3536 1319 Pls
3543 1320 Pls
3549 1318 Pls
3556 1314 Pls
3562 1315 Pls
3568 1317 Pls
3575 1317 Pls
3581 1316 Pls
3588 1314 Pls
3594 1318 Pls
3601 1324 Pls
3607 1649 Pls
3614 1315 Pls
3620 1628 Pls
3626 1316 Pls
3633 1601 Pls
3639 1320 Pls
3646 1316 Pls
3652 1317 Pls
3659 1315 Pls
3665 1319 Pls
3671 1529 Pls
3678 1316 Pls
3684 1504 Pls
3691 1319 Pls
3697 1319 Pls
3704 1315 Pls
3710 1456 Pls
3717 1316 Pls
3723 1316 Pls
3729 1324 Pls
3736 1319 Pls
3742 1318 Pls
3749 1315 Pls
3755 1315 Pls
3762 1360 Pls
3768 1330 Pls
3774 1323 Pls
3781 1315 Pls
3787 1319 Pls
3794 1316 Pls
3800 1316 Pls
3807 1316 Pls
3813 1316 Pls
3820 1316 Pls
3826 1316 Pls
3832 1317 Pls
3839 1317 Pls
3845 1316 Pls
3852 1316 Pls
3858 1316 Pls
3865 1317 Pls
3871 1317 Pls
3877 1317 Pls
3884 1316 Pls
3890 1317 Pls
3897 1315 Pls
3903 1316 Pls
3910 1320 Pls
3916 1320 Pls
3923 1319 Pls
3929 1318 Pls
3935 1317 Pls
3942 1318 Pls
3948 1316 Pls
3955 1316 Pls
3961 1316 Pls
3968 1319 Pls
3974 1316 Pls
3981 1317 Pls
3987 1317 Pls
3993 1316 Pls
4000 1318 Pls
4006 1316 Pls
4013 1317 Pls
4019 1316 Pls
4026 1320 Pls
4032 1319 Pls
4038 1316 Pls
4045 1316 Pls
4051 1316 Pls
4058 1318 Pls
4064 1317 Pls
4071 1317 Pls
4077 1318 Pls
4084 1318 Pls
4090 1317 Pls
4096 1318 Pls
4103 1317 Pls
4109 1317 Pls
4116 1317 Pls
4122 1317 Pls
4129 1318 Pls
4135 1317 Pls
4141 1317 Pls
4148 1317 Pls
4154 1319 Pls
4161 1317 Pls
4167 1317 Pls
4174 1319 Pls
4180 1319 Pls
4187 1317 Pls
4193 1320 Pls
4199 1318 Pls
4206 1320 Pls
4212 1322 Pls
4219 1318 Pls
4225 1322 Pls
4232 1318 Pls
4238 1323 Pls
4245 1319 Pls
4251 1318 Pls
4257 1330 Pls
4264 1332 Pls
4270 1318 Pls
4277 1319 Pls
4283 1318 Pls
4290 1320 Pls
4296 1318 Pls
4302 1323 Pls
4309 1318 Pls
4315 1323 Pls
4322 1322 Pls
4328 1320 Pls
4335 1324 Pls
4341 1319 Pls
4348 1325 Pls
4354 1320 Pls
4360 1325 Pls
4367 1318 Pls
4373 1320 Pls
4380 1320 Pls
4386 1333 Pls
4393 1319 Pls
4399 1337 Pls
4405 1332 Pls
4412 1328 Pls
4418 1337 Pls
4425 1323 Pls
4431 1324 Pls
4438 1327 Pls
4444 1319 Pls
4451 1319 Pls
4457 1321 Pls
4463 1319 Pls
4470 1323 Pls
4476 1319 Pls
4483 1322 Pls
4489 1323 Pls
4496 1321 Pls
4502 1320 Pls
4508 1323 Pls
4515 1319 Pls
4521 1320 Pls
4528 1321 Pls
4534 1330 Pls
4541 1321 Pls
4547 1323 Pls
4554 1319 Pls
4560 1322 Pls
4566 1320 Pls
4573 1321 Pls
4579 1319 Pls
4586 1320 Pls
4592 1329 Pls
4599 1326 Pls
4605 1323 Pls
4612 1330 Pls
4618 1323 Pls
4624 1320 Pls
4631 1321 Pls
4637 1324 Pls
4644 1325 Pls
4650 1328 Pls
4657 1325 Pls
4663 1321 Pls
4669 1322 Pls
4676 1329 Pls
4682 1326 Pls
4689 1324 Pls
4695 1321 Pls
4702 1322 Pls
4708 1326 Pls
4715 1321 Pls
4721 1330 Pls
4727 1322 Pls
4734 1323 Pls
4740 1324 Pls
4747 1325 Pls
4753 1321 Pls
4760 1324 Pls
4766 1323 Pls
4772 1320 Pls
4779 1322 Pls
4785 1323 Pls
4792 1333 Pls
4798 1327 Pls
4805 1329 Pls
4811 1321 Pls
4818 1321 Pls
4824 1322 Pls
4830 1325 Pls
4837 1324 Pls
4843 1330 Pls
4850 1323 Pls
4856 1322 Pls
4863 1322 Pls
4869 1324 Pls
4875 1329 Pls
4882 1325 Pls
4888 1325 Pls
4895 1323 Pls
4901 1328 Pls
4908 1323 Pls
4914 1322 Pls
4921 1324 Pls
4927 1325 Pls
4933 1322 Pls
4940 1323 Pls
4946 1322 Pls
4953 1323 Pls
4959 1322 Pls
4966 1323 Pls
4972 1323 Pls
4979 1327 Pls
4985 1325 Pls
4991 1323 Pls
4998 1327 Pls
5004 1326 Pls
5011 1324 Pls
5017 1327 Pls
5024 1326 Pls
5030 1335 Pls
5036 1325 Pls
5043 1349 Pls
5049 1342 Pls
5056 1342 Pls
5062 1346 Pls
5069 1350 Pls
5075 1356 Pls
5082 1348 Pls
5088 1348 Pls
5094 1348 Pls
5101 1349 Pls
5107 1354 Pls
5114 1357 Pls
5120 1354 Pls
5127 1354 Pls
5133 1356 Pls
5139 1355 Pls
5146 1361 Pls
5152 1359 Pls
5159 1358 Pls
5165 1359 Pls
5172 1360 Pls
5178 1362 Pls
5185 1363 Pls
5191 1364 Pls
5197 1367 Pls
5204 1376 Pls
5210 1370 Pls
5217 1376 Pls
5223 1376 Pls
5230 1376 Pls
5236 1378 Pls
5242 1382 Pls
5249 1380 Pls
5255 1389 Pls
5262 1387 Pls
5268 1388 Pls
5275 1401 Pls
5281 1396 Pls
5288 1394 Pls
5294 1397 Pls
5300 1403 Pls
5307 1402 Pls
5313 1409 Pls
5320 1406 Pls
5326 1407 Pls
5333 1409 Pls
5339 1423 Pls
5346 1416 Pls
5352 1423 Pls
5358 1424 Pls
5365 1428 Pls
5371 1431 Pls
5378 1435 Pls
5384 1437 Pls
5391 1438 Pls
5397 1441 Pls
5403 1448 Pls
5410 1447 Pls
5416 1453 Pls
5423 1453 Pls
5429 1458 Pls
5436 1460 Pls
5442 1465 Pls
5449 1468 Pls
5455 1472 Pls
5461 1475 Pls
5468 1479 Pls
5474 1482 Pls
5481 1487 Pls
5487 1492 Pls
5494 1498 Pls
5500 1498 Pls
5506 1503 Pls
5513 1508 Pls
5519 1514 Pls
5526 1516 Pls
5532 1520 Pls
5539 1529 Pls
5545 1531 Pls
5552 1536 Pls
5558 1536 Pls
5564 1543 Pls
5571 1546 Pls
5577 1555 Pls
5584 1555 Pls
5590 1563 Pls
5597 1567 Pls
5603 1571 Pls
5609 1577 Pls
5616 1584 Pls
5622 1587 Pls
5629 1590 Pls
5635 1596 Pls
5642 1603 Pls
5648 1608 Pls
5655 1613 Pls
5661 1620 Pls
5667 1622 Pls
5674 1629 Pls
5680 1635 Pls
5687 1643 Pls
5693 1661 Pls
5700 1651 Pls
5706 1656 Pls
5713 1669 Pls
5719 1668 Pls
5725 1675 Pls
5732 1687 Pls
5738 1686 Pls
5745 1692 Pls
5751 1702 Pls
5758 1708 Pls
5764 1714 Pls
5770 1726 Pls
5777 1734 Pls
5783 1734 Pls
5790 1737 Pls
5796 1744 Pls
5803 1749 Pls
5809 1760 Pls
5816 1763 Pls
5822 1772 Pls
5828 1782 Pls
5835 1785 Pls
5841 1797 Pls
5848 1799 Pls
5854 1807 Pls
5861 1814 Pls
5867 1821 Pls
5873 1826 Pls
5880 1835 Pls
5886 1842 Pls
5893 1852 Pls
5899 1859 Pls
5906 1869 Pls
5912 1879 Pls
5919 1885 Pls
5925 1888 Pls
5931 1899 Pls
5938 1911 Pls
5944 1912 Pls
5951 1923 Pls
5957 1927 Pls
5964 1936 Pls
5970 1945 Pls
5977 1956 Pls
5983 1960 Pls
5989 1969 Pls
5996 1991 Pls
6002 1989 Pls
6009 1995 Pls
6015 2003 Pls
6022 2011 Pls
6028 2021 Pls
6034 2029 Pls
6041 2041 Pls
6047 2049 Pls
6054 2057 Pls
6060 2066 Pls
6067 2075 Pls
6073 2087 Pls
6080 2094 Pls
6086 2111 Pls
6092 2112 Pls
6099 2124 Pls
6105 2132 Pls
6112 2143 Pls
6118 2152 Pls
6125 2161 Pls
6131 2173 Pls
6137 2186 Pls
6144 2201 Pls
6150 2199 Pls
6157 2211 Pls
6163 2218 Pls
6170 2239 Pls
6176 2239 Pls
6183 2248 Pls
6189 2268 Pls
6195 2271 Pls
6202 2284 Pls
6208 2291 Pls
6215 2301 Pls
6221 2316 Pls
6228 2325 Pls
6234 2334 Pls
6240 2343 Pls
6247 2363 Pls
6253 2363 Pls
6260 2380 Pls
6266 2389 Pls
6273 2401 Pls
6279 2410 Pls
6286 2430 Pls
6292 2433 Pls
6298 2444 Pls
6305 2454 Pls
6311 2467 Pls
6318 2476 Pls
6324 2491 Pls
6331 2502 Pls
6337 2515 Pls
6344 2523 Pls
6350 2544 Pls
6356 2549 Pls
6363 2566 Pls
6369 2572 Pls
6376 2582 Pls
6382 2597 Pls
6389 2608 Pls
6395 2625 Pls
6401 2634 Pls
6408 2645 Pls
6414 2658 Pls
6421 2678 Pls
6427 2684 Pls
6434 2698 Pls
6440 2710 Pls
6447 2722 Pls
6453 2743 Pls
6459 2748 Pls
6466 2760 Pls
6472 2782 Pls
6479 2786 Pls
6485 2800 Pls
6492 2814 Pls
6498 2826 Pls
6504 2848 Pls
6511 2853 Pls
6517 2866 Pls
6524 2890 Pls
6530 2897 Pls
5907 4116 Pls
% End plot #1
1.000 UL
LTb
1830 4329 N
0 -3019 V
4829 0 V
0 3019 V
-4829 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Roman
