%!PS-Adobe-2.0 EPSF-2.0
%%Title: jan27_intel_incr_burst_800.eps
%%Creator: gnuplot 4.4 patchlevel 3
%%CreationDate: Thu Jan 30 05:37:24 2014
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded true def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 10.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -100 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (jan27_intel_incr_burst_800.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 3)
  /Author (root)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Thu Jan 30 05:37:24 2014)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Roman) findfont 300 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
0.50 0.50 0.50 C 930 1425 M
5729 0 V
stroke
LTb
930 1425 M
-63 0 V
stroke
750 1425 M
[ [(Roman) 300.0 0.0 true true 0 (1)]
] -100.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
0.50 0.50 0.50 C 930 1890 M
5729 0 V
stroke
LTb
930 1890 M
-63 0 V
stroke
750 1890 M
[ [(Roman) 300.0 0.0 true true 0 (2)]
] -100.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
0.50 0.50 0.50 C 930 2355 M
5729 0 V
stroke
LTb
930 2355 M
-63 0 V
stroke
750 2355 M
[ [(Roman) 300.0 0.0 true true 0 (3)]
] -100.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
0.50 0.50 0.50 C 930 2820 M
5729 0 V
stroke
LTb
930 2820 M
-63 0 V
stroke
750 2820 M
[ [(Roman) 300.0 0.0 true true 0 (4)]
] -100.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
0.50 0.50 0.50 C 930 3284 M
5729 0 V
stroke
LTb
930 3284 M
-63 0 V
stroke
750 3284 M
[ [(Roman) 300.0 0.0 true true 0 (5)]
] -100.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
0.50 0.50 0.50 C 930 3749 M
5729 0 V
stroke
LTb
930 3749 M
-63 0 V
stroke
750 3749 M
[ [(Roman) 300.0 0.0 true true 0 (6)]
] -100.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
0.50 0.50 0.50 C 930 4214 M
5729 0 V
stroke
LTb
930 4214 M
-63 0 V
stroke
750 4214 M
[ [(Roman) 300.0 0.0 true true 0 (7)]
] -100.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
0.50 0.50 0.50 C 930 4679 M
5729 0 V
stroke
LTb
930 4679 M
-63 0 V
stroke
750 4679 M
[ [(Roman) 300.0 0.0 true true 0 (8)]
] -100.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
0.50 0.50 0.50 C 930 960 M
0 3719 V
stroke
LTb
930 960 M
0 63 V
stroke
930 660 M
[ [(Roman) 300.0 0.0 true true 0 ( 0)]
] -100.0 MCshow
1.000 UL
LTb
1.000 UL
LTa
0.50 0.50 0.50 C 1646 960 M
0 3719 V
stroke
LTb
1646 960 M
0 63 V
stroke
1646 660 M
[ [(Roman) 300.0 0.0 true true 0 ( 100)]
] -100.0 MCshow
1.000 UL
LTb
1.000 UL
LTa
0.50 0.50 0.50 C 2362 960 M
0 3719 V
stroke
LTb
2362 960 M
0 63 V
stroke
2362 660 M
[ [(Roman) 300.0 0.0 true true 0 ( 200)]
] -100.0 MCshow
1.000 UL
LTb
1.000 UL
LTa
0.50 0.50 0.50 C 3078 960 M
0 3719 V
stroke
LTb
3078 960 M
0 63 V
stroke
3078 660 M
[ [(Roman) 300.0 0.0 true true 0 ( 300)]
] -100.0 MCshow
1.000 UL
LTb
1.000 UL
LTa
0.50 0.50 0.50 C 3795 960 M
0 3719 V
stroke
LTb
3795 960 M
0 63 V
stroke
3795 660 M
[ [(Roman) 300.0 0.0 true true 0 ( 400)]
] -100.0 MCshow
1.000 UL
LTb
1.000 UL
LTa
0.50 0.50 0.50 C 4511 960 M
0 3719 V
stroke
LTb
4511 960 M
0 63 V
stroke
4511 660 M
[ [(Roman) 300.0 0.0 true true 0 ( 500)]
] -100.0 MCshow
1.000 UL
LTb
1.000 UL
LTa
0.50 0.50 0.50 C 5227 960 M
0 3719 V
stroke
LTb
5227 960 M
0 63 V
stroke
5227 660 M
[ [(Roman) 300.0 0.0 true true 0 ( 600)]
] -100.0 MCshow
1.000 UL
LTb
1.000 UL
LTa
0.50 0.50 0.50 C 5943 960 M
0 63 V
0 3656 V
stroke
LTb
5943 960 M
0 63 V
stroke
5943 660 M
[ [(Roman) 300.0 0.0 true true 0 ( 700)]
] -100.0 MCshow
1.000 UL
LTb
1.000 UL
LTa
0.50 0.50 0.50 C 6659 960 M
0 3719 V
stroke
LTb
6659 960 M
0 63 V
stroke
6659 660 M
[ [(Roman) 300.0 0.0 true true 0 ( 800)]
] -100.0 MCshow
1.000 UL
LTb
1.000 UL
LTb
930 4679 N
930 960 L
5729 0 V
0 3719 V
-5729 0 V
Z stroke
LCb setrgbcolor
240 2819 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Roman) 300.0 0.0 true true 0 (insertion delay\(ms\))]
] -100.0 MCshow
grestore
LTb
LCb setrgbcolor
3794 210 M
[ [(Roman) 300.0 0.0 true true 0 (rule #)]
] -100.0 MCshow
LTb
1.000 UP
1.000 UL
LTb
% Begin plot #1
2.000 UP
2.000 UL
LT0
0.63 0.00 0.00 C 937 2036 Pls
944 1471 Pls
951 1493 Pls
959 1415 Pls
966 1469 Pls
973 1440 Pls
980 1431 Pls
987 1458 Pls
994 1442 Pls
1002 1439 Pls
1009 1429 Pls
1016 1476 Pls
1023 1414 Pls
1030 1453 Pls
1037 1447 Pls
1045 1496 Pls
1052 1445 Pls
1059 1444 Pls
1066 1449 Pls
1073 1426 Pls
1080 1463 Pls
1088 1447 Pls
1095 1452 Pls
1102 1457 Pls
1109 1445 Pls
1116 1459 Pls
1123 1427 Pls
1131 1456 Pls
1138 1446 Pls
1145 1479 Pls
1152 1421 Pls
1159 1468 Pls
1166 1451 Pls
1173 1456 Pls
1181 1484 Pls
1188 1426 Pls
1195 1445 Pls
1202 1461 Pls
1209 1448 Pls
1216 1441 Pls
1224 1461 Pls
1231 1449 Pls
1238 1452 Pls
1245 1465 Pls
1252 1441 Pls
1259 1426 Pls
1267 1455 Pls
1274 1453 Pls
1281 1458 Pls
1288 1458 Pls
1295 1464 Pls
1302 1460 Pls
1310 1464 Pls
1317 1434 Pls
1324 1466 Pls
1331 1434 Pls
1338 1426 Pls
1345 1459 Pls
1353 1450 Pls
1360 1454 Pls
1367 1458 Pls
1374 1449 Pls
1381 1426 Pls
1388 1453 Pls
1395 1442 Pls
1403 1466 Pls
1410 1462 Pls
1417 1426 Pls
1424 1457 Pls
1431 1463 Pls
1438 1458 Pls
1446 1457 Pls
1453 1463 Pls
1460 1456 Pls
1467 1426 Pls
1474 1463 Pls
1481 1480 Pls
1489 1455 Pls
1496 1461 Pls
1503 1460 Pls
1510 1461 Pls
1517 1426 Pls
1524 1456 Pls
1532 1483 Pls
1539 1473 Pls
1546 1460 Pls
1553 1441 Pls
1560 1426 Pls
1567 1464 Pls
1575 1449 Pls
1582 1460 Pls
1589 1463 Pls
1596 1482 Pls
1603 1426 Pls
1610 1450 Pls
1617 1473 Pls
1625 1450 Pls
1632 1463 Pls
1639 1426 Pls
1646 1459 Pls
1653 1452 Pls
1660 1495 Pls
1668 1443 Pls
1675 1463 Pls
1682 1470 Pls
1689 1432 Pls
1696 1426 Pls
1703 1465 Pls
1711 1473 Pls
1718 1501 Pls
1725 1461 Pls
1732 1462 Pls
1739 1462 Pls
1746 1464 Pls
1754 1426 Pls
1761 1474 Pls
1768 1522 Pls
1775 1453 Pls
1782 1470 Pls
1789 1466 Pls
1797 1450 Pls
1804 1470 Pls
1811 1488 Pls
1818 1426 Pls
1825 1476 Pls
1832 1449 Pls
1839 1464 Pls
1847 1470 Pls
1854 1456 Pls
1861 1465 Pls
1868 1484 Pls
1875 1513 Pls
1882 1455 Pls
1890 1454 Pls
1897 1460 Pls
1904 1456 Pls
1911 1426 Pls
1918 1481 Pls
1925 1464 Pls
1933 1478 Pls
1940 1457 Pls
1947 1476 Pls
1954 1528 Pls
1961 1470 Pls
1968 1454 Pls
1976 1522 Pls
1983 1426 Pls
1990 1470 Pls
1997 1474 Pls
2004 1458 Pls
2011 1510 Pls
2019 1500 Pls
2026 1452 Pls
2033 1470 Pls
2040 1426 Pls
2047 1456 Pls
2054 1472 Pls
2061 1472 Pls
2069 1487 Pls
2076 1476 Pls
2083 1426 Pls
2090 1471 Pls
2097 1469 Pls
2104 1458 Pls
2112 1468 Pls
2119 1476 Pls
2126 1426 Pls
2133 1477 Pls
2140 1466 Pls
2147 1471 Pls
2155 1522 Pls
2162 1426 Pls
2169 1465 Pls
2176 1468 Pls
2183 1488 Pls
2190 1462 Pls
2198 1477 Pls
2205 1426 Pls
2212 1464 Pls
2219 1477 Pls
2226 1482 Pls
2233 1477 Pls
2241 1467 Pls
2248 1444 Pls
2255 1479 Pls
2262 1505 Pls
2269 1426 Pls
2276 1473 Pls
2283 1474 Pls
2291 1467 Pls
2298 1480 Pls
2305 1482 Pls
2312 1476 Pls
2319 1426 Pls
2326 1482 Pls
2334 1486 Pls
2341 1493 Pls
2348 1472 Pls
2355 1490 Pls
2362 1476 Pls
2369 1470 Pls
2377 1426 Pls
2384 1496 Pls
2391 1454 Pls
2398 1488 Pls
2405 1480 Pls
2412 1517 Pls
2420 1426 Pls
2427 1477 Pls
2434 1485 Pls
2441 1487 Pls
2448 1470 Pls
2455 1476 Pls
2463 1484 Pls
2470 1426 Pls
2477 1480 Pls
2484 1476 Pls
2491 1484 Pls
2498 1671 Pls
2505 1426 Pls
2513 1485 Pls
2520 1527 Pls
2527 1499 Pls
2534 1489 Pls
2541 1476 Pls
2548 1477 Pls
2556 1472 Pls
2563 1489 Pls
2570 1484 Pls
2577 1495 Pls
2584 1426 Pls
2591 1476 Pls
2599 1476 Pls
2606 1495 Pls
2613 1473 Pls
2620 1482 Pls
2627 1474 Pls
2634 1501 Pls
2642 1479 Pls
2649 1477 Pls
2656 1426 Pls
2663 1484 Pls
2670 1477 Pls
2677 1472 Pls
2685 1482 Pls
2692 1482 Pls
2699 1517 Pls
2706 1490 Pls
2713 1426 Pls
2720 1484 Pls
2727 1482 Pls
2735 1489 Pls
2742 1494 Pls
2749 1477 Pls
2756 1481 Pls
2763 1535 Pls
2770 1426 Pls
2778 1473 Pls
2785 1491 Pls
2792 1496 Pls
2799 1462 Pls
2806 1481 Pls
2813 1498 Pls
2821 1426 Pls
2828 1491 Pls
2835 1482 Pls
2842 1497 Pls
2849 1505 Pls
2856 1481 Pls
2864 1426 Pls
2871 1495 Pls
2878 1489 Pls
2885 1483 Pls
2892 1486 Pls
2899 1500 Pls
2907 1426 Pls
2914 1489 Pls
2921 1509 Pls
2928 1474 Pls
2935 1470 Pls
2942 1426 Pls
2949 1492 Pls
2957 1496 Pls
2964 1486 Pls
2971 1483 Pls
2978 1426 Pls
2985 1490 Pls
2992 1487 Pls
3000 1497 Pls
3007 1426 Pls
3014 1485 Pls
3021 1498 Pls
3028 1501 Pls
3035 1426 Pls
3043 1504 Pls
3050 1486 Pls
3057 1494 Pls
3064 1504 Pls
3071 1426 Pls
3078 1461 Pls
3086 1505 Pls
3093 1513 Pls
3100 1473 Pls
3107 1494 Pls
3114 1426 Pls
3121 1495 Pls
3129 1496 Pls
3136 1487 Pls
3143 1489 Pls
3150 1426 Pls
3157 1502 Pls
3164 1500 Pls
3171 1508 Pls
3179 1426 Pls
3186 1494 Pls
3193 1500 Pls
3200 1491 Pls
3207 1426 Pls
3214 1481 Pls
3222 1489 Pls
3229 1505 Pls
3236 1490 Pls
3243 1426 Pls
3250 1495 Pls
3257 1483 Pls
3265 1503 Pls
3272 1426 Pls
3279 1503 Pls
3286 1499 Pls
3293 1492 Pls
3300 1483 Pls
3308 1471 Pls
3315 1426 Pls
3322 1500 Pls
3329 1505 Pls
3336 1491 Pls
3343 1496 Pls
3351 1426 Pls
3358 1509 Pls
3365 1491 Pls
3372 1490 Pls
3379 1506 Pls
3386 1426 Pls
3393 1498 Pls
3401 1502 Pls
3408 1487 Pls
3415 1510 Pls
3422 1426 Pls
3429 1481 Pls
3436 1501 Pls
3444 1511 Pls
3451 1509 Pls
3458 1490 Pls
3465 1491 Pls
3472 1426 Pls
3479 1512 Pls
3487 1478 Pls
3494 1492 Pls
3501 1508 Pls
3508 1500 Pls
3515 1426 Pls
3522 1510 Pls
3530 1519 Pls
3537 1484 Pls
3544 1520 Pls
3551 1426 Pls
3558 1493 Pls
3565 1516 Pls
3573 1508 Pls
3580 1514 Pls
3587 1426 Pls
3594 1486 Pls
3601 1508 Pls
3608 1516 Pls
3615 1507 Pls
3623 1509 Pls
3630 1426 Pls
3637 1495 Pls
3644 1509 Pls
3651 1496 Pls
3658 1519 Pls
3666 1496 Pls
3673 1512 Pls
3680 1426 Pls
3687 1520 Pls
3694 1525 Pls
3701 1510 Pls
3709 1497 Pls
3716 1426 Pls
3723 1509 Pls
3730 1489 Pls
3737 1516 Pls
3744 1510 Pls
3752 1426 Pls
3759 1510 Pls
3766 1506 Pls
3773 1504 Pls
3780 1507 Pls
3787 1426 Pls
3795 1515 Pls
3802 1508 Pls
3809 1504 Pls
3816 1500 Pls
3823 1512 Pls
3830 1528 Pls
3837 1503 Pls
3845 1426 Pls
3852 1514 Pls
3859 1516 Pls
3866 1498 Pls
3873 1503 Pls
3880 1511 Pls
3888 1426 Pls
3895 1525 Pls
3902 1490 Pls
3909 1499 Pls
3916 1426 Pls
3923 1515 Pls
3931 1519 Pls
3938 1501 Pls
3945 1521 Pls
3952 1426 Pls
3959 1521 Pls
3966 1516 Pls
3974 1500 Pls
3981 1426 Pls
3988 1513 Pls
3995 1520 Pls
4002 1512 Pls
4009 1505 Pls
4016 1426 Pls
4024 1506 Pls
4031 1506 Pls
4038 1508 Pls
4045 1426 Pls
4052 1511 Pls
4059 1525 Pls
4067 1509 Pls
4074 1515 Pls
4081 1515 Pls
4088 1426 Pls
4095 1519 Pls
4102 1510 Pls
4110 1520 Pls
4117 1521 Pls
4124 1426 Pls
4131 1513 Pls
4138 1526 Pls
4145 1512 Pls
4153 1539 Pls
4160 1521 Pls
4167 1426 Pls
4174 1516 Pls
4181 1510 Pls
4188 1516 Pls
4196 1426 Pls
4203 1526 Pls
4210 1510 Pls
4217 1519 Pls
4224 1527 Pls
4231 1426 Pls
4238 1505 Pls
4246 1518 Pls
4253 1522 Pls
4260 1511 Pls
4267 1426 Pls
4274 1530 Pls
4281 1524 Pls
4289 1517 Pls
4296 1529 Pls
4303 1426 Pls
4310 1517 Pls
4317 1510 Pls
4324 1510 Pls
4332 1523 Pls
4339 1521 Pls
4346 1426 Pls
4353 1524 Pls
4360 1536 Pls
4367 1511 Pls
4375 1526 Pls
4382 1521 Pls
4389 1426 Pls
4396 1515 Pls
4403 1528 Pls
4410 1513 Pls
4418 1538 Pls
4425 1426 Pls
4432 1525 Pls
4439 1522 Pls
4446 1510 Pls
4453 1543 Pls
4460 1426 Pls
4468 1517 Pls
4475 1515 Pls
4482 1531 Pls
4489 1426 Pls
4496 1532 Pls
4503 1517 Pls
4511 1530 Pls
4518 1527 Pls
4525 1426 Pls
4532 1540 Pls
4539 1520 Pls
4546 1517 Pls
4554 1529 Pls
4561 1522 Pls
4568 1523 Pls
4575 1426 Pls
4582 1535 Pls
4589 1546 Pls
4597 1513 Pls
4604 1506 Pls
4611 1426 Pls
4618 1522 Pls
4625 1519 Pls
4632 1525 Pls
4640 1539 Pls
4647 1426 Pls
4654 1530 Pls
4661 1515 Pls
4668 1525 Pls
4675 1534 Pls
4682 1541 Pls
4690 1426 Pls
4697 1524 Pls
4704 1518 Pls
4711 1524 Pls
4718 1526 Pls
4725 1548 Pls
4733 1523 Pls
4740 1505 Pls
4747 1536 Pls
4754 1534 Pls
4761 1426 Pls
4768 1526 Pls
4776 1548 Pls
4783 1515 Pls
4790 1543 Pls
4797 1426 Pls
4804 1523 Pls
4811 1527 Pls
4819 1531 Pls
4826 1426 Pls
4833 1523 Pls
4840 1551 Pls
4847 1518 Pls
4854 1540 Pls
4862 1542 Pls
4869 1426 Pls
4876 1512 Pls
4883 1532 Pls
4890 1533 Pls
4897 1547 Pls
4904 1522 Pls
4912 1538 Pls
4919 1426 Pls
4926 1528 Pls
4933 1550 Pls
4940 1513 Pls
4947 1530 Pls
4955 1426 Pls
4962 1521 Pls
4969 1526 Pls
4976 1527 Pls
4983 1426 Pls
4990 1556 Pls
4998 1539 Pls
5005 1518 Pls
5012 1519 Pls
5019 1426 Pls
5026 1533 Pls
5033 1530 Pls
5041 1539 Pls
5048 1529 Pls
5055 1426 Pls
5062 1520 Pls
5069 1538 Pls
5076 1540 Pls
5084 1426 Pls
5091 1537 Pls
5098 1540 Pls
5105 1528 Pls
5112 1537 Pls
5119 1426 Pls
5126 1545 Pls
5134 1531 Pls
5141 1541 Pls
5148 1426 Pls
5155 1524 Pls
5162 1538 Pls
5169 1545 Pls
5177 1426 Pls
5184 1537 Pls
5191 1532 Pls
5198 1530 Pls
5205 1426 Pls
5212 1539 Pls
5220 1534 Pls
5227 1543 Pls
5234 1558 Pls
5241 1426 Pls
5248 1540 Pls
5255 1541 Pls
5263 1426 Pls
5270 1554 Pls
5277 1542 Pls
5284 1545 Pls
5291 1426 Pls
5298 1557 Pls
5306 1532 Pls
5313 1536 Pls
5320 1426 Pls
5327 1542 Pls
5334 1547 Pls
5341 1426 Pls
5348 1536 Pls
5356 1548 Pls
5363 1541 Pls
5370 1426 Pls
5377 2752 Pls
5384 1545 Pls
5391 1543 Pls
5399 1426 Pls
5406 1556 Pls
5413 1545 Pls
5420 1537 Pls
5427 1426 Pls
5434 1543 Pls
5442 1551 Pls
5449 1426 Pls
5456 1551 Pls
5463 1545 Pls
5470 1536 Pls
5477 1426 Pls
5485 1550 Pls
5492 1550 Pls
5499 1541 Pls
5506 1554 Pls
5513 1426 Pls
5520 1549 Pls
5528 1567 Pls
5535 1531 Pls
5542 1547 Pls
5549 1426 Pls
5556 1546 Pls
5563 1562 Pls
5570 1504 Pls
5578 1426 Pls
5585 1546 Pls
5599 1565 Pls
5606 1544 Pls
5613 1426 Pls
5621 1556 Pls
5628 1530 Pls
5635 1553 Pls
5642 1426 Pls
5649 1546 Pls
5656 1556 Pls
5664 1554 Pls
5671 1554 Pls
5678 1426 Pls
5685 1557 Pls
5692 1558 Pls
5699 1545 Pls
5707 1426 Pls
5714 1524 Pls
5721 1553 Pls
5728 1546 Pls
5735 1426 Pls
5742 1533 Pls
5750 1559 Pls
5757 1557 Pls
5764 1426 Pls
5771 1541 Pls
5778 1545 Pls
5785 1551 Pls
5792 1426 Pls
5800 1557 Pls
5807 1563 Pls
5814 1532 Pls
5821 1426 Pls
5828 1555 Pls
5835 1547 Pls
5843 1426 Pls
5850 1556 Pls
5857 1556 Pls
5864 1551 Pls
5871 1426 Pls
5878 1558 Pls
5886 1569 Pls
5893 1551 Pls
5900 1426 Pls
5907 1558 Pls
5914 1546 Pls
5921 1556 Pls
5929 1426 Pls
5936 1557 Pls
5943 1553 Pls
5950 1561 Pls
5957 1549 Pls
5964 1551 Pls
5972 1555 Pls
5979 1426 Pls
5986 1521 Pls
5993 1571 Pls
6000 1546 Pls
6007 1426 Pls
6014 1561 Pls
6022 1559 Pls
6029 1576 Pls
6036 1426 Pls
6043 1551 Pls
6050 1549 Pls
6057 1566 Pls
6065 1426 Pls
6072 1562 Pls
6079 1562 Pls
6086 1560 Pls
6093 1426 Pls
6100 1546 Pls
6108 1558 Pls
6115 1426 Pls
6122 1532 Pls
6129 1544 Pls
6136 1575 Pls
6143 1426 Pls
6151 1558 Pls
6158 1556 Pls
6165 1570 Pls
6172 1426 Pls
6179 1562 Pls
6186 1563 Pls
6194 1564 Pls
6201 1426 Pls
6208 1563 Pls
6215 1567 Pls
6222 1426 Pls
6229 1550 Pls
6236 1578 Pls
6244 1576 Pls
6251 1426 Pls
6258 1549 Pls
6265 1553 Pls
6272 1426 Pls
6279 1560 Pls
6287 1544 Pls
6294 1570 Pls
6301 1426 Pls
6308 1569 Pls
6315 1556 Pls
6322 1557 Pls
6330 1426 Pls
6337 1558 Pls
6344 1582 Pls
6351 1426 Pls
6358 1572 Pls
6365 1568 Pls
6373 1561 Pls
6380 1426 Pls
6387 1570 Pls
6394 1565 Pls
6401 1550 Pls
6408 1426 Pls
6416 1570 Pls
6423 1564 Pls
6430 1426 Pls
6437 1575 Pls
6444 1567 Pls
6451 1557 Pls
6458 1426 Pls
6466 1562 Pls
6473 1582 Pls
6480 1567 Pls
6487 1426 Pls
6494 1537 Pls
6501 1599 Pls
6509 1426 Pls
6516 1565 Pls
6523 1565 Pls
6530 1573 Pls
6537 1426 Pls
6544 1572 Pls
6552 1566 Pls
6559 1426 Pls
6566 1562 Pls
6573 1576 Pls
6580 1575 Pls
6587 1426 Pls
6595 1582 Pls
6602 1572 Pls
6609 1570 Pls
6616 1426 Pls
6623 1567 Pls
6630 1558 Pls
6638 1426 Pls
6645 1589 Pls
6652 1576 Pls
6659 1576 Pls
% End plot #1
1.000 UL
LTb
930 4679 N
930 960 L
5729 0 V
0 3719 V
-5729 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Roman
