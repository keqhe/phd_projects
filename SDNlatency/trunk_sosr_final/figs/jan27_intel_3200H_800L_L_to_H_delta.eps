%!PS-Adobe-2.0 EPSF-2.0
%%Title: jan27_intel_3200H_800L_L_to_H_delta.eps
%%Creator: gnuplot 4.4 patchlevel 3
%%CreationDate: Wed Jan 29 23:53:37 2014
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded true def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 10.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -100 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (jan27_intel_3200H_800L_L_to_H_delta.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 3)
  /Author (root)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Jan 29 23:53:37 2014)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Roman) findfont 300 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
0.50 0.50 0.50 C 1110 960 M
5549 0 V
stroke
LTb
1110 960 M
63 0 V
stroke
930 960 M
[ [(Roman) 300.0 0.0 true true 0 ( 0)]
] -100.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
0.50 0.50 0.50 C 1110 1425 M
5549 0 V
stroke
LTb
1110 1425 M
63 0 V
stroke
930 1425 M
[ [(Roman) 300.0 0.0 true true 0 ( 1)]
] -100.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
0.50 0.50 0.50 C 1110 1890 M
5549 0 V
stroke
LTb
1110 1890 M
63 0 V
stroke
930 1890 M
[ [(Roman) 300.0 0.0 true true 0 ( 2)]
] -100.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
0.50 0.50 0.50 C 1110 2355 M
5549 0 V
stroke
LTb
1110 2355 M
63 0 V
stroke
930 2355 M
[ [(Roman) 300.0 0.0 true true 0 ( 3)]
] -100.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
0.50 0.50 0.50 C 1110 2820 M
5549 0 V
stroke
LTb
1110 2820 M
63 0 V
stroke
930 2820 M
[ [(Roman) 300.0 0.0 true true 0 ( 4)]
] -100.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
0.50 0.50 0.50 C 1110 3284 M
5549 0 V
stroke
LTb
1110 3284 M
63 0 V
stroke
930 3284 M
[ [(Roman) 300.0 0.0 true true 0 ( 5)]
] -100.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
0.50 0.50 0.50 C 1110 3749 M
5549 0 V
stroke
LTb
1110 3749 M
63 0 V
stroke
930 3749 M
[ [(Roman) 300.0 0.0 true true 0 ( 6)]
] -100.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
0.50 0.50 0.50 C 1110 4214 M
5549 0 V
stroke
LTb
1110 4214 M
63 0 V
stroke
930 4214 M
[ [(Roman) 300.0 0.0 true true 0 ( 7)]
] -100.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
0.50 0.50 0.50 C 1110 4679 M
5549 0 V
stroke
LTb
1110 4679 M
63 0 V
stroke
930 4679 M
[ [(Roman) 300.0 0.0 true true 0 ( 8)]
] -100.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
0.50 0.50 0.50 C 1110 960 M
0 3719 V
stroke
LTb
1110 960 M
0 63 V
stroke
1110 660 M
[ [(Roman) 300.0 0.0 true true 0 ( 0)]
] -100.0 MCshow
1.000 UL
LTb
1.000 UL
LTa
0.50 0.50 0.50 C 1804 960 M
0 3719 V
stroke
LTb
1804 960 M
0 63 V
stroke
1804 660 M
[ [(Roman) 300.0 0.0 true true 0 ( 100)]
] -100.0 MCshow
1.000 UL
LTb
1.000 UL
LTa
0.50 0.50 0.50 C 2497 960 M
0 3719 V
stroke
LTb
2497 960 M
0 63 V
stroke
2497 660 M
[ [(Roman) 300.0 0.0 true true 0 ( 200)]
] -100.0 MCshow
1.000 UL
LTb
1.000 UL
LTa
0.50 0.50 0.50 C 3191 960 M
0 3719 V
stroke
LTb
3191 960 M
0 63 V
stroke
3191 660 M
[ [(Roman) 300.0 0.0 true true 0 ( 300)]
] -100.0 MCshow
1.000 UL
LTb
1.000 UL
LTa
0.50 0.50 0.50 C 3885 960 M
0 3719 V
stroke
LTb
3885 960 M
0 63 V
stroke
3885 660 M
[ [(Roman) 300.0 0.0 true true 0 ( 400)]
] -100.0 MCshow
1.000 UL
LTb
1.000 UL
LTa
0.50 0.50 0.50 C 4578 960 M
0 3719 V
stroke
LTb
4578 960 M
0 63 V
stroke
4578 660 M
[ [(Roman) 300.0 0.0 true true 0 ( 500)]
] -100.0 MCshow
1.000 UL
LTb
1.000 UL
LTa
0.50 0.50 0.50 C 5272 960 M
0 3719 V
stroke
LTb
5272 960 M
0 63 V
stroke
5272 660 M
[ [(Roman) 300.0 0.0 true true 0 ( 600)]
] -100.0 MCshow
1.000 UL
LTb
1.000 UL
LTa
0.50 0.50 0.50 C 5965 960 M
0 63 V
0 3656 V
stroke
LTb
5965 960 M
0 63 V
stroke
5965 660 M
[ [(Roman) 300.0 0.0 true true 0 ( 700)]
] -100.0 MCshow
1.000 UL
LTb
1.000 UL
LTa
0.50 0.50 0.50 C 6659 960 M
0 3719 V
stroke
LTb
6659 960 M
0 63 V
stroke
6659 660 M
[ [(Roman) 300.0 0.0 true true 0 ( 800)]
] -100.0 MCshow
1.000 UL
LTb
1.000 UL
LTb
1110 4679 N
0 -3719 V
5549 0 V
0 3719 V
-5549 0 V
Z stroke
LCb setrgbcolor
240 2819 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Roman) 300.0 0.0 true true 0 (insertion delay\(ms\))]
] -100.0 MCshow
grestore
LTb
LCb setrgbcolor
3884 210 M
[ [(Roman) 300.0 0.0 true true 0 (rule #)]
] -100.0 MCshow
LTb
1.000 UP
1.000 UL
LTb
% Begin plot #1
2.000 UP
2.000 UL
LT0
0.63 0.00 0.00 C 1117 2087 Pls
1124 1443 Pls
1131 1436 Pls
1138 1454 Pls
1145 1948 Pls
1152 1446 Pls
1159 1459 Pls
1165 1457 Pls
1172 1942 Pls
1179 1564 Pls
1186 1426 Pls
1193 1450 Pls
1200 1454 Pls
1207 1458 Pls
1214 1452 Pls
1221 1479 Pls
1228 1451 Pls
1235 1441 Pls
1242 1455 Pls
1249 1441 Pls
1256 1463 Pls
1263 1443 Pls
1270 1446 Pls
1276 1564 Pls
1283 1444 Pls
1290 1963 Pls
1297 1458 Pls
1304 1445 Pls
1311 1564 Pls
1318 1448 Pls
1325 1953 Pls
1332 1464 Pls
1339 1446 Pls
1346 1456 Pls
1353 1465 Pls
1360 1564 Pls
1367 1477 Pls
1374 1455 Pls
1381 1473 Pls
1387 1463 Pls
1394 1432 Pls
1401 1459 Pls
1408 1461 Pls
1415 1454 Pls
1422 1479 Pls
1429 1451 Pls
1436 1467 Pls
1443 1442 Pls
1450 1470 Pls
1457 1463 Pls
1464 1456 Pls
1471 1460 Pls
1478 1478 Pls
1485 1473 Pls
1491 1442 Pls
1498 1466 Pls
1505 1475 Pls
1512 1439 Pls
1519 1564 Pls
1526 1489 Pls
1533 1462 Pls
1540 1502 Pls
1547 1448 Pls
1554 1461 Pls
1561 1455 Pls
1568 1454 Pls
1575 1471 Pls
1582 1448 Pls
1589 1429 Pls
1596 1440 Pls
1602 1465 Pls
1609 1455 Pls
1616 1429 Pls
1623 1483 Pls
1630 1564 Pls
1637 1462 Pls
1644 1461 Pls
1651 1453 Pls
1658 1471 Pls
1665 1466 Pls
1672 1456 Pls
1679 1491 Pls
1686 1454 Pls
1693 1481 Pls
1700 1436 Pls
1707 1479 Pls
1713 1454 Pls
1720 1564 Pls
1727 1463 Pls
1734 1474 Pls
1741 1483 Pls
1748 1492 Pls
1755 1505 Pls
1762 1468 Pls
1769 1564 Pls
1776 1465 Pls
1783 1470 Pls
1790 1468 Pls
1797 1471 Pls
1804 1472 Pls
1811 1496 Pls
1817 1453 Pls
1824 1471 Pls
1831 1479 Pls
1838 1439 Pls
1845 1564 Pls
1852 1470 Pls
1859 1508 Pls
1866 1514 Pls
1873 1543 Pls
1880 1481 Pls
1887 1564 Pls
1894 1472 Pls
1901 1476 Pls
1908 1478 Pls
1915 1461 Pls
1922 1467 Pls
1928 1485 Pls
1935 1509 Pls
1942 1564 Pls
1949 1484 Pls
1956 1475 Pls
1963 1471 Pls
1970 1482 Pls
1977 1471 Pls
1984 1476 Pls
1991 1471 Pls
1998 1480 Pls
2005 1475 Pls
2012 1527 Pls
2019 1564 Pls
2026 1516 Pls
2033 1468 Pls
2039 1463 Pls
2046 1466 Pls
2053 1484 Pls
2060 1471 Pls
2067 1463 Pls
2074 1502 Pls
2081 1462 Pls
2088 1486 Pls
2095 1474 Pls
2102 1564 Pls
2109 1467 Pls
2116 1482 Pls
2123 1519 Pls
2130 1466 Pls
2137 1461 Pls
2144 1465 Pls
2150 1475 Pls
2157 1483 Pls
2164 1492 Pls
2171 1486 Pls
2178 1473 Pls
2185 1500 Pls
2192 1564 Pls
2199 1465 Pls
2206 1487 Pls
2213 1486 Pls
2220 1496 Pls
2227 1476 Pls
2234 1500 Pls
2241 1512 Pls
2248 1479 Pls
2254 1496 Pls
2261 3184 Pls
2268 1503 Pls
2275 1482 Pls
2282 1503 Pls
2289 1564 Pls
2296 1490 Pls
2303 1495 Pls
2310 1492 Pls
2317 1494 Pls
2324 1495 Pls
2331 1471 Pls
2338 1489 Pls
2345 1488 Pls
2352 1564 Pls
2359 1488 Pls
2365 1495 Pls
2372 1506 Pls
2379 1459 Pls
2386 1502 Pls
2393 1490 Pls
2400 1483 Pls
2407 1496 Pls
2414 1491 Pls
2421 1481 Pls
2428 1497 Pls
2435 1564 Pls
2442 1493 Pls
2449 1498 Pls
2456 1484 Pls
2463 1483 Pls
2470 1499 Pls
2476 1513 Pls
2483 1470 Pls
2490 1564 Pls
2497 1495 Pls
2511 1505 Pls
2518 1478 Pls
2525 1484 Pls
2532 1564 Pls
2539 1491 Pls
2546 1510 Pls
2553 1476 Pls
2560 1484 Pls
2567 1471 Pls
2574 1516 Pls
2580 1483 Pls
2587 1498 Pls
2594 1506 Pls
2601 1564 Pls
2608 1511 Pls
2615 1507 Pls
2622 1471 Pls
2629 1522 Pls
2636 1495 Pls
2643 1484 Pls
2650 1502 Pls
2657 1564 Pls
2664 1490 Pls
2671 1489 Pls
2678 1485 Pls
2685 1508 Pls
2691 1499 Pls
2698 1514 Pls
2705 1477 Pls
2712 1564 Pls
2719 1518 Pls
2726 1499 Pls
2733 1500 Pls
2740 1486 Pls
2747 1512 Pls
2754 1486 Pls
2761 1564 Pls
2768 1509 Pls
2775 1491 Pls
2782 1511 Pls
2789 1507 Pls
2796 1502 Pls
2802 1476 Pls
2809 1564 Pls
2816 1516 Pls
2823 1494 Pls
2830 1498 Pls
2837 1521 Pls
2844 1483 Pls
2851 1517 Pls
2858 1564 Pls
2865 1493 Pls
2872 1514 Pls
2879 1488 Pls
2886 1518 Pls
2893 1500 Pls
2900 1507 Pls
2906 1564 Pls
2913 1484 Pls
2920 1519 Pls
2927 1498 Pls
2934 1564 Pls
2941 2084 Pls
2948 1564 Pls
2955 1510 Pls
2962 1490 Pls
2969 1504 Pls
2976 1508 Pls
2983 1506 Pls
2990 1493 Pls
2997 1517 Pls
3004 1564 Pls
3011 1502 Pls
3017 1522 Pls
3024 1512 Pls
3031 1501 Pls
3038 1505 Pls
3045 1510 Pls
3052 1532 Pls
3059 1564 Pls
3066 1510 Pls
3073 1532 Pls
3080 1516 Pls
3087 1506 Pls
3094 1524 Pls
3101 1507 Pls
3108 1515 Pls
3115 1499 Pls
3122 1564 Pls
3128 1511 Pls
3135 1515 Pls
3142 1516 Pls
3149 1502 Pls
3156 1500 Pls
3163 1512 Pls
3170 1504 Pls
3177 1563 Pls
3184 1489 Pls
3191 1501 Pls
3198 1522 Pls
3205 3260 Pls
3219 2061 Pls
3226 1494 Pls
3232 1493 Pls
3239 1514 Pls
3246 1508 Pls
3253 1519 Pls
3260 1519 Pls
3267 1516 Pls
3274 1537 Pls
3281 1519 Pls
3288 1519 Pls
3295 1564 Pls
3302 1541 Pls
3309 1511 Pls
3316 1522 Pls
3323 1502 Pls
3330 1538 Pls
3337 1508 Pls
3343 1514 Pls
3350 1518 Pls
3357 2700 Pls
3364 1564 Pls
3371 1514 Pls
3378 1506 Pls
3385 1517 Pls
3392 1518 Pls
3399 1523 Pls
3406 1522 Pls
3413 1523 Pls
3420 1531 Pls
3427 1540 Pls
3434 1516 Pls
3441 1513 Pls
3448 1564 Pls
3454 2112 Pls
3461 1564 Pls
3468 1516 Pls
3475 1505 Pls
3482 1526 Pls
3489 1497 Pls
3496 1541 Pls
3503 1522 Pls
3510 1513 Pls
3517 1551 Pls
3524 1512 Pls
3531 1564 Pls
3538 1529 Pls
3545 1546 Pls
3552 1526 Pls
3558 1509 Pls
3565 1523 Pls
3572 1527 Pls
3579 1520 Pls
3586 1533 Pls
3593 1515 Pls
3600 1564 Pls
3607 1507 Pls
3614 1538 Pls
3621 1541 Pls
3628 1502 Pls
3635 1536 Pls
3642 1542 Pls
3649 1525 Pls
3656 1522 Pls
3663 1535 Pls
3669 1541 Pls
3676 1508 Pls
3683 1521 Pls
3690 1548 Pls
3697 1522 Pls
3704 1516 Pls
3711 1525 Pls
3718 1564 Pls
3725 1534 Pls
3732 1526 Pls
3739 1522 Pls
3746 1542 Pls
3753 1527 Pls
3760 1547 Pls
3767 1523 Pls
3774 1564 Pls
3780 1532 Pls
3787 1536 Pls
3794 1536 Pls
3801 1527 Pls
3808 1524 Pls
3815 1564 Pls
3822 1539 Pls
3829 1527 Pls
3836 1532 Pls
3843 1540 Pls
3850 1533 Pls
3857 1564 Pls
3864 1562 Pls
3871 1516 Pls
3878 1558 Pls
3885 1585 Pls
3891 1564 Pls
3898 1536 Pls
3905 1520 Pls
3912 1560 Pls
3919 1529 Pls
3926 1546 Pls
3933 1564 Pls
3940 1580 Pls
3947 1531 Pls
3954 1522 Pls
3961 1545 Pls
3968 1532 Pls
3975 1549 Pls
3982 1564 Pls
3989 1585 Pls
3995 1555 Pls
4002 1537 Pls
4009 1570 Pls
4016 1531 Pls
4023 1564 Pls
4030 1541 Pls
4037 1540 Pls
4044 1538 Pls
4051 1529 Pls
4058 1530 Pls
4065 1564 Pls
4072 1507 Pls
4079 1540 Pls
4086 1565 Pls
4093 1532 Pls
4100 1534 Pls
4106 1564 Pls
4113 1564 Pls
4120 1528 Pls
4127 1547 Pls
4134 1568 Pls
4141 1564 Pls
4148 1548 Pls
4155 1560 Pls
4162 1542 Pls
4169 1554 Pls
4176 1564 Pls
4183 1557 Pls
4190 1549 Pls
4197 1531 Pls
4204 1535 Pls
4211 1564 Pls
4217 1545 Pls
4224 1542 Pls
4231 1548 Pls
4238 1541 Pls
4245 1537 Pls
4252 1564 Pls
4259 1546 Pls
4266 1553 Pls
4273 1545 Pls
4280 1542 Pls
4287 1566 Pls
4294 1564 Pls
4301 1534 Pls
4308 1540 Pls
4315 1534 Pls
4321 1551 Pls
4328 1564 Pls
4335 1556 Pls
4342 1562 Pls
4349 1560 Pls
4356 1543 Pls
4363 1564 Pls
4370 1576 Pls
4377 1536 Pls
4384 1556 Pls
4391 1568 Pls
4398 1543 Pls
4405 1564 Pls
4412 1548 Pls
4419 1555 Pls
4426 1537 Pls
4432 1531 Pls
4439 1553 Pls
4446 1564 Pls
4453 1561 Pls
4460 1555 Pls
4467 1559 Pls
4474 1563 Pls
4481 1564 Pls
4488 1561 Pls
4495 1558 Pls
4502 1535 Pls
4509 1564 Pls
4516 1567 Pls
4523 1564 Pls
4530 1566 Pls
4537 1541 Pls
4543 1559 Pls
4550 1536 Pls
4557 1564 Pls
4564 1547 Pls
4571 1546 Pls
4578 1572 Pls
4585 2202 Pls
4592 1559 Pls
4599 1552 Pls
4606 1598 Pls
4613 1585 Pls
4620 1561 Pls
4627 2838 Pls
4634 1573 Pls
4641 1537 Pls
4647 1562 Pls
4654 1592 Pls
4661 1536 Pls
4668 1568 Pls
4675 1565 Pls
4682 1546 Pls
4689 1568 Pls
4696 1564 Pls
4703 1585 Pls
4710 1555 Pls
4717 1569 Pls
4724 1560 Pls
4731 1562 Pls
4738 1570 Pls
4745 1562 Pls
4752 1570 Pls
4758 1564 Pls
4765 1559 Pls
4772 1560 Pls
4779 1543 Pls
4786 1551 Pls
4793 1564 Pls
4800 1555 Pls
4807 1573 Pls
4814 1556 Pls
4821 1566 Pls
4828 1580 Pls
4835 1564 Pls
4842 1573 Pls
4849 1558 Pls
4856 1575 Pls
4863 1564 Pls
4869 1581 Pls
4876 1558 Pls
4883 1579 Pls
4890 1570 Pls
4897 1550 Pls
4904 1564 Pls
4911 1556 Pls
4918 1569 Pls
4925 1585 Pls
4932 1562 Pls
4939 1564 Pls
4946 1569 Pls
4953 2224 Pls
4960 1564 Pls
4967 1555 Pls
4973 1564 Pls
4980 2216 Pls
4987 1574 Pls
4994 1585 Pls
5001 1569 Pls
5008 1558 Pls
5015 1551 Pls
5022 2200 Pls
5029 1581 Pls
5036 1573 Pls
5043 1566 Pls
5050 1576 Pls
5057 2216 Pls
5064 1554 Pls
5071 1578 Pls
5078 1567 Pls
5084 1553 Pls
5091 1573 Pls
5098 1570 Pls
5105 1591 Pls
5112 1579 Pls
5119 1564 Pls
5126 1566 Pls
5133 1563 Pls
5140 1570 Pls
5147 1570 Pls
5154 1593 Pls
5161 1563 Pls
5168 1576 Pls
5175 1582 Pls
5182 1564 Pls
5189 1588 Pls
5195 1567 Pls
5202 1578 Pls
5209 1564 Pls
5216 2828 Pls
5223 1564 Pls
5230 1564 Pls
5237 1593 Pls
5244 1564 Pls
5251 1576 Pls
5258 1545 Pls
5265 1581 Pls
5272 1571 Pls
5279 1592 Pls
5286 1566 Pls
5293 1584 Pls
5299 1583 Pls
5306 1579 Pls
5313 1581 Pls
5320 1602 Pls
5327 1596 Pls
5334 2237 Pls
5341 1583 Pls
5348 1596 Pls
5355 2251 Pls
5362 1580 Pls
5369 2223 Pls
5376 2204 Pls
5383 1583 Pls
5390 1587 Pls
5397 2229 Pls
5404 1588 Pls
5410 1608 Pls
5417 1567 Pls
5424 1599 Pls
5431 1589 Pls
5438 2258 Pls
5445 1594 Pls
5452 1595 Pls
5459 1590 Pls
5466 1586 Pls
5473 1564 Pls
5480 1582 Pls
5487 1583 Pls
5494 1589 Pls
5501 1563 Pls
5508 1611 Pls
5515 1569 Pls
5521 1595 Pls
5528 1564 Pls
5535 1581 Pls
5542 1595 Pls
5549 1573 Pls
5556 1606 Pls
5563 1593 Pls
5570 1588 Pls
5577 1605 Pls
5584 1578 Pls
5591 1564 Pls
5598 1609 Pls
5605 1575 Pls
5612 1589 Pls
5619 1576 Pls
5625 1613 Pls
5632 1599 Pls
5639 1599 Pls
5646 1585 Pls
5653 1564 Pls
5660 1599 Pls
5667 1597 Pls
5674 1603 Pls
5681 1604 Pls
5688 1577 Pls
5695 1629 Pls
5702 1582 Pls
5709 1603 Pls
5716 1602 Pls
5723 1585 Pls
5730 1603 Pls
5736 1590 Pls
5743 1604 Pls
5750 1608 Pls
5757 1597 Pls
5764 1564 Pls
5771 1602 Pls
5778 1589 Pls
5785 1588 Pls
5792 1625 Pls
5799 1615 Pls
5806 1593 Pls
5813 1618 Pls
5820 1588 Pls
5827 1604 Pls
5834 1564 Pls
5841 1590 Pls
5847 1597 Pls
5854 1563 Pls
5861 1599 Pls
5868 1612 Pls
5875 1564 Pls
5882 1609 Pls
5889 1602 Pls
5896 1607 Pls
5903 1588 Pls
5910 1600 Pls
5917 1564 Pls
5924 1614 Pls
5931 1593 Pls
5938 1597 Pls
5945 1597 Pls
5952 1609 Pls
5958 1564 Pls
5965 1598 Pls
5972 1603 Pls
5979 1592 Pls
5986 1629 Pls
5993 1582 Pls
6000 1619 Pls
6007 1564 Pls
6014 1610 Pls
6021 1609 Pls
6028 1608 Pls
6035 1628 Pls
6042 1564 Pls
6049 1603 Pls
6056 1616 Pls
6062 1598 Pls
6069 1612 Pls
6076 1564 Pls
6083 1601 Pls
6090 1623 Pls
6097 1591 Pls
6104 1564 Pls
6111 1600 Pls
6118 1596 Pls
6125 1606 Pls
6132 1605 Pls
6139 1564 Pls
6146 1604 Pls
6153 1602 Pls
6160 1610 Pls
6167 1602 Pls
6173 1564 Pls
6180 1600 Pls
6187 1616 Pls
6194 1598 Pls
6201 1564 Pls
6208 1618 Pls
6215 1617 Pls
6222 1635 Pls
6229 1564 Pls
6236 1628 Pls
6243 1600 Pls
6250 1616 Pls
6257 1619 Pls
6264 1564 Pls
6271 1619 Pls
6278 1634 Pls
6284 1599 Pls
6291 1564 Pls
6298 1598 Pls
6305 1608 Pls
6312 1614 Pls
6319 1582 Pls
6326 1611 Pls
6333 1601 Pls
6340 1564 Pls
6347 1615 Pls
6354 1619 Pls
6361 1629 Pls
6368 1615 Pls
6375 1617 Pls
6382 1622 Pls
6388 1608 Pls
6395 1564 Pls
6402 1607 Pls
6409 1604 Pls
6416 1625 Pls
6423 1610 Pls
6430 1637 Pls
6437 1564 Pls
6444 1617 Pls
6451 1627 Pls
6458 1610 Pls
6465 1636 Pls
6472 1564 Pls
6479 1637 Pls
6486 1601 Pls
6493 2248 Pls
6499 1564 Pls
6506 1613 Pls
6513 1625 Pls
6520 1564 Pls
6527 1609 Pls
6534 1612 Pls
6541 1634 Pls
6548 1634 Pls
6555 1564 Pls
6562 1646 Pls
6569 1614 Pls
6576 1616 Pls
6583 1643 Pls
6590 1619 Pls
6597 1564 Pls
6604 1629 Pls
6610 1636 Pls
6617 1638 Pls
6624 1599 Pls
6631 1656 Pls
6638 1564 Pls
6645 1614 Pls
6652 1650 Pls
6659 1615 Pls
% End plot #1
1.000 UL
LTb
1110 4679 N
0 -3719 V
5549 0 V
0 3719 V
-5549 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Roman
