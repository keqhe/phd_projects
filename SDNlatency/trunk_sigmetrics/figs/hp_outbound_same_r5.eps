%!PS-Adobe-2.0 EPSF-2.0
%%Title: hp_outbound_same_r5.eps
%%Creator: gnuplot 4.4 patchlevel 3
%%CreationDate: Sat Jan  4 23:50:02 2014
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -100 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (hp_outbound_same_r5.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 3)
  /Author (root)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat Jan  4 23:50:02 2014)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Roman) findfont 300 scalefont setfont
1.000 UL
LTb
1830 1310 M
63 0 V
4766 0 R
-63 0 V
stroke
1650 1310 M
[ [(Roman) 300.0 0.0 true true 0 ( 0)]
] -100.0 MRshow
1.000 UL
LTb
1830 1914 M
63 0 V
4766 0 R
-63 0 V
stroke
1650 1914 M
[ [(Roman) 300.0 0.0 true true 0 ( 10000)]
] -100.0 MRshow
1.000 UL
LTb
1830 2518 M
63 0 V
4766 0 R
-63 0 V
stroke
1650 2518 M
[ [(Roman) 300.0 0.0 true true 0 ( 20000)]
] -100.0 MRshow
1.000 UL
LTb
1830 3121 M
63 0 V
4766 0 R
-63 0 V
stroke
1650 3121 M
[ [(Roman) 300.0 0.0 true true 0 ( 30000)]
] -100.0 MRshow
1.000 UL
LTb
1830 3725 M
63 0 V
4766 0 R
-63 0 V
stroke
1650 3725 M
[ [(Roman) 300.0 0.0 true true 0 ( 40000)]
] -100.0 MRshow
1.000 UL
LTb
1830 4329 M
63 0 V
4766 0 R
-63 0 V
stroke
1650 4329 M
[ [(Roman) 300.0 0.0 true true 0 ( 50000)]
] -100.0 MRshow
1.000 UL
LTb
1830 1310 M
0 63 V
0 2956 R
0 -63 V
stroke
1830 1010 M
[ [(Roman) 300.0 0.0 true true 0 ( 0)]
] -100.0 MCshow
1.000 UL
LTb
2474 1310 M
0 63 V
0 2956 R
0 -63 V
stroke
2474 1010 M
[ [(Roman) 300.0 0.0 true true 0 ( 100)]
] -100.0 MCshow
1.000 UL
LTb
3118 1310 M
0 63 V
0 2956 R
0 -63 V
stroke
3118 1010 M
[ [(Roman) 300.0 0.0 true true 0 ( 200)]
] -100.0 MCshow
1.000 UL
LTb
3762 1310 M
0 63 V
0 2956 R
0 -63 V
stroke
3762 1010 M
[ [(Roman) 300.0 0.0 true true 0 ( 300)]
] -100.0 MCshow
1.000 UL
LTb
4405 1310 M
0 63 V
0 2956 R
0 -63 V
stroke
4405 1010 M
[ [(Roman) 300.0 0.0 true true 0 ( 400)]
] -100.0 MCshow
1.000 UL
LTb
5049 1310 M
0 63 V
0 2956 R
0 -63 V
stroke
5049 1010 M
[ [(Roman) 300.0 0.0 true true 0 ( 500)]
] -100.0 MCshow
1.000 UL
LTb
5693 1310 M
0 63 V
0 2956 R
0 -63 V
stroke
5693 1010 M
[ [(Roman) 300.0 0.0 true true 0 ( 600)]
] -100.0 MCshow
1.000 UL
LTb
6337 1310 M
0 63 V
0 2956 R
0 -63 V
stroke
6337 1010 M
[ [(Roman) 300.0 0.0 true true 0 ( 700)]
] -100.0 MCshow
1.000 UL
LTb
1.000 UL
LTb
1830 4329 N
0 -3019 V
4829 0 V
0 3019 V
-4829 0 V
Z stroke
LCb setrgbcolor
240 2819 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Roman) 300.0 0.0 true true 0 (latency \(ms\))]
] -100.0 MCshow
grestore
LTb
LCb setrgbcolor
4244 560 M
[ [(Roman) 300.0 0.0 true true 0 (openflow rule #)]
] -100.0 MCshow
LTb
1.000 UP
1.000 UL
LTb
% Begin plot #1
0.500 UP
1.000 UL
LT0
LCb setrgbcolor
5336 4116 M
[ [(Roman) 300.0 0.0 true true 0 (insertion rate = 5/s)]
] -100.0 MRshow
LT0
1836 1319 Pls
1843 1310 Pls
1849 1310 Pls
1856 1310 Pls
1862 1310 Pls
1869 1310 Pls
1875 1310 Pls
1882 1310 Pls
1888 1310 Pls
1894 1310 Pls
1901 1310 Pls
1907 1310 Pls
1914 1310 Pls
1920 1310 Pls
1927 1310 Pls
1933 1310 Pls
1939 1311 Pls
1946 1312 Pls
1952 1311 Pls
1959 1316 Pls
1965 1313 Pls
1972 1342 Pls
1978 1342 Pls
1985 1320 Pls
1991 1313 Pls
1997 1316 Pls
2004 1311 Pls
2010 1322 Pls
2017 1312 Pls
2023 1317 Pls
2030 1313 Pls
2036 1312 Pls
2042 1312 Pls
2049 1313 Pls
2055 1313 Pls
2062 1315 Pls
2068 1311 Pls
2075 1316 Pls
2081 1314 Pls
2088 1312 Pls
2094 1311 Pls
2100 1313 Pls
2107 1313 Pls
2113 1315 Pls
2120 1314 Pls
2126 1310 Pls
2133 1315 Pls
2139 1316 Pls
2145 1311 Pls
2152 1311 Pls
2158 1314 Pls
2165 1310 Pls
2171 1311 Pls
2178 1310 Pls
2184 1313 Pls
2191 1311 Pls
2197 1312 Pls
2203 1314 Pls
2210 1312 Pls
2216 1312 Pls
2223 1315 Pls
2229 1311 Pls
2236 1313 Pls
2242 1312 Pls
2249 1312 Pls
2255 1312 Pls
2261 1315 Pls
2268 1311 Pls
2274 1311 Pls
2281 1320 Pls
2287 1314 Pls
2294 1320 Pls
2300 1312 Pls
2306 1323 Pls
2313 1317 Pls
2319 1311 Pls
2326 1313 Pls
2332 1316 Pls
2339 1312 Pls
2345 1312 Pls
2352 1312 Pls
2358 1315 Pls
2364 1316 Pls
2371 1323 Pls
2377 1314 Pls
2384 1311 Pls
2390 1314 Pls
2397 1312 Pls
2403 1321 Pls
2409 1317 Pls
2416 1312 Pls
2422 1311 Pls
2429 1312 Pls
2435 1312 Pls
2442 1323 Pls
2448 1312 Pls
2455 1314 Pls
2461 1312 Pls
2467 1312 Pls
2474 1310 Pls
2480 1331 Pls
2487 1319 Pls
2493 1313 Pls
2500 1311 Pls
2506 1312 Pls
2512 1311 Pls
2519 1314 Pls
2525 1314 Pls
2532 1313 Pls
2538 1311 Pls
2545 1315 Pls
2551 1311 Pls
2558 1313 Pls
2564 1311 Pls
2570 1314 Pls
2577 1313 Pls
2583 1314 Pls
2590 1311 Pls
2596 1316 Pls
2603 1312 Pls
2609 1314 Pls
2616 1310 Pls
2622 1313 Pls
2628 1311 Pls
2635 1313 Pls
2641 1310 Pls
2648 1316 Pls
2654 1316 Pls
2661 1313 Pls
2667 1311 Pls
2673 1314 Pls
2680 1310 Pls
2686 1322 Pls
2693 1312 Pls
2699 1313 Pls
2706 1317 Pls
2712 1317 Pls
2719 1312 Pls
2725 1336 Pls
2731 1314 Pls
2738 1314 Pls
2744 1311 Pls
2751 1315 Pls
2757 1311 Pls
2764 1313 Pls
2770 1311 Pls
2776 1316 Pls
2783 1310 Pls
2789 1315 Pls
2796 1311 Pls
2802 1315 Pls
2809 1325 Pls
2815 1314 Pls
2822 1312 Pls
2828 1317 Pls
2834 1315 Pls
2841 1316 Pls
2847 1310 Pls
2854 1314 Pls
2860 1311 Pls
2867 1314 Pls
2873 1311 Pls
2880 1315 Pls
2886 1311 Pls
2892 1316 Pls
2899 1312 Pls
2905 1315 Pls
2912 1311 Pls
2918 1315 Pls
2925 1313 Pls
2931 1317 Pls
2937 1318 Pls
2944 1318 Pls
2950 1319 Pls
2957 1315 Pls
2963 1312 Pls
2970 1319 Pls
2976 1311 Pls
2983 1318 Pls
2989 1312 Pls
2995 1315 Pls
3002 1311 Pls
3008 1315 Pls
3015 1310 Pls
3021 1319 Pls
3028 1311 Pls
3034 1316 Pls
3040 1315 Pls
3047 1317 Pls
3053 1311 Pls
3060 1317 Pls
3066 1310 Pls
3073 1315 Pls
3079 1311 Pls
3086 1317 Pls
3092 1316 Pls
3098 1317 Pls
3105 1311 Pls
3111 1316 Pls
3118 1330 Pls
3124 1324 Pls
3131 1311 Pls
3137 1317 Pls
3143 1318 Pls
3150 1317 Pls
3156 1311 Pls
3163 1316 Pls
3169 1312 Pls
3176 1317 Pls
3182 1312 Pls
3189 1318 Pls
3195 1310 Pls
3201 1316 Pls
3208 1315 Pls
3214 1317 Pls
3221 1311 Pls
3227 1317 Pls
3234 1311 Pls
3240 1317 Pls
3247 1312 Pls
3253 1318 Pls
3259 1315 Pls
3266 1320 Pls
3272 1311 Pls
3279 1330 Pls
3285 1318 Pls
3292 1318 Pls
3298 1315 Pls
3304 1318 Pls
3311 1311 Pls
3317 1321 Pls
3324 1318 Pls
3330 1319 Pls
3337 1310 Pls
3343 1324 Pls
3350 1317 Pls
3356 1324 Pls
3362 1324 Pls
3369 1322 Pls
3375 1316 Pls
3382 1318 Pls
3388 1312 Pls
3395 1319 Pls
3401 1311 Pls
3407 1319 Pls
3414 1312 Pls
3420 1320 Pls
3427 1318 Pls
3433 1319 Pls
3440 1311 Pls
3446 1318 Pls
3453 1310 Pls
3459 1321 Pls
3465 1311 Pls
3472 1320 Pls
3478 1315 Pls
3485 1321 Pls
3491 1311 Pls
3498 1320 Pls
3504 1311 Pls
3510 1320 Pls
3517 1311 Pls
3523 1319 Pls
3530 1311 Pls
3536 1320 Pls
3543 1310 Pls
3549 1320 Pls
3556 1311 Pls
3562 1321 Pls
3568 1311 Pls
3575 1321 Pls
3581 1313 Pls
3588 1320 Pls
3594 1312 Pls
3601 1324 Pls
3607 1312 Pls
3614 1321 Pls
3620 1311 Pls
3626 1322 Pls
3633 1312 Pls
3639 1320 Pls
3646 1311 Pls
3652 1321 Pls
3659 1311 Pls
3665 1324 Pls
3671 1311 Pls
3678 1321 Pls
3684 1312 Pls
3691 1323 Pls
3697 1311 Pls
3704 1321 Pls
3710 1311 Pls
3717 1321 Pls
3723 1311 Pls
3729 1323 Pls
3736 1311 Pls
3742 1323 Pls
3749 1313 Pls
3755 1321 Pls
3762 1329 Pls
3768 1328 Pls
3774 1317 Pls
3781 1321 Pls
3787 1311 Pls
3794 1322 Pls
3800 1310 Pls
3807 1386 Pls
3813 1323 Pls
3820 1360 Pls
3826 1313 Pls
3832 1336 Pls
3839 1327 Pls
3845 1323 Pls
3852 1312 Pls
3858 1323 Pls
3865 1312 Pls
3871 1326 Pls
3877 1316 Pls
3884 1323 Pls
3890 1313 Pls
3897 1323 Pls
3903 1311 Pls
3910 1323 Pls
3916 1312 Pls
3923 1325 Pls
3929 1312 Pls
3935 1324 Pls
3942 1314 Pls
3948 1323 Pls
3955 1312 Pls
3961 1324 Pls
3968 1315 Pls
3974 1324 Pls
3981 1316 Pls
3987 1328 Pls
3993 1315 Pls
4000 1327 Pls
4006 1314 Pls
4013 1325 Pls
4019 1314 Pls
4026 1325 Pls
4032 1313 Pls
4038 1327 Pls
4045 1315 Pls
4051 1325 Pls
4058 1314 Pls
4064 1326 Pls
4071 1314 Pls
4077 1328 Pls
4084 1314 Pls
4090 1326 Pls
4096 1316 Pls
4103 1326 Pls
4109 1314 Pls
4116 1327 Pls
4122 1315 Pls
4129 1327 Pls
4135 1315 Pls
4141 1329 Pls
4148 1316 Pls
4154 1327 Pls
4161 1317 Pls
4167 1327 Pls
4174 1320 Pls
4180 1330 Pls
4187 1324 Pls
4193 1328 Pls
4199 1316 Pls
4206 1328 Pls
4212 1316 Pls
4219 1343 Pls
4225 1319 Pls
4232 1327 Pls
4238 1321 Pls
4245 1329 Pls
4251 1317 Pls
4257 1329 Pls
4264 1316 Pls
4270 1327 Pls
4277 1316 Pls
4283 1329 Pls
4290 1320 Pls
4296 1329 Pls
4302 1319 Pls
4309 1330 Pls
4315 1320 Pls
4322 1338 Pls
4328 1319 Pls
4335 1329 Pls
4341 1318 Pls
4348 1332 Pls
4354 1318 Pls
4360 1330 Pls
4367 1319 Pls
4373 1334 Pls
4380 1317 Pls
4386 1334 Pls
4393 1318 Pls
4399 1329 Pls
4405 1319 Pls
4412 1330 Pls
4418 1321 Pls
4425 1333 Pls
4431 1318 Pls
4438 1331 Pls
4444 1320 Pls
4451 1335 Pls
4457 1319 Pls
4463 1331 Pls
4470 1332 Pls
4476 1334 Pls
4483 1318 Pls
4489 1332 Pls
4496 1319 Pls
4502 1333 Pls
4508 1320 Pls
4515 1333 Pls
4521 1321 Pls
4528 1331 Pls
4534 1323 Pls
4541 1331 Pls
4547 1319 Pls
4554 1332 Pls
4560 1321 Pls
4566 1338 Pls
4573 1322 Pls
4579 1334 Pls
4586 1320 Pls
4592 1334 Pls
4599 1320 Pls
4605 1334 Pls
4612 1321 Pls
4618 1334 Pls
4624 1326 Pls
4631 1339 Pls
4637 1324 Pls
4644 1339 Pls
4650 1322 Pls
4657 1334 Pls
4663 1323 Pls
4669 1334 Pls
4676 1329 Pls
4682 1341 Pls
4689 1326 Pls
4695 1334 Pls
4702 1327 Pls
4708 1334 Pls
4715 1331 Pls
4721 1339 Pls
4727 1322 Pls
4734 1342 Pls
4740 1329 Pls
4747 1334 Pls
4753 1327 Pls
4760 1341 Pls
4766 1328 Pls
4772 1337 Pls
4779 1336 Pls
4785 1340 Pls
4792 1329 Pls
4798 1338 Pls
4805 1326 Pls
4811 1345 Pls
4818 1328 Pls
4824 1340 Pls
4830 1331 Pls
4837 1342 Pls
4843 1332 Pls
4850 1343 Pls
4856 1334 Pls
4863 1347 Pls
4869 1333 Pls
4875 1352 Pls
4882 1347 Pls
4888 1350 Pls
4895 1338 Pls
4901 1352 Pls
4908 1351 Pls
4914 1357 Pls
4921 1344 Pls
4927 1362 Pls
4933 1355 Pls
4940 1361 Pls
4946 1354 Pls
4953 1364 Pls
4959 1354 Pls
4966 1368 Pls
4972 1363 Pls
4979 1378 Pls
4985 1368 Pls
4991 1378 Pls
4998 1374 Pls
5004 1383 Pls
5011 1373 Pls
5017 1395 Pls
5024 1377 Pls
5030 1392 Pls
5036 1379 Pls
5043 1398 Pls
5049 1387 Pls
5056 1404 Pls
5062 1390 Pls
5069 1421 Pls
5075 1395 Pls
5082 1412 Pls
5088 1416 Pls
5094 1420 Pls
5101 1408 Pls
5107 1424 Pls
5114 1414 Pls
5120 1433 Pls
5127 1418 Pls
5133 1437 Pls
5139 1427 Pls
5146 1443 Pls
5152 1431 Pls
5159 1451 Pls
5165 1442 Pls
5172 1464 Pls
5178 1445 Pls
5185 1472 Pls
5191 1456 Pls
5197 1473 Pls
5204 1462 Pls
5210 1480 Pls
5217 1468 Pls
5223 1493 Pls
5230 1477 Pls
5236 1496 Pls
5242 1484 Pls
5249 1510 Pls
5255 1499 Pls
5262 1519 Pls
5268 1506 Pls
5275 1523 Pls
5281 1516 Pls
5288 1537 Pls
5294 1519 Pls
5300 1543 Pls
5307 1532 Pls
5313 1552 Pls
5320 1543 Pls
5326 1560 Pls
5333 1551 Pls
5339 1570 Pls
5346 1560 Pls
5352 1583 Pls
5358 1568 Pls
5365 1591 Pls
5371 1579 Pls
5378 1602 Pls
5384 1592 Pls
5391 1615 Pls
5397 1603 Pls
5403 1627 Pls
5410 1612 Pls
5416 1635 Pls
5423 1623 Pls
5429 1647 Pls
5436 1637 Pls
5442 1659 Pls
5449 1647 Pls
5455 1670 Pls
5461 1664 Pls
5468 1684 Pls
5474 1674 Pls
5481 1694 Pls
5487 1689 Pls
5494 1719 Pls
5500 1698 Pls
5506 1723 Pls
5513 1711 Pls
5519 1735 Pls
5526 1726 Pls
5532 1771 Pls
5539 1738 Pls
5545 1762 Pls
5552 1751 Pls
5558 1781 Pls
5564 1764 Pls
5571 1796 Pls
5577 1782 Pls
5584 1810 Pls
5590 1793 Pls
5597 1822 Pls
5603 1809 Pls
5609 1837 Pls
5616 1827 Pls
5622 1858 Pls
5629 1837 Pls
5635 1864 Pls
5642 1860 Pls
5648 1882 Pls
5655 1869 Pls
5661 1896 Pls
5667 1885 Pls
5674 1915 Pls
5680 1902 Pls
5687 1931 Pls
5693 1918 Pls
5700 1948 Pls
5706 1935 Pls
5713 1964 Pls
5719 1956 Pls
5725 1981 Pls
5732 1968 Pls
5738 1998 Pls
5745 1991 Pls
5751 2023 Pls
5758 2006 Pls
5764 2033 Pls
5770 2024 Pls
5777 2052 Pls
5783 2040 Pls
5790 2074 Pls
5796 2064 Pls
5803 2094 Pls
5809 2082 Pls
5816 2116 Pls
5822 2101 Pls
5828 2129 Pls
5835 2115 Pls
5841 2145 Pls
5848 2135 Pls
5854 2166 Pls
5861 2154 Pls
5867 2190 Pls
5873 2174 Pls
5880 2207 Pls
5886 2195 Pls
5893 2232 Pls
5899 2215 Pls
5906 2252 Pls
5912 2239 Pls
5919 2269 Pls
5925 2256 Pls
5931 2293 Pls
5938 2282 Pls
5944 2314 Pls
5951 2300 Pls
5957 2340 Pls
5964 2331 Pls
5970 2356 Pls
5977 2346 Pls
5983 2378 Pls
5989 2366 Pls
5996 2402 Pls
6002 2387 Pls
6009 2430 Pls
6015 2412 Pls
6022 2445 Pls
6028 2434 Pls
6034 2473 Pls
6041 2456 Pls
6047 2494 Pls
6054 2485 Pls
6060 2518 Pls
6067 2504 Pls
6073 2540 Pls
6080 2532 Pls
6086 2568 Pls
6092 2554 Pls
6099 2589 Pls
6105 2578 Pls
6112 2621 Pls
6118 2605 Pls
6125 2643 Pls
6131 2627 Pls
6137 2672 Pls
6144 2654 Pls
6150 2692 Pls
6157 2682 Pls
6163 2718 Pls
6170 2705 Pls
6176 2746 Pls
6183 2733 Pls
6189 2770 Pls
6195 2760 Pls
6202 2798 Pls
6208 2785 Pls
6215 2828 Pls
6221 2814 Pls
6228 2852 Pls
6234 2841 Pls
6240 2881 Pls
6247 2867 Pls
6253 2909 Pls
6260 2895 Pls
6266 2935 Pls
6273 2928 Pls
6279 2964 Pls
6286 2954 Pls
6292 2991 Pls
6298 2983 Pls
6305 3026 Pls
6311 3009 Pls
6318 3052 Pls
6324 3040 Pls
6331 3085 Pls
6337 3068 Pls
6344 3110 Pls
6350 3101 Pls
6356 3144 Pls
6363 3131 Pls
6369 3171 Pls
6376 3159 Pls
6382 3210 Pls
6389 3205 Pls
6395 3234 Pls
6401 3223 Pls
6408 3263 Pls
6414 3254 Pls
6421 3301 Pls
6427 3283 Pls
6434 3330 Pls
6440 3318 Pls
6447 3360 Pls
6453 3348 Pls
6459 3393 Pls
6466 3382 Pls
6472 3426 Pls
6479 3414 Pls
6485 3458 Pls
6492 3446 Pls
6498 3493 Pls
6504 3484 Pls
6511 3528 Pls
6517 3515 Pls
6524 3563 Pls
6530 3547 Pls
5907 4116 Pls
% End plot #1
1.000 UL
LTb
1830 4329 N
0 -3019 V
4829 0 V
0 3019 V
-4829 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Roman
