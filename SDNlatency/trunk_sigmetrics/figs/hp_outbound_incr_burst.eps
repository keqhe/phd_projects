%!PS-Adobe-2.0 EPSF-2.0
%%Title: hp_outbound_incr_burst.eps
%%Creator: gnuplot 4.4 patchlevel 3
%%CreationDate: Sun Jan  5 00:05:14 2014
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -100 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (hp_outbound_incr_burst.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 3)
  /Author (root)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sun Jan  5 00:05:14 2014)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Roman) findfont 300 scalefont setfont
1.000 UL
LTb
1830 1310 M
63 0 V
4766 0 R
-63 0 V
stroke
1650 1310 M
[ [(Roman) 300.0 0.0 true true 0 ( 0)]
] -100.0 MRshow
1.000 UL
LTb
1830 2065 M
63 0 V
4766 0 R
-63 0 V
stroke
1650 2065 M
[ [(Roman) 300.0 0.0 true true 0 ( 5000)]
] -100.0 MRshow
1.000 UL
LTb
1830 2820 M
63 0 V
4766 0 R
-63 0 V
stroke
1650 2820 M
[ [(Roman) 300.0 0.0 true true 0 ( 10000)]
] -100.0 MRshow
1.000 UL
LTb
1830 3574 M
63 0 V
4766 0 R
-63 0 V
stroke
1650 3574 M
[ [(Roman) 300.0 0.0 true true 0 ( 15000)]
] -100.0 MRshow
1.000 UL
LTb
1830 4329 M
63 0 V
4766 0 R
-63 0 V
stroke
1650 4329 M
[ [(Roman) 300.0 0.0 true true 0 ( 20000)]
] -100.0 MRshow
1.000 UL
LTb
1830 1310 M
0 63 V
0 2956 R
0 -63 V
stroke
1830 1010 M
[ [(Roman) 300.0 0.0 true true 0 ( 0)]
] -100.0 MCshow
1.000 UL
LTb
2474 1310 M
0 63 V
0 2956 R
0 -63 V
stroke
2474 1010 M
[ [(Roman) 300.0 0.0 true true 0 ( 100)]
] -100.0 MCshow
1.000 UL
LTb
3118 1310 M
0 63 V
0 2956 R
0 -63 V
stroke
3118 1010 M
[ [(Roman) 300.0 0.0 true true 0 ( 200)]
] -100.0 MCshow
1.000 UL
LTb
3762 1310 M
0 63 V
0 2956 R
0 -63 V
stroke
3762 1010 M
[ [(Roman) 300.0 0.0 true true 0 ( 300)]
] -100.0 MCshow
1.000 UL
LTb
4405 1310 M
0 63 V
0 2956 R
0 -63 V
stroke
4405 1010 M
[ [(Roman) 300.0 0.0 true true 0 ( 400)]
] -100.0 MCshow
1.000 UL
LTb
5049 1310 M
0 63 V
0 2956 R
0 -63 V
stroke
5049 1010 M
[ [(Roman) 300.0 0.0 true true 0 ( 500)]
] -100.0 MCshow
1.000 UL
LTb
5693 1310 M
0 63 V
0 2956 R
0 -63 V
stroke
5693 1010 M
[ [(Roman) 300.0 0.0 true true 0 ( 600)]
] -100.0 MCshow
1.000 UL
LTb
6337 1310 M
0 63 V
0 2956 R
0 -63 V
stroke
6337 1010 M
[ [(Roman) 300.0 0.0 true true 0 ( 700)]
] -100.0 MCshow
1.000 UL
LTb
1.000 UL
LTb
1830 4329 N
0 -3019 V
4829 0 V
0 3019 V
-4829 0 V
Z stroke
LCb setrgbcolor
240 2819 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Roman) 300.0 0.0 true true 0 (latency \(ms\))]
] -100.0 MCshow
grestore
LTb
LCb setrgbcolor
4244 560 M
[ [(Roman) 300.0 0.0 true true 0 (openflow rule #)]
] -100.0 MCshow
LTb
1.000 UP
1.000 UL
LTb
% Begin plot #1
0.500 UP
1.000 UL
LT0
LCb setrgbcolor
5336 4116 M
[ [(Roman) 300.0 0.0 true true 0 (insertion rate = burst)]
] -100.0 MRshow
LT0
1836 1338 Pls
1843 1338 Pls
1849 1339 Pls
1856 1339 Pls
1862 1340 Pls
1869 1340 Pls
1875 1341 Pls
1882 1341 Pls
1888 1342 Pls
1894 1343 Pls
1901 1343 Pls
1907 1344 Pls
1914 1344 Pls
1920 1345 Pls
1927 1346 Pls
1933 1346 Pls
1939 1347 Pls
1946 1347 Pls
1952 1348 Pls
1959 1349 Pls
1965 1350 Pls
1972 1350 Pls
1978 1351 Pls
1985 1351 Pls
1991 1352 Pls
1997 1352 Pls
2004 1352 Pls
2010 1353 Pls
2017 1353 Pls
2023 1353 Pls
2030 1354 Pls
2036 1354 Pls
2042 1355 Pls
2049 1355 Pls
2055 1355 Pls
2062 1356 Pls
2068 1356 Pls
2075 1356 Pls
2081 1357 Pls
2088 1357 Pls
2094 1358 Pls
2100 1358 Pls
2107 1358 Pls
2113 1359 Pls
2120 1359 Pls
2126 1359 Pls
2133 1360 Pls
2139 1360 Pls
2145 1361 Pls
2152 1361 Pls
2158 1362 Pls
2165 1362 Pls
2171 1363 Pls
2178 1363 Pls
2184 1364 Pls
2191 1364 Pls
2197 1366 Pls
2203 1366 Pls
2210 1367 Pls
2216 1367 Pls
2223 1369 Pls
2229 1369 Pls
2236 1370 Pls
2242 1370 Pls
2249 1371 Pls
2255 1371 Pls
2261 1372 Pls
2268 1372 Pls
2274 1373 Pls
2281 1379 Pls
2287 1385 Pls
2294 1385 Pls
2300 1383 Pls
2306 1390 Pls
2313 1377 Pls
2319 1383 Pls
2326 1378 Pls
2332 1379 Pls
2339 1386 Pls
2345 1382 Pls
2352 1379 Pls
2358 1384 Pls
2364 1385 Pls
2371 1384 Pls
2377 1383 Pls
2384 1395 Pls
2390 1383 Pls
2397 1387 Pls
2403 1386 Pls
2409 1392 Pls
2416 1390 Pls
2422 1385 Pls
2429 1391 Pls
2435 1391 Pls
2442 1391 Pls
2448 1390 Pls
2455 1393 Pls
2461 1409 Pls
2467 1389 Pls
2474 1394 Pls
2480 1443 Pls
2487 1400 Pls
2493 1406 Pls
2500 1407 Pls
2506 1408 Pls
2512 1434 Pls
2519 1414 Pls
2525 1413 Pls
2532 1437 Pls
2538 1412 Pls
2545 1415 Pls
2551 1414 Pls
2558 1424 Pls
2564 1439 Pls
2570 1433 Pls
2577 1436 Pls
2583 1435 Pls
2590 1425 Pls
2596 1425 Pls
2603 1420 Pls
2609 1424 Pls
2616 1437 Pls
2622 1425 Pls
2628 1424 Pls
2635 1437 Pls
2641 1433 Pls
2648 1436 Pls
2654 1438 Pls
2661 1433 Pls
2667 1443 Pls
2673 1438 Pls
2680 1427 Pls
2686 1438 Pls
2693 1434 Pls
2699 1440 Pls
2706 1431 Pls
2712 1434 Pls
2719 1434 Pls
2725 1433 Pls
2731 1435 Pls
2738 1436 Pls
2744 1435 Pls
2751 1436 Pls
2757 1437 Pls
2764 1438 Pls
2770 1438 Pls
2776 1441 Pls
2783 1444 Pls
2789 1450 Pls
2796 1441 Pls
2802 1470 Pls
2809 1443 Pls
2815 1462 Pls
2822 1467 Pls
2828 1447 Pls
2834 1446 Pls
2841 1464 Pls
2847 1449 Pls
2854 1450 Pls
2860 1462 Pls
2867 1462 Pls
2873 1451 Pls
2880 1465 Pls
2886 1463 Pls
2892 1462 Pls
2899 1455 Pls
2905 1462 Pls
2912 1463 Pls
2918 1459 Pls
2925 1462 Pls
2931 1463 Pls
2937 1471 Pls
2944 1470 Pls
2950 1468 Pls
2957 1472 Pls
2963 1470 Pls
2970 1471 Pls
2976 1483 Pls
2983 1482 Pls
2989 1485 Pls
2995 1505 Pls
3002 1500 Pls
3008 1480 Pls
3015 1482 Pls
3021 1500 Pls
3028 1482 Pls
3034 1502 Pls
3040 1503 Pls
3047 1509 Pls
3053 1502 Pls
3060 1499 Pls
3066 1502 Pls
3073 1502 Pls
3079 1507 Pls
3086 1499 Pls
3092 1501 Pls
3098 1504 Pls
3105 1503 Pls
3111 1501 Pls
3118 1500 Pls
3124 1510 Pls
3131 1504 Pls
3137 1501 Pls
3143 1505 Pls
3150 1501 Pls
3156 1501 Pls
3163 1508 Pls
3169 1507 Pls
3176 1505 Pls
3182 1505 Pls
3189 1531 Pls
3195 1509 Pls
3201 1511 Pls
3208 1509 Pls
3214 1533 Pls
3221 1528 Pls
3227 1541 Pls
3234 1514 Pls
3240 1540 Pls
3247 1527 Pls
3253 1532 Pls
3259 1523 Pls
3266 1527 Pls
3272 1528 Pls
3279 1531 Pls
3285 1530 Pls
3292 1533 Pls
3298 1538 Pls
3304 1538 Pls
3311 1541 Pls
3317 1538 Pls
3324 1540 Pls
3330 1539 Pls
3337 1540 Pls
3343 1541 Pls
3350 1542 Pls
3356 1555 Pls
3362 1544 Pls
3369 1547 Pls
3375 1550 Pls
3382 1548 Pls
3388 1548 Pls
3395 1554 Pls
3401 1553 Pls
3407 1553 Pls
3414 1558 Pls
3420 1559 Pls
3427 1589 Pls
3433 1561 Pls
3440 1561 Pls
3446 1588 Pls
3453 1605 Pls
3459 1590 Pls
3465 1591 Pls
3472 1588 Pls
3478 1588 Pls
3485 1590 Pls
3491 1588 Pls
3498 1591 Pls
3504 1591 Pls
3510 1591 Pls
3517 1609 Pls
3523 1589 Pls
3530 1588 Pls
3536 1589 Pls
3543 1588 Pls
3549 1593 Pls
3556 1591 Pls
3562 1592 Pls
3568 1593 Pls
3575 1624 Pls
3581 1610 Pls
3588 1606 Pls
3594 1606 Pls
3601 1613 Pls
3607 1606 Pls
3614 1606 Pls
3620 1612 Pls
3626 1624 Pls
3633 1606 Pls
3639 1609 Pls
3646 1610 Pls
3652 1613 Pls
3659 1612 Pls
3665 1635 Pls
3671 1628 Pls
3678 1625 Pls
3684 1618 Pls
3691 1629 Pls
3697 1624 Pls
3704 1628 Pls
3710 1629 Pls
3717 1630 Pls
3723 1626 Pls
3729 1648 Pls
3736 1628 Pls
3742 1634 Pls
3749 1637 Pls
3755 1642 Pls
3762 1641 Pls
3768 1643 Pls
3774 1658 Pls
3781 1651 Pls
3787 1649 Pls
3794 1651 Pls
3800 1652 Pls
3807 1658 Pls
3813 1658 Pls
3820 1659 Pls
3826 1659 Pls
3832 1671 Pls
3839 1661 Pls
3845 1664 Pls
3852 1664 Pls
3858 1669 Pls
3865 1667 Pls
3871 1670 Pls
3877 1670 Pls
3884 1674 Pls
3890 1673 Pls
3897 1677 Pls
3903 1676 Pls
3910 1679 Pls
3916 1701 Pls
3923 1699 Pls
3929 1685 Pls
3935 1698 Pls
3942 1730 Pls
3948 1703 Pls
3955 1703 Pls
3961 1713 Pls
3968 1693 Pls
3974 1703 Pls
3981 1727 Pls
3987 1798 Pls
3993 1793 Pls
4000 1718 Pls
4006 1711 Pls
4013 1718 Pls
4019 1717 Pls
4026 1717 Pls
4032 1735 Pls
4038 1735 Pls
4045 1756 Pls
4051 1726 Pls
4058 1726 Pls
4064 1730 Pls
4071 1727 Pls
4077 1731 Pls
4084 1732 Pls
4090 1734 Pls
4096 1735 Pls
4103 1752 Pls
4109 1758 Pls
4116 1754 Pls
4122 1743 Pls
4129 1752 Pls
4135 1757 Pls
4141 1752 Pls
4148 1757 Pls
4154 1754 Pls
4161 1791 Pls
4167 1760 Pls
4174 1784 Pls
4180 1793 Pls
4187 1761 Pls
4193 1785 Pls
4199 1786 Pls
4206 1787 Pls
4212 1787 Pls
4219 1790 Pls
4225 1790 Pls
4232 1774 Pls
4238 1787 Pls
4245 1788 Pls
4251 1786 Pls
4257 1789 Pls
4264 1784 Pls
4270 1789 Pls
4277 1788 Pls
4283 1793 Pls
4290 1791 Pls
4296 1797 Pls
4302 1796 Pls
4309 1805 Pls
4315 1808 Pls
4322 1808 Pls
4328 1810 Pls
4335 1809 Pls
4341 1808 Pls
4348 1820 Pls
4354 1824 Pls
4360 1831 Pls
4367 1825 Pls
4373 1817 Pls
4380 1819 Pls
4386 1821 Pls
4393 1821 Pls
4399 1865 Pls
4405 1866 Pls
4412 1851 Pls
4418 1833 Pls
4425 1851 Pls
4431 1864 Pls
4438 1853 Pls
4444 1861 Pls
4451 1866 Pls
4457 1841 Pls
4463 1854 Pls
4470 1855 Pls
4476 1850 Pls
4483 1851 Pls
4489 1852 Pls
4496 1861 Pls
4502 1863 Pls
4508 1861 Pls
4515 1864 Pls
4521 1864 Pls
4528 1868 Pls
4534 1867 Pls
4541 1908 Pls
4547 1899 Pls
4554 1895 Pls
4560 1878 Pls
4566 1895 Pls
4573 1896 Pls
4579 1907 Pls
4586 1897 Pls
4592 1896 Pls
4599 1896 Pls
4605 1895 Pls
4612 1898 Pls
4618 1897 Pls
4624 1897 Pls
4631 1907 Pls
4637 1906 Pls
4644 1909 Pls
4650 1910 Pls
4657 1912 Pls
4663 1918 Pls
4669 1914 Pls
4676 1913 Pls
4682 1917 Pls
4689 1931 Pls
4695 1926 Pls
4702 1933 Pls
4708 1939 Pls
4715 1926 Pls
4721 1929 Pls
4727 1937 Pls
4734 1936 Pls
4740 1935 Pls
4747 1944 Pls
4753 1943 Pls
4760 1946 Pls
4766 1946 Pls
4772 1952 Pls
4779 1949 Pls
4785 1960 Pls
4792 1961 Pls
4798 1957 Pls
4805 1961 Pls
4811 1965 Pls
4818 1966 Pls
4824 1968 Pls
4830 1968 Pls
4837 1973 Pls
4843 1973 Pls
4850 1980 Pls
4856 1998 Pls
4863 1985 Pls
4869 1983 Pls
4875 1996 Pls
4882 1991 Pls
4888 1991 Pls
4895 1991 Pls
4901 1998 Pls
4908 1995 Pls
4914 2002 Pls
4921 2000 Pls
4927 2005 Pls
4933 2013 Pls
4940 2009 Pls
4946 2014 Pls
4953 2026 Pls
4959 2029 Pls
4966 2050 Pls
4972 2042 Pls
4979 2040 Pls
4985 2027 Pls
4991 2031 Pls
4998 2037 Pls
5004 2034 Pls
5011 2041 Pls
5017 2052 Pls
5024 2040 Pls
5030 2056 Pls
5036 2050 Pls
5043 2049 Pls
5049 2054 Pls
5056 2065 Pls
5062 2061 Pls
5069 2058 Pls
5075 2064 Pls
5082 2066 Pls
5088 2076 Pls
5094 2073 Pls
5101 2080 Pls
5107 2085 Pls
5114 2081 Pls
5120 2079 Pls
5127 2078 Pls
5133 2093 Pls
5139 2105 Pls
5146 2091 Pls
5152 2097 Pls
5159 2096 Pls
5165 2103 Pls
5172 2103 Pls
5178 2108 Pls
5185 2114 Pls
5191 2111 Pls
5197 2127 Pls
5204 2128 Pls
5210 2124 Pls
5217 2126 Pls
5223 2130 Pls
5230 2127 Pls
5236 2148 Pls
5242 2143 Pls
5249 2150 Pls
5255 2139 Pls
5262 2146 Pls
5268 2166 Pls
5275 2153 Pls
5281 2165 Pls
5288 2176 Pls
5294 2159 Pls
5300 2174 Pls
5307 2172 Pls
5313 2174 Pls
5320 2188 Pls
5326 2183 Pls
5333 2184 Pls
5339 2206 Pls
5346 2207 Pls
5352 2201 Pls
5358 2209 Pls
5365 2216 Pls
5371 2206 Pls
5378 2214 Pls
5384 2219 Pls
5391 2238 Pls
5397 2234 Pls
5403 2242 Pls
5410 2233 Pls
5416 2247 Pls
5423 2240 Pls
5429 2248 Pls
5436 2256 Pls
5442 2272 Pls
5449 2258 Pls
5455 2264 Pls
5461 2289 Pls
5468 2278 Pls
5474 2279 Pls
5481 2285 Pls
5487 2293 Pls
5494 2296 Pls
5500 2299 Pls
5506 2311 Pls
5513 2307 Pls
5519 2319 Pls
5526 2318 Pls
5532 2335 Pls
5539 2328 Pls
5545 2339 Pls
5552 2338 Pls
5558 2352 Pls
5564 2349 Pls
5571 2359 Pls
5577 2368 Pls
5584 2432 Pls
5590 2375 Pls
5597 2410 Pls
5603 2388 Pls
5609 2399 Pls
5616 2418 Pls
5622 2408 Pls
5629 2417 Pls
5635 2421 Pls
5642 2482 Pls
5648 2434 Pls
5655 2439 Pls
5661 2448 Pls
5667 2480 Pls
5674 2477 Pls
5680 2460 Pls
5687 2469 Pls
5693 2484 Pls
5700 2483 Pls
5706 2487 Pls
5713 2501 Pls
5719 2505 Pls
5725 2512 Pls
5732 2517 Pls
5738 2529 Pls
5745 2531 Pls
5751 2542 Pls
5758 2549 Pls
5764 2570 Pls
5770 2561 Pls
5777 2575 Pls
5783 2586 Pls
5790 2599 Pls
5796 2609 Pls
5803 2607 Pls
5809 2608 Pls
5816 2621 Pls
5822 2626 Pls
5828 2647 Pls
5835 2650 Pls
5841 2655 Pls
5848 2671 Pls
5854 2695 Pls
5861 2694 Pls
5867 2689 Pls
5873 2701 Pls
5880 2717 Pls
5886 2726 Pls
5893 2734 Pls
5899 2733 Pls
5906 2783 Pls
5912 2754 Pls
5919 2784 Pls
5925 2776 Pls
5931 2783 Pls
5938 2797 Pls
5944 2815 Pls
5951 2809 Pls
5957 2821 Pls
5964 2828 Pls
5970 2852 Pls
5977 2862 Pls
5983 2865 Pls
5989 2884 Pls
5996 2892 Pls
6002 2899 Pls
6009 2903 Pls
6015 2923 Pls
6022 2925 Pls
6028 2932 Pls
6034 2954 Pls
6041 2957 Pls
6047 2968 Pls
6054 2992 Pls
6060 2999 Pls
6067 2996 Pls
6073 3013 Pls
6080 3023 Pls
6086 3033 Pls
6092 3048 Pls
6099 3056 Pls
6105 3065 Pls
6112 3089 Pls
6118 3091 Pls
6125 3113 Pls
6131 3117 Pls
6137 3131 Pls
6144 3161 Pls
6150 3175 Pls
6157 3167 Pls
6163 3181 Pls
6170 3199 Pls
6176 3208 Pls
6183 3217 Pls
6189 3234 Pls
6195 3255 Pls
6202 3273 Pls
6208 3269 Pls
6215 3286 Pls
6221 3295 Pls
6228 3314 Pls
6234 3326 Pls
6240 3340 Pls
6247 3351 Pls
6253 3379 Pls
6260 3397 Pls
6266 3402 Pls
6273 3406 Pls
6279 3427 Pls
6286 3441 Pls
6292 3466 Pls
6298 3469 Pls
6305 3487 Pls
6311 3494 Pls
6318 3516 Pls
6324 3524 Pls
6331 3546 Pls
6337 3562 Pls
6344 3574 Pls
6350 3586 Pls
6356 3602 Pls
6363 3615 Pls
6369 3653 Pls
6376 3647 Pls
6382 3673 Pls
6389 3687 Pls
6395 3707 Pls
6401 3712 Pls
6408 3734 Pls
6414 3764 Pls
6421 3775 Pls
6427 3780 Pls
6434 3802 Pls
6440 3812 Pls
6447 3836 Pls
6453 3853 Pls
6459 3876 Pls
6466 3899 Pls
6472 3908 Pls
6479 3926 Pls
6485 3937 Pls
6492 3956 Pls
6498 3980 Pls
6504 3997 Pls
6511 4017 Pls
6517 4032 Pls
6524 4045 Pls
6530 4072 Pls
5907 4116 Pls
% End plot #1
1.000 UL
LTb
1830 4329 N
0 -3019 V
4829 0 V
0 3019 V
-4829 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Roman
