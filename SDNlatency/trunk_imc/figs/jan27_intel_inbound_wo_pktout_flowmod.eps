%!PS-Adobe-2.0 EPSF-2.0
%%Title: jan27_intel_inbound_wo_pktout_flowmod.eps
%%Creator: gnuplot 4.4 patchlevel 3
%%CreationDate: Thu Jan 30 02:14:28 2014
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded true def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 10.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -133 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (jan27_intel_inbound_wo_pktout_flowmod.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 3)
  /Author (root)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Thu Jan 30 02:14:28 2014)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Roman) findfont 400 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
0.50 0.50 0.50 C 1960 1280 M
4519 0 V
stroke
LTb
1960 1280 M
63 0 V
stroke
1720 1280 M
[ [(Roman) 400.0 0.0 true true 0 ( 0)]
] -133.3 MRshow
1.000 UL
LTb
1.000 UL
LTa
0.50 0.50 0.50 C 1960 1936 M
4519 0 V
stroke
LTb
1960 1936 M
63 0 V
stroke
1720 1936 M
[ [(Roman) 400.0 0.0 true true 0 ( 20)]
] -133.3 MRshow
1.000 UL
LTb
1.000 UL
LTa
0.50 0.50 0.50 C 1960 2592 M
4519 0 V
stroke
LTb
1960 2592 M
63 0 V
stroke
1720 2592 M
[ [(Roman) 400.0 0.0 true true 0 ( 40)]
] -133.3 MRshow
1.000 UL
LTb
1.000 UL
LTa
0.50 0.50 0.50 C 1960 3247 M
4519 0 V
stroke
LTb
1960 3247 M
63 0 V
stroke
1720 3247 M
[ [(Roman) 400.0 0.0 true true 0 ( 60)]
] -133.3 MRshow
1.000 UL
LTb
1.000 UL
LTa
0.50 0.50 0.50 C 1960 3903 M
4519 0 V
stroke
LTb
1960 3903 M
63 0 V
stroke
1720 3903 M
[ [(Roman) 400.0 0.0 true true 0 ( 80)]
] -133.3 MRshow
1.000 UL
LTb
1.000 UL
LTa
0.50 0.50 0.50 C 1960 4559 M
4519 0 V
stroke
LTb
1960 4559 M
63 0 V
stroke
1720 4559 M
[ [(Roman) 400.0 0.0 true true 0 ( 100)]
] -133.3 MRshow
1.000 UL
LTb
1.000 UL
LTa
0.50 0.50 0.50 C 1960 1280 M
0 3279 V
stroke
LTb
1960 1280 M
0 63 V
stroke
1960 880 M
[ [(Roman) 400.0 0.0 true true 0 ( 0)]
] -133.3 MCshow
1.000 UL
LTb
1.000 UL
LTa
0.50 0.50 0.50 C 2864 1280 M
0 3279 V
stroke
LTb
2864 1280 M
0 63 V
stroke
2864 880 M
[ [(Roman) 400.0 0.0 true true 0 ( 200)]
] -133.3 MCshow
1.000 UL
LTb
1.000 UL
LTa
0.50 0.50 0.50 C 3768 1280 M
0 3279 V
stroke
LTb
3768 1280 M
0 63 V
stroke
3768 880 M
[ [(Roman) 400.0 0.0 true true 0 ( 400)]
] -133.3 MCshow
1.000 UL
LTb
1.000 UL
LTa
0.50 0.50 0.50 C 4671 1280 M
0 3279 V
stroke
LTb
4671 1280 M
0 63 V
stroke
4671 880 M
[ [(Roman) 400.0 0.0 true true 0 ( 600)]
] -133.3 MCshow
1.000 UL
LTb
1.000 UL
LTa
0.50 0.50 0.50 C 5575 1280 M
0 63 V
0 3216 V
stroke
LTb
5575 1280 M
0 63 V
stroke
5575 880 M
[ [(Roman) 400.0 0.0 true true 0 ( 800)]
] -133.3 MCshow
1.000 UL
LTb
1.000 UL
LTa
0.50 0.50 0.50 C 6479 1280 M
0 3279 V
stroke
LTb
6479 1280 M
0 63 V
stroke
6479 880 M
[ [(Roman) 400.0 0.0 true true 0 ( 1000)]
] -133.3 MCshow
1.000 UL
LTb
1.000 UL
LTb
1960 4559 N
0 -3279 V
4519 0 V
0 3279 V
-4519 0 V
Z stroke
LCb setrgbcolor
320 2919 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Roman) 400.0 0.0 true true 0 (inbound delay\(ms\))]
] -133.3 MCshow
grestore
LTb
LCb setrgbcolor
4219 280 M
[ [(Roman) 400.0 0.0 true true 0 (flow #)]
] -133.3 MCshow
LTb
1.000 UP
1.000 UL
LTb
% Begin plot #1
2.000 UP
2.000 UL
LT0
0.63 0.00 0.00 C 1965 1301 Pls
1969 1304 Pls
1974 1302 Pls
1978 1332 Pls
1983 1302 Pls
1987 1304 Pls
1992 1308 Pls
1996 1310 Pls
2001 1301 Pls
2005 1920 Pls
2010 1302 Pls
2014 1306 Pls
2019 1302 Pls
2023 1302 Pls
2028 2622 Pls
2032 1301 Pls
2037 1312 Pls
2041 1306 Pls
2046 1309 Pls
2050 1302 Pls
2055 1302 Pls
2059 1302 Pls
2064 1310 Pls
2068 1300 Pls
2073 1303 Pls
2077 1304 Pls
2082 1304 Pls
2087 1303 Pls
2091 1303 Pls
2096 1301 Pls
2100 1302 Pls
2105 1309 Pls
2109 1304 Pls
2114 1302 Pls
2118 1302 Pls
2123 1300 Pls
2127 1302 Pls
2132 1301 Pls
2136 1303 Pls
2141 1299 Pls
2145 1302 Pls
2150 1492 Pls
2154 1303 Pls
2159 1302 Pls
2163 1303 Pls
2168 1301 Pls
2172 1302 Pls
2177 1311 Pls
2181 1302 Pls
2186 1302 Pls
2190 1301 Pls
2195 1300 Pls
2200 1302 Pls
2204 1301 Pls
2209 1442 Pls
2213 1303 Pls
2218 1303 Pls
2222 1302 Pls
2227 1301 Pls
2231 1300 Pls
2236 1302 Pls
2240 1311 Pls
2245 1300 Pls
2249 1302 Pls
2254 1330 Pls
2258 1303 Pls
2263 1302 Pls
2267 1301 Pls
2272 1303 Pls
2276 1300 Pls
2281 1309 Pls
2285 1301 Pls
2290 1311 Pls
2294 1303 Pls
2299 1308 Pls
2303 1301 Pls
2308 1303 Pls
2312 2139 Pls
2317 1312 Pls
2322 1304 Pls
2326 2783 Pls
2331 1301 Pls
2335 1302 Pls
2340 1303 Pls
2344 1980 Pls
2349 1303 Pls
2353 1302 Pls
2358 1302 Pls
2362 1301 Pls
2367 1301 Pls
2371 1301 Pls
2376 1301 Pls
2380 1300 Pls
2385 1300 Pls
2389 1303 Pls
2394 1302 Pls
2398 1302 Pls
2403 1303 Pls
2407 1303 Pls
2412 1301 Pls
2416 1340 Pls
2421 1304 Pls
2425 1303 Pls
2430 1300 Pls
2434 1300 Pls
2439 1301 Pls
2444 1302 Pls
2448 1303 Pls
2453 1302 Pls
2457 1301 Pls
2462 1302 Pls
2466 1302 Pls
2471 1303 Pls
2475 1302 Pls
2480 1302 Pls
2484 1301 Pls
2489 1303 Pls
2493 1301 Pls
2498 2633 Pls
2502 1302 Pls
2507 1302 Pls
2511 1300 Pls
2516 1309 Pls
2520 1304 Pls
2525 1301 Pls
2529 1301 Pls
2534 1303 Pls
2538 1304 Pls
2543 1302 Pls
2547 1315 Pls
2552 1301 Pls
2557 1303 Pls
2561 1303 Pls
2566 1301 Pls
2570 2462 Pls
2575 1301 Pls
2579 1304 Pls
2584 1302 Pls
2588 1301 Pls
2593 1302 Pls
2597 1301 Pls
2602 1301 Pls
2606 1301 Pls
2611 1302 Pls
2615 1302 Pls
2620 1302 Pls
2624 1303 Pls
2629 1302 Pls
2633 1301 Pls
2638 1302 Pls
2642 1302 Pls
2647 1303 Pls
2651 1300 Pls
2656 1303 Pls
2660 1303 Pls
2665 1304 Pls
2669 1301 Pls
2674 1301 Pls
2679 1302 Pls
2683 1301 Pls
2688 1307 Pls
2692 1302 Pls
2697 1301 Pls
2701 1301 Pls
2706 1301 Pls
2710 1304 Pls
2715 1303 Pls
2719 3101 Pls
2724 1302 Pls
2728 1303 Pls
2733 1303 Pls
2737 1304 Pls
2742 1302 Pls
2746 1523 Pls
2751 1303 Pls
2755 1302 Pls
2760 1302 Pls
2764 1302 Pls
2769 1301 Pls
2773 1303 Pls
2778 1301 Pls
2782 1304 Pls
2787 1301 Pls
2791 1301 Pls
2796 1301 Pls
2801 1301 Pls
2805 1301 Pls
2810 1301 Pls
2814 1303 Pls
2819 1302 Pls
2823 1302 Pls
2828 1303 Pls
2832 1302 Pls
2837 1311 Pls
2841 1304 Pls
2846 1304 Pls
2850 1303 Pls
2855 1303 Pls
2859 1303 Pls
2864 1303 Pls
2868 1487 Pls
2873 1302 Pls
2877 1302 Pls
2882 1302 Pls
2886 1301 Pls
2891 2313 Pls
2895 1303 Pls
2900 1305 Pls
2904 1303 Pls
2909 1302 Pls
2914 1307 Pls
2918 1303 Pls
2923 1306 Pls
2927 1303 Pls
2932 1303 Pls
2936 1302 Pls
2941 1305 Pls
2945 1302 Pls
2950 1301 Pls
2954 1302 Pls
2959 1300 Pls
2963 1302 Pls
2968 1303 Pls
2972 1302 Pls
2977 1301 Pls
2981 1302 Pls
2986 1301 Pls
2990 1302 Pls
2995 1301 Pls
2999 1307 Pls
3004 1302 Pls
3008 1315 Pls
3013 1303 Pls
3017 1302 Pls
3022 1302 Pls
3026 1302 Pls
3031 1302 Pls
3036 1301 Pls
3040 1301 Pls
3045 1302 Pls
3049 1302 Pls
3054 1305 Pls
3058 1302 Pls
3063 1302 Pls
3067 1302 Pls
3072 1303 Pls
3076 1302 Pls
3081 1301 Pls
3085 1299 Pls
3090 1301 Pls
3094 1301 Pls
3099 1301 Pls
3103 1303 Pls
3108 1303 Pls
3112 1300 Pls
3117 1302 Pls
3121 1301 Pls
3126 1301 Pls
3130 1307 Pls
3135 1311 Pls
3139 1305 Pls
3144 1302 Pls
3148 1302 Pls
3153 1303 Pls
3158 1302 Pls
3162 1302 Pls
3167 1303 Pls
3171 1302 Pls
3176 1303 Pls
3180 1302 Pls
3185 1304 Pls
3189 1303 Pls
3194 1301 Pls
3198 1301 Pls
3203 1302 Pls
3207 1303 Pls
3212 1301 Pls
3216 1302 Pls
3221 1302 Pls
3225 1302 Pls
3230 1304 Pls
3234 1302 Pls
3239 1301 Pls
3243 1302 Pls
3248 1302 Pls
3252 1300 Pls
3257 1303 Pls
3261 1303 Pls
3266 1314 Pls
3271 1301 Pls
3275 1302 Pls
3280 1303 Pls
3284 1316 Pls
3289 1302 Pls
3293 1302 Pls
3298 1302 Pls
3302 1302 Pls
3307 1303 Pls
3311 1302 Pls
3316 2878 Pls
3320 1301 Pls
3325 1301 Pls
3329 1303 Pls
3334 1303 Pls
3338 1302 Pls
3343 1302 Pls
3347 1301 Pls
3352 1301 Pls
3356 1305 Pls
3361 1301 Pls
3365 1320 Pls
3370 1303 Pls
3374 1301 Pls
3379 1307 Pls
3383 1303 Pls
3388 1303 Pls
3393 1302 Pls
3397 1300 Pls
3402 1300 Pls
3406 1310 Pls
3411 1304 Pls
3415 1300 Pls
3420 1300 Pls
3424 1345 Pls
3429 1306 Pls
3433 1300 Pls
3438 1302 Pls
3442 2942 Pls
3447 1302 Pls
3451 1302 Pls
3456 1302 Pls
3460 1303 Pls
3465 1302 Pls
3469 1300 Pls
3474 1302 Pls
3478 1302 Pls
3483 1301 Pls
3487 1302 Pls
3492 1302 Pls
3496 1303 Pls
3501 1302 Pls
3505 1302 Pls
3510 1303 Pls
3515 1301 Pls
3519 1301 Pls
3524 1303 Pls
3528 1303 Pls
3533 1302 Pls
3537 1312 Pls
3542 1304 Pls
3546 1310 Pls
3551 1305 Pls
3555 1304 Pls
3560 1305 Pls
3564 1302 Pls
3569 1302 Pls
3573 1304 Pls
3578 1302 Pls
3582 1302 Pls
3587 1303 Pls
3591 1303 Pls
3596 1306 Pls
3600 1300 Pls
3605 1302 Pls
3609 1300 Pls
3614 1301 Pls
3618 1303 Pls
3623 1303 Pls
3628 1302 Pls
3632 1301 Pls
3637 1301 Pls
3641 1307 Pls
3646 1305 Pls
3650 1312 Pls
3655 1301 Pls
3659 1302 Pls
3664 1302 Pls
3668 1301 Pls
3673 1302 Pls
3677 1304 Pls
3682 1301 Pls
3686 1302 Pls
3691 1302 Pls
3695 1303 Pls
3700 1303 Pls
3704 1302 Pls
3709 1310 Pls
3713 1301 Pls
3718 1302 Pls
3722 1303 Pls
3727 1302 Pls
3731 1303 Pls
3736 1301 Pls
3740 1301 Pls
3745 1301 Pls
3750 1303 Pls
3754 1303 Pls
3759 1302 Pls
3763 1304 Pls
3768 1302 Pls
3772 1302 Pls
3777 1309 Pls
3781 1302 Pls
3786 1305 Pls
3790 1304 Pls
3795 1303 Pls
3799 1302 Pls
3804 1310 Pls
3808 1305 Pls
3813 1322 Pls
3817 1301 Pls
3822 1302 Pls
3826 1301 Pls
3831 1301 Pls
3835 1304 Pls
3840 1302 Pls
3844 1301 Pls
3849 1302 Pls
3853 1499 Pls
3858 1301 Pls
3862 1302 Pls
3867 1304 Pls
3872 1301 Pls
3876 1301 Pls
3881 1302 Pls
3885 1300 Pls
3890 1302 Pls
3894 1302 Pls
3899 1301 Pls
3903 1313 Pls
3908 1304 Pls
3912 1304 Pls
3917 1301 Pls
3921 1302 Pls
3926 1301 Pls
3930 1303 Pls
3935 1304 Pls
3939 1301 Pls
3944 1306 Pls
3948 1303 Pls
3953 1302 Pls
3957 1303 Pls
3962 1303 Pls
3966 1301 Pls
3971 1304 Pls
3975 1302 Pls
3980 1303 Pls
3985 1301 Pls
3989 1306 Pls
3994 3195 Pls
3998 1302 Pls
4003 1669 Pls
4007 1302 Pls
4012 1310 Pls
4016 1300 Pls
4021 1302 Pls
4025 1303 Pls
4030 1310 Pls
4034 1310 Pls
4039 1369 Pls
4043 1302 Pls
4048 1302 Pls
4052 1303 Pls
4057 1301 Pls
4061 1302 Pls
4066 1303 Pls
4070 1302 Pls
4075 1302 Pls
4079 1301 Pls
4084 1302 Pls
4088 1303 Pls
4093 1302 Pls
4097 1304 Pls
4102 1302 Pls
4107 1303 Pls
4111 1302 Pls
4116 1301 Pls
4120 1302 Pls
4125 1300 Pls
4129 1303 Pls
4134 1304 Pls
4138 2792 Pls
4143 1306 Pls
4147 1301 Pls
4152 1358 Pls
4156 1302 Pls
4161 1303 Pls
4165 1302 Pls
4170 1303 Pls
4174 1302 Pls
4179 1304 Pls
4183 1302 Pls
4188 1303 Pls
4192 1304 Pls
4197 1302 Pls
4201 1302 Pls
4206 1327 Pls
4210 1301 Pls
4215 1302 Pls
4220 1302 Pls
4224 1301 Pls
4229 1302 Pls
4233 1301 Pls
4238 1300 Pls
4242 1303 Pls
4247 1303 Pls
4251 1301 Pls
4256 1302 Pls
4260 1303 Pls
4265 1300 Pls
4269 1301 Pls
4274 1300 Pls
4278 1303 Pls
4283 1303 Pls
4287 1302 Pls
4292 1303 Pls
4296 1301 Pls
4301 1300 Pls
4305 1302 Pls
4310 1301 Pls
4314 1302 Pls
4319 1302 Pls
4323 1302 Pls
4328 1301 Pls
4332 1339 Pls
4337 1302 Pls
4342 1761 Pls
4346 1302 Pls
4351 1302 Pls
4355 1300 Pls
4360 1301 Pls
4364 1303 Pls
4369 1301 Pls
4373 1301 Pls
4378 1302 Pls
4382 1302 Pls
4387 1301 Pls
4391 1300 Pls
4396 1302 Pls
4400 1304 Pls
4405 1310 Pls
4409 1300 Pls
4414 1301 Pls
4418 1303 Pls
4423 1302 Pls
4427 1305 Pls
4432 1301 Pls
4436 1303 Pls
4441 1301 Pls
4445 1302 Pls
4450 1302 Pls
4454 1302 Pls
4459 1301 Pls
4464 1306 Pls
4468 1301 Pls
4473 1302 Pls
4477 1304 Pls
4482 1315 Pls
4486 1303 Pls
4491 1303 Pls
4495 1302 Pls
4500 1302 Pls
4504 1307 Pls
4509 1302 Pls
4513 1302 Pls
4518 1303 Pls
4522 1303 Pls
4527 1312 Pls
4531 1364 Pls
4536 1305 Pls
4540 1302 Pls
4545 1300 Pls
4549 1312 Pls
4554 1302 Pls
4558 1305 Pls
4563 1302 Pls
4567 1302 Pls
4572 1302 Pls
4577 1301 Pls
4581 1300 Pls
4586 1302 Pls
4590 1302 Pls
4595 1302 Pls
4599 1302 Pls
4604 1301 Pls
4608 1304 Pls
4613 1302 Pls
4617 1327 Pls
4622 1301 Pls
4626 1307 Pls
4631 1302 Pls
4635 1303 Pls
4640 1302 Pls
4644 1303 Pls
4649 1301 Pls
4653 1301 Pls
4658 1302 Pls
4662 1305 Pls
4667 1358 Pls
4671 1302 Pls
4676 1303 Pls
4680 1301 Pls
4685 1301 Pls
4689 1303 Pls
4694 1302 Pls
4699 1301 Pls
4703 1301 Pls
4708 1301 Pls
4712 1305 Pls
4717 2081 Pls
4721 1301 Pls
4726 1302 Pls
4730 1303 Pls
4735 1301 Pls
4739 1304 Pls
4744 1301 Pls
4748 1303 Pls
4753 1302 Pls
4757 1310 Pls
4762 1303 Pls
4766 1302 Pls
4771 1301 Pls
4775 1302 Pls
4780 1303 Pls
4784 1301 Pls
4789 1314 Pls
4793 1301 Pls
4798 1301 Pls
4802 1299 Pls
4807 1302 Pls
4811 1302 Pls
4816 1301 Pls
4821 1300 Pls
4825 1304 Pls
4830 1303 Pls
4834 1304 Pls
4839 1302 Pls
4843 1302 Pls
4848 1302 Pls
4852 1302 Pls
4857 1302 Pls
4861 1300 Pls
4866 1303 Pls
4870 1302 Pls
4875 1301 Pls
4879 2472 Pls
4884 1301 Pls
4888 1302 Pls
4893 1302 Pls
4897 1301 Pls
4902 1301 Pls
4906 1302 Pls
4911 1303 Pls
4915 1302 Pls
4920 1303 Pls
4924 2300 Pls
4929 1301 Pls
4934 2559 Pls
4938 1303 Pls
4943 1304 Pls
4947 1306 Pls
4952 1303 Pls
4956 1301 Pls
4961 1302 Pls
4965 1302 Pls
4970 1303 Pls
4974 1310 Pls
4979 1302 Pls
4983 1301 Pls
4988 1302 Pls
4992 1301 Pls
4997 1303 Pls
5001 1307 Pls
5006 1303 Pls
5010 1302 Pls
5015 1300 Pls
5019 1301 Pls
5024 1301 Pls
5028 1302 Pls
5033 1300 Pls
5037 1302 Pls
5042 1301 Pls
5046 1302 Pls
5051 1303 Pls
5056 1302 Pls
5060 1306 Pls
5065 1302 Pls
5069 1302 Pls
5074 1301 Pls
5078 1301 Pls
5083 1302 Pls
5087 1829 Pls
5092 1302 Pls
5096 1310 Pls
5101 1301 Pls
5105 1302 Pls
5110 1303 Pls
5114 1305 Pls
5119 1304 Pls
5123 1302 Pls
5128 1305 Pls
5132 1304 Pls
5137 1312 Pls
5141 1301 Pls
5146 1302 Pls
5150 1303 Pls
5155 1303 Pls
5159 1302 Pls
5164 1307 Pls
5168 1302 Pls
5173 1302 Pls
5178 1303 Pls
5182 1303 Pls
5187 1302 Pls
5191 1302 Pls
5196 1301 Pls
5200 1301 Pls
5205 1301 Pls
5209 1301 Pls
5214 1301 Pls
5218 1302 Pls
5223 1302 Pls
5227 1301 Pls
5232 1300 Pls
5236 1302 Pls
5241 1302 Pls
5245 1301 Pls
5250 1312 Pls
5254 1303 Pls
5259 1301 Pls
5263 1302 Pls
5268 1301 Pls
5272 1302 Pls
5277 1302 Pls
5281 1302 Pls
5286 1304 Pls
5291 1302 Pls
5295 1301 Pls
5300 1301 Pls
5304 1301 Pls
5309 1301 Pls
5313 1302 Pls
5318 1302 Pls
5322 1302 Pls
5327 1302 Pls
5331 1303 Pls
5336 1301 Pls
5340 1302 Pls
5345 1308 Pls
5349 1304 Pls
5354 1301 Pls
5358 1302 Pls
5363 1303 Pls
5367 1301 Pls
5372 1302 Pls
5376 1301 Pls
5381 1301 Pls
5385 3036 Pls
5390 1302 Pls
5394 1324 Pls
5399 1302 Pls
5403 1302 Pls
5408 1301 Pls
5413 1302 Pls
5417 1301 Pls
5422 1302 Pls
5426 1301 Pls
5431 1301 Pls
5435 1301 Pls
5440 1302 Pls
5444 1303 Pls
5449 1303 Pls
5453 1302 Pls
5458 1302 Pls
5462 1302 Pls
5467 1302 Pls
5471 1301 Pls
5476 1301 Pls
5480 2239 Pls
5485 1304 Pls
5489 1303 Pls
5494 1302 Pls
5498 1301 Pls
5503 1305 Pls
5507 1302 Pls
5512 1328 Pls
5516 1305 Pls
5521 1301 Pls
5525 1305 Pls
5530 1301 Pls
5535 1303 Pls
5539 1305 Pls
5544 1302 Pls
5548 1308 Pls
5553 1302 Pls
5557 1303 Pls
5562 1302 Pls
5566 1302 Pls
5571 1300 Pls
5575 1303 Pls
5580 1302 Pls
5584 2154 Pls
5589 1301 Pls
5593 1301 Pls
5598 1305 Pls
5602 1302 Pls
5607 1301 Pls
5611 1301 Pls
5616 1303 Pls
5620 1303 Pls
5625 1302 Pls
5629 1301 Pls
5634 1302 Pls
5638 1303 Pls
5643 1301 Pls
5648 1303 Pls
5652 1302 Pls
5657 1301 Pls
5661 1304 Pls
5666 1311 Pls
5670 1301 Pls
5675 1302 Pls
5679 1304 Pls
5684 1302 Pls
5688 1302 Pls
5693 1301 Pls
5697 1305 Pls
5702 2399 Pls
5706 1302 Pls
5711 1301 Pls
5715 1302 Pls
5720 1302 Pls
5724 1303 Pls
5729 1301 Pls
5733 1302 Pls
5738 1301 Pls
5742 1301 Pls
5747 1303 Pls
5751 1302 Pls
5756 1301 Pls
5760 1303 Pls
5765 1304 Pls
5770 1302 Pls
5774 1300 Pls
5779 1301 Pls
5783 1302 Pls
5788 1302 Pls
5792 1301 Pls
5797 1301 Pls
5801 1302 Pls
5806 1301 Pls
5810 1300 Pls
5815 1301 Pls
5819 1303 Pls
5824 1303 Pls
5828 1303 Pls
5833 1301 Pls
5837 1304 Pls
5842 1303 Pls
5846 1302 Pls
5851 1303 Pls
5855 1300 Pls
5860 1320 Pls
5864 1301 Pls
5869 1300 Pls
5873 1303 Pls
5878 1302 Pls
5882 1302 Pls
5887 1303 Pls
5892 1302 Pls
5896 1820 Pls
5901 1303 Pls
5905 1301 Pls
5910 1303 Pls
5914 1301 Pls
5919 1301 Pls
5923 1303 Pls
5928 1304 Pls
5932 1303 Pls
5937 1302 Pls
5941 1305 Pls
5946 1300 Pls
5950 1302 Pls
5955 2719 Pls
5959 1304 Pls
5964 1301 Pls
5968 1304 Pls
5973 1302 Pls
5977 1301 Pls
5982 1309 Pls
5986 1300 Pls
5991 1301 Pls
5995 1302 Pls
6000 1304 Pls
6005 1303 Pls
6009 1993 Pls
6014 1302 Pls
6018 1302 Pls
6023 1302 Pls
6027 1303 Pls
6032 1307 Pls
6036 1303 Pls
6041 1302 Pls
6045 1304 Pls
6050 1302 Pls
6054 1302 Pls
6059 1304 Pls
6063 1302 Pls
6068 1304 Pls
6072 1303 Pls
6077 1303 Pls
6081 1314 Pls
6086 1304 Pls
6090 1302 Pls
6095 1301 Pls
6099 1313 Pls
6104 1659 Pls
6108 1302 Pls
6113 1302 Pls
6117 1369 Pls
6122 1300 Pls
6127 1304 Pls
6131 1303 Pls
6136 1302 Pls
6140 1303 Pls
6145 1306 Pls
6149 1302 Pls
6154 1302 Pls
6158 1310 Pls
6163 1302 Pls
6167 1302 Pls
6172 1303 Pls
6176 1306 Pls
6181 1300 Pls
6185 1302 Pls
6190 1304 Pls
6194 1301 Pls
6199 1304 Pls
6203 1603 Pls
6208 1303 Pls
6212 1302 Pls
6217 1303 Pls
6221 1303 Pls
6226 1303 Pls
6230 1303 Pls
6235 1300 Pls
6239 1301 Pls
6244 1303 Pls
6249 1302 Pls
6253 1302 Pls
6258 1304 Pls
6262 1303 Pls
6267 1303 Pls
6271 1303 Pls
6276 1303 Pls
6280 1301 Pls
6285 1302 Pls
6289 1301 Pls
6294 1303 Pls
6298 1301 Pls
6303 1301 Pls
6307 1302 Pls
6312 1301 Pls
6316 1303 Pls
6321 1302 Pls
6325 1302 Pls
6330 1304 Pls
6334 1301 Pls
6339 1302 Pls
6343 1302 Pls
6348 1303 Pls
6352 1300 Pls
6357 1301 Pls
6362 1303 Pls
6366 1302 Pls
6371 1304 Pls
6375 1302 Pls
6380 1306 Pls
6384 1301 Pls
6389 1303 Pls
6393 1301 Pls
6398 1301 Pls
6402 1301 Pls
6407 2891 Pls
6411 1302 Pls
6416 1304 Pls
% End plot #1
1.000 UL
LTb
1960 4559 N
0 -3279 V
4519 0 V
0 3279 V
-4519 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Roman
